09/14 16:47:24 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/14 16:47:24 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=400,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco-wholebody/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='PoseVisualizationHook'))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 450
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='PReLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1024,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=225,
        begin=225,
        by_epoch=True,
        convert_to_iter_based=True,
        end=450,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 50
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=450, val_interval=100)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs'

09/14 16:47:26 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/14 16:47:26 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/14 16:47:29 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/14 16:47:29 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/14 16:47:29 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/14 16:47:29 - mmengine - WARNING - The prefix is not set in metric class NME.
09/14 16:47:29 - mmengine - INFO - load backbone. in model from: pth/dwpose/dw-ll-ucoco-384.pth
Loads checkpoint by local backend from path: pth/dwpose/dw-ll-ucoco-384.pth
09/14 16:47:29 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

09/14 16:47:29 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/14 16:47:29 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/14 16:47:29 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs.
09/14 16:48:10 - mmengine - INFO - Epoch(train)   [1][ 50/146]  base_lr: 2.452928e-05 lr: 2.452928e-05  eta: 14:51:37  time: 0.814894  data_time: 0.471815  memory: 16273  loss: 1.783680  loss_kpt: 1.783680  acc_pose: 0.011233
09/14 16:48:50 - mmengine - INFO - Epoch(train)   [1][100/146]  base_lr: 4.955405e-05 lr: 4.955405e-05  eta: 14:36:49  time: 0.789069  data_time: 0.475137  memory: 16273  loss: 0.868607  loss_kpt: 0.868607  acc_pose: 0.022498
09/14 16:49:26 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 16:50:06 - mmengine - INFO - Epoch(train)   [2][ 50/146]  base_lr: 9.760162e-05 lr: 9.760162e-05  eta: 14:30:20  time: 0.800699  data_time: 0.486745  memory: 16273  loss: 0.833411  loss_kpt: 0.833411  acc_pose: 0.032220
09/14 16:50:45 - mmengine - INFO - Epoch(train)   [2][100/146]  base_lr: 1.226264e-04 lr: 1.226264e-04  eta: 14:26:41  time: 0.783732  data_time: 0.469688  memory: 16273  loss: 0.828071  loss_kpt: 0.828071  acc_pose: 0.049419
09/14 16:51:21 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 16:52:01 - mmengine - INFO - Epoch(train)   [3][ 50/146]  base_lr: 1.706740e-04 lr: 1.706740e-04  eta: 14:24:07  time: 0.802633  data_time: 0.489038  memory: 16273  loss: 0.815004  loss_kpt: 0.815004  acc_pose: 0.038508
09/14 16:52:40 - mmengine - INFO - Epoch(train)   [3][100/146]  base_lr: 1.956987e-04 lr: 1.956987e-04  eta: 14:22:28  time: 0.786198  data_time: 0.469589  memory: 16273  loss: 0.811355  loss_kpt: 0.811355  acc_pose: 0.051509
09/14 16:53:15 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 16:53:56 - mmengine - INFO - Epoch(train)   [4][ 50/146]  base_lr: 2.437463e-04 lr: 2.437463e-04  eta: 14:20:05  time: 0.810865  data_time: 0.496385  memory: 16273  loss: 0.810502  loss_kpt: 0.810502  acc_pose: 0.044938
09/14 16:54:34 - mmengine - INFO - Epoch(train)   [4][100/146]  base_lr: 2.687711e-04 lr: 2.687711e-04  eta: 14:17:18  time: 0.770342  data_time: 0.453486  memory: 16273  loss: 0.808104  loss_kpt: 0.808104  acc_pose: 0.041937
09/14 16:55:11 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 16:55:51 - mmengine - INFO - Epoch(train)   [5][ 50/146]  base_lr: 3.168186e-04 lr: 3.168186e-04  eta: 14:17:28  time: 0.791267  data_time: 0.477278  memory: 16273  loss: 0.775688  loss_kpt: 0.775688  acc_pose: 0.062654
09/14 16:56:30 - mmengine - INFO - Epoch(train)   [5][100/146]  base_lr: 3.418434e-04 lr: 3.418434e-04  eta: 14:16:22  time: 0.785096  data_time: 0.472392  memory: 16273  loss: 0.753604  loss_kpt: 0.753604  acc_pose: 0.155904
09/14 16:57:06 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 16:57:46 - mmengine - INFO - Epoch(train)   [6][ 50/146]  base_lr: 3.898910e-04 lr: 3.898910e-04  eta: 14:15:17  time: 0.807215  data_time: 0.490588  memory: 16273  loss: 0.709445  loss_kpt: 0.709445  acc_pose: 0.254374
09/14 16:58:25 - mmengine - INFO - Epoch(train)   [6][100/146]  base_lr: 4.149158e-04 lr: 4.149158e-04  eta: 14:14:06  time: 0.782382  data_time: 0.468340  memory: 16273  loss: 0.674211  loss_kpt: 0.674211  acc_pose: 0.337485
09/14 16:59:00 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 16:59:40 - mmengine - INFO - Epoch(train)   [7][ 50/146]  base_lr: 4.629633e-04 lr: 4.629633e-04  eta: 14:11:22  time: 0.792247  data_time: 0.477622  memory: 16273  loss: 0.646644  loss_kpt: 0.646644  acc_pose: 0.460288
09/14 17:00:19 - mmengine - INFO - Epoch(train)   [7][100/146]  base_lr: 4.879881e-04 lr: 4.879881e-04  eta: 14:10:34  time: 0.786035  data_time: 0.471922  memory: 16273  loss: 0.625895  loss_kpt: 0.625895  acc_pose: 0.541995
09/14 17:00:38 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:00:55 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:01:35 - mmengine - INFO - Epoch(train)   [8][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:09:15  time: 0.796334  data_time: 0.481233  memory: 16273  loss: 0.605168  loss_kpt: 0.605168  acc_pose: 0.586830
09/14 17:02:15 - mmengine - INFO - Epoch(train)   [8][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:09:00  time: 0.796989  data_time: 0.482282  memory: 16273  loss: 0.597244  loss_kpt: 0.597244  acc_pose: 0.641699
09/14 17:02:51 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:03:30 - mmengine - INFO - Epoch(train)   [9][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:07:32  time: 0.793413  data_time: 0.479008  memory: 16273  loss: 0.574113  loss_kpt: 0.574113  acc_pose: 0.639875
09/14 17:04:10 - mmengine - INFO - Epoch(train)   [9][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:06:55  time: 0.789450  data_time: 0.474837  memory: 16273  loss: 0.562704  loss_kpt: 0.562704  acc_pose: 0.679839
09/14 17:04:45 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:05:25 - mmengine - INFO - Epoch(train)  [10][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:05:30  time: 0.808883  data_time: 0.494132  memory: 16273  loss: 0.559616  loss_kpt: 0.559616  acc_pose: 0.689502
09/14 17:06:04 - mmengine - INFO - Epoch(train)  [10][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:04:39  time: 0.783449  data_time: 0.469796  memory: 16273  loss: 0.543171  loss_kpt: 0.543171  acc_pose: 0.720536
09/14 17:06:40 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:06:40 - mmengine - INFO - Saving checkpoint at 10 epochs
09/14 17:07:22 - mmengine - INFO - Epoch(train)  [11][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:03:54  time: 0.808181  data_time: 0.490552  memory: 16273  loss: 0.536796  loss_kpt: 0.536796  acc_pose: 0.719813
09/14 17:08:01 - mmengine - INFO - Epoch(train)  [11][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:03:02  time: 0.782608  data_time: 0.468824  memory: 16273  loss: 0.536180  loss_kpt: 0.536180  acc_pose: 0.747516
09/14 17:08:37 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:09:17 - mmengine - INFO - Epoch(train)  [12][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:01:42  time: 0.798462  data_time: 0.483891  memory: 16273  loss: 0.526860  loss_kpt: 0.526860  acc_pose: 0.758515
09/14 17:09:56 - mmengine - INFO - Epoch(train)  [12][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 14:01:03  time: 0.788862  data_time: 0.473759  memory: 16273  loss: 0.528367  loss_kpt: 0.528367  acc_pose: 0.750365
09/14 17:10:32 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:11:12 - mmengine - INFO - Epoch(train)  [13][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:59:46  time: 0.793913  data_time: 0.479971  memory: 16273  loss: 0.527997  loss_kpt: 0.527997  acc_pose: 0.739105
09/14 17:11:51 - mmengine - INFO - Epoch(train)  [13][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:59:02  time: 0.786330  data_time: 0.469551  memory: 16273  loss: 0.517346  loss_kpt: 0.517346  acc_pose: 0.812169
09/14 17:12:27 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:13:07 - mmengine - INFO - Epoch(train)  [14][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:57:59  time: 0.810901  data_time: 0.496007  memory: 16273  loss: 0.512981  loss_kpt: 0.512981  acc_pose: 0.748252
09/14 17:13:46 - mmengine - INFO - Epoch(train)  [14][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:57:09  time: 0.781924  data_time: 0.467702  memory: 16273  loss: 0.510278  loss_kpt: 0.510278  acc_pose: 0.780524
09/14 17:13:48 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:14:22 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:15:02 - mmengine - INFO - Epoch(train)  [15][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:56:07  time: 0.808839  data_time: 0.491125  memory: 16273  loss: 0.504993  loss_kpt: 0.504993  acc_pose: 0.741004
09/14 17:15:42 - mmengine - INFO - Epoch(train)  [15][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:55:18  time: 0.781974  data_time: 0.467786  memory: 16273  loss: 0.504533  loss_kpt: 0.504533  acc_pose: 0.820792
09/14 17:16:17 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:16:57 - mmengine - INFO - Epoch(train)  [16][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:53:47  time: 0.799882  data_time: 0.485751  memory: 16273  loss: 0.503676  loss_kpt: 0.503676  acc_pose: 0.836884
09/14 17:17:35 - mmengine - INFO - Epoch(train)  [16][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:52:42  time: 0.770162  data_time: 0.457302  memory: 16273  loss: 0.492795  loss_kpt: 0.492795  acc_pose: 0.843264
09/14 17:18:11 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:18:51 - mmengine - INFO - Epoch(train)  [17][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:51:39  time: 0.807272  data_time: 0.490985  memory: 16273  loss: 0.493226  loss_kpt: 0.493226  acc_pose: 0.804011
09/14 17:19:30 - mmengine - INFO - Epoch(train)  [17][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:50:29  time: 0.764563  data_time: 0.450883  memory: 16273  loss: 0.496766  loss_kpt: 0.496766  acc_pose: 0.776241
09/14 17:20:06 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:20:46 - mmengine - INFO - Epoch(train)  [18][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:49:27  time: 0.792981  data_time: 0.478606  memory: 16273  loss: 0.491771  loss_kpt: 0.491771  acc_pose: 0.773924
09/14 17:21:25 - mmengine - INFO - Epoch(train)  [18][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:48:43  time: 0.783827  data_time: 0.466488  memory: 16273  loss: 0.486106  loss_kpt: 0.486106  acc_pose: 0.843451
09/14 17:22:00 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:22:40 - mmengine - INFO - Epoch(train)  [19][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:47:08  time: 0.791379  data_time: 0.478735  memory: 16273  loss: 0.490121  loss_kpt: 0.490121  acc_pose: 0.838447
09/14 17:23:19 - mmengine - INFO - Epoch(train)  [19][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:46:22  time: 0.782192  data_time: 0.466279  memory: 16273  loss: 0.486448  loss_kpt: 0.486448  acc_pose: 0.819405
09/14 17:23:56 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:24:36 - mmengine - INFO - Epoch(train)  [20][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:45:45  time: 0.805251  data_time: 0.487966  memory: 16273  loss: 0.485553  loss_kpt: 0.485553  acc_pose: 0.814715
09/14 17:25:15 - mmengine - INFO - Epoch(train)  [20][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:44:56  time: 0.778479  data_time: 0.464343  memory: 16273  loss: 0.481273  loss_kpt: 0.481273  acc_pose: 0.839706
09/14 17:25:51 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:25:51 - mmengine - INFO - Saving checkpoint at 20 epochs
09/14 17:26:31 - mmengine - INFO - Epoch(train)  [21][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:43:26  time: 0.788109  data_time: 0.475896  memory: 16273  loss: 0.479365  loss_kpt: 0.479365  acc_pose: 0.845659
09/14 17:26:54 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:27:10 - mmengine - INFO - Epoch(train)  [21][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:42:36  time: 0.777095  data_time: 0.460356  memory: 16273  loss: 0.476870  loss_kpt: 0.476870  acc_pose: 0.842154
09/14 17:27:46 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:28:27 - mmengine - INFO - Epoch(train)  [22][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:41:37  time: 0.812294  data_time: 0.497420  memory: 16273  loss: 0.479121  loss_kpt: 0.479121  acc_pose: 0.832527
09/14 17:29:06 - mmengine - INFO - Epoch(train)  [22][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:40:55  time: 0.784137  data_time: 0.470223  memory: 16273  loss: 0.475675  loss_kpt: 0.475675  acc_pose: 0.841765
09/14 17:29:41 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:30:22 - mmengine - INFO - Epoch(train)  [23][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:39:41  time: 0.801446  data_time: 0.486530  memory: 16273  loss: 0.470150  loss_kpt: 0.470150  acc_pose: 0.869802
09/14 17:31:00 - mmengine - INFO - Epoch(train)  [23][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:38:50  time: 0.775341  data_time: 0.459773  memory: 16273  loss: 0.472454  loss_kpt: 0.472454  acc_pose: 0.857232
09/14 17:31:36 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:32:15 - mmengine - INFO - Epoch(train)  [24][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:37:13  time: 0.779553  data_time: 0.465882  memory: 16273  loss: 0.470691  loss_kpt: 0.470691  acc_pose: 0.867659
09/14 17:32:54 - mmengine - INFO - Epoch(train)  [24][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:36:38  time: 0.792250  data_time: 0.476102  memory: 16273  loss: 0.475749  loss_kpt: 0.475749  acc_pose: 0.843606
09/14 17:33:31 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:34:11 - mmengine - INFO - Epoch(train)  [25][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:35:47  time: 0.814135  data_time: 0.499953  memory: 16273  loss: 0.467563  loss_kpt: 0.467563  acc_pose: 0.841319
09/14 17:34:51 - mmengine - INFO - Epoch(train)  [25][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:35:05  time: 0.785124  data_time: 0.468389  memory: 16273  loss: 0.469547  loss_kpt: 0.469547  acc_pose: 0.868020
09/14 17:35:26 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:36:06 - mmengine - INFO - Epoch(train)  [26][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:33:46  time: 0.810274  data_time: 0.496617  memory: 16273  loss: 0.469976  loss_kpt: 0.469976  acc_pose: 0.888193
09/14 17:36:45 - mmengine - INFO - Epoch(train)  [26][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:33:02  time: 0.781948  data_time: 0.468486  memory: 16273  loss: 0.466514  loss_kpt: 0.466514  acc_pose: 0.830360
09/14 17:37:21 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:38:00 - mmengine - INFO - Epoch(train)  [27][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:31:40  time: 0.793576  data_time: 0.478140  memory: 16273  loss: 0.466238  loss_kpt: 0.466238  acc_pose: 0.874245
09/14 17:38:40 - mmengine - INFO - Epoch(train)  [27][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:31:05  time: 0.792850  data_time: 0.476389  memory: 16273  loss: 0.464355  loss_kpt: 0.464355  acc_pose: 0.846971
09/14 17:39:16 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:39:56 - mmengine - INFO - Epoch(train)  [28][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:29:57  time: 0.806201  data_time: 0.492495  memory: 16273  loss: 0.466701  loss_kpt: 0.466701  acc_pose: 0.861647
09/14 17:40:03 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:40:35 - mmengine - INFO - Epoch(train)  [28][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:29:11  time: 0.779613  data_time: 0.465676  memory: 16273  loss: 0.465866  loss_kpt: 0.465866  acc_pose: 0.875169
09/14 17:41:11 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:41:50 - mmengine - INFO - Epoch(train)  [29][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:27:53  time: 0.797469  data_time: 0.483738  memory: 16273  loss: 0.461910  loss_kpt: 0.461910  acc_pose: 0.859401
09/14 17:42:30 - mmengine - INFO - Epoch(train)  [29][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:27:19  time: 0.795669  data_time: 0.478024  memory: 16273  loss: 0.465273  loss_kpt: 0.465273  acc_pose: 0.835890
09/14 17:43:05 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:43:45 - mmengine - INFO - Epoch(train)  [30][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:25:48  time: 0.785614  data_time: 0.467929  memory: 16273  loss: 0.463787  loss_kpt: 0.463787  acc_pose: 0.852219
09/14 17:44:25 - mmengine - INFO - Epoch(train)  [30][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:25:16  time: 0.797595  data_time: 0.484320  memory: 16273  loss: 0.463914  loss_kpt: 0.463914  acc_pose: 0.857508
09/14 17:45:00 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:45:00 - mmengine - INFO - Saving checkpoint at 30 epochs
09/14 17:45:42 - mmengine - INFO - Epoch(train)  [31][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:24:05  time: 0.806642  data_time: 0.492344  memory: 16273  loss: 0.456818  loss_kpt: 0.456818  acc_pose: 0.862567
09/14 17:46:22 - mmengine - INFO - Epoch(train)  [31][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:23:34  time: 0.799618  data_time: 0.485348  memory: 16273  loss: 0.459115  loss_kpt: 0.459115  acc_pose: 0.881234
09/14 17:46:58 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:47:37 - mmengine - INFO - Epoch(train)  [32][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:22:14  time: 0.790468  data_time: 0.476400  memory: 16273  loss: 0.459205  loss_kpt: 0.459205  acc_pose: 0.859138
09/14 17:48:17 - mmengine - INFO - Epoch(train)  [32][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:21:43  time: 0.800121  data_time: 0.485466  memory: 16273  loss: 0.453468  loss_kpt: 0.453468  acc_pose: 0.846699
09/14 17:48:53 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:49:34 - mmengine - INFO - Epoch(train)  [33][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:20:41  time: 0.813524  data_time: 0.500106  memory: 16273  loss: 0.451813  loss_kpt: 0.451813  acc_pose: 0.883379
09/14 17:50:13 - mmengine - INFO - Epoch(train)  [33][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:19:53  time: 0.774909  data_time: 0.460603  memory: 16273  loss: 0.461132  loss_kpt: 0.461132  acc_pose: 0.888417
09/14 17:50:48 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:51:28 - mmengine - INFO - Epoch(train)  [34][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:18:33  time: 0.801756  data_time: 0.489102  memory: 16273  loss: 0.456219  loss_kpt: 0.456219  acc_pose: 0.868963
09/14 17:52:07 - mmengine - INFO - Epoch(train)  [34][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:17:47  time: 0.777223  data_time: 0.463439  memory: 16273  loss: 0.454809  loss_kpt: 0.454809  acc_pose: 0.889156
09/14 17:52:42 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:53:11 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:53:22 - mmengine - INFO - Epoch(train)  [35][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:16:25  time: 0.800266  data_time: 0.485388  memory: 16273  loss: 0.452615  loss_kpt: 0.452615  acc_pose: 0.848282
09/14 17:54:01 - mmengine - INFO - Epoch(train)  [35][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:15:41  time: 0.780887  data_time: 0.467050  memory: 16273  loss: 0.454092  loss_kpt: 0.454092  acc_pose: 0.905443
09/14 17:54:37 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:55:17 - mmengine - INFO - Epoch(train)  [36][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:14:32  time: 0.802713  data_time: 0.488447  memory: 16273  loss: 0.454550  loss_kpt: 0.454550  acc_pose: 0.868619
09/14 17:55:56 - mmengine - INFO - Epoch(train)  [36][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:13:46  time: 0.775978  data_time: 0.461605  memory: 16273  loss: 0.454802  loss_kpt: 0.454802  acc_pose: 0.863334
09/14 17:56:32 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:57:12 - mmengine - INFO - Epoch(train)  [37][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:12:43  time: 0.808864  data_time: 0.492335  memory: 16273  loss: 0.446279  loss_kpt: 0.446279  acc_pose: 0.850872
09/14 17:57:51 - mmengine - INFO - Epoch(train)  [37][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:11:52  time: 0.767695  data_time: 0.453354  memory: 16273  loss: 0.456089  loss_kpt: 0.456089  acc_pose: 0.889942
09/14 17:58:26 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 17:59:06 - mmengine - INFO - Epoch(train)  [38][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:10:35  time: 0.796453  data_time: 0.482881  memory: 16273  loss: 0.453541  loss_kpt: 0.453541  acc_pose: 0.888131
09/14 17:59:45 - mmengine - INFO - Epoch(train)  [38][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:09:49  time: 0.775748  data_time: 0.461833  memory: 16273  loss: 0.442710  loss_kpt: 0.442710  acc_pose: 0.922281
09/14 18:00:21 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:01:01 - mmengine - INFO - Epoch(train)  [39][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:08:40  time: 0.799169  data_time: 0.486186  memory: 16273  loss: 0.444861  loss_kpt: 0.444861  acc_pose: 0.891603
09/14 18:01:41 - mmengine - INFO - Epoch(train)  [39][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:08:03  time: 0.791234  data_time: 0.474795  memory: 16273  loss: 0.446935  loss_kpt: 0.446935  acc_pose: 0.901374
09/14 18:02:16 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:02:57 - mmengine - INFO - Epoch(train)  [40][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:06:49  time: 0.814664  data_time: 0.497872  memory: 16273  loss: 0.450531  loss_kpt: 0.450531  acc_pose: 0.926269
09/14 18:03:36 - mmengine - INFO - Epoch(train)  [40][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:06:08  time: 0.783591  data_time: 0.469163  memory: 16273  loss: 0.446849  loss_kpt: 0.446849  acc_pose: 0.902724
09/14 18:04:12 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:04:12 - mmengine - INFO - Saving checkpoint at 40 epochs
09/14 18:04:53 - mmengine - INFO - Epoch(train)  [41][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:05:00  time: 0.809225  data_time: 0.494506  memory: 16273  loss: 0.444170  loss_kpt: 0.444170  acc_pose: 0.889990
09/14 18:05:33 - mmengine - INFO - Epoch(train)  [41][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:04:23  time: 0.792681  data_time: 0.475977  memory: 16273  loss: 0.445553  loss_kpt: 0.445553  acc_pose: 0.853522
09/14 18:06:08 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:06:20 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:06:48 - mmengine - INFO - Epoch(train)  [42][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:03:06  time: 0.802544  data_time: 0.487937  memory: 16273  loss: 0.446506  loss_kpt: 0.446506  acc_pose: 0.889257
09/14 18:07:27 - mmengine - INFO - Epoch(train)  [42][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:02:21  time: 0.776983  data_time: 0.463474  memory: 16273  loss: 0.448649  loss_kpt: 0.448649  acc_pose: 0.867834
09/14 18:08:03 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:08:43 - mmengine - INFO - Epoch(train)  [43][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:01:10  time: 0.806412  data_time: 0.491791  memory: 16273  loss: 0.444562  loss_kpt: 0.444562  acc_pose: 0.879416
09/14 18:09:23 - mmengine - INFO - Epoch(train)  [43][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 13:00:30  time: 0.786848  data_time: 0.472354  memory: 16273  loss: 0.443758  loss_kpt: 0.443758  acc_pose: 0.878635
09/14 18:09:59 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:10:39 - mmengine - INFO - Epoch(train)  [44][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:59:22  time: 0.795674  data_time: 0.481363  memory: 16273  loss: 0.437107  loss_kpt: 0.437107  acc_pose: 0.903469
09/14 18:11:18 - mmengine - INFO - Epoch(train)  [44][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:58:39  time: 0.778800  data_time: 0.466048  memory: 16273  loss: 0.448358  loss_kpt: 0.448358  acc_pose: 0.865978
09/14 18:11:54 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:12:33 - mmengine - INFO - Epoch(train)  [45][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:57:22  time: 0.796593  data_time: 0.482951  memory: 16273  loss: 0.445689  loss_kpt: 0.445689  acc_pose: 0.871147
09/14 18:13:13 - mmengine - INFO - Epoch(train)  [45][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:56:42  time: 0.786340  data_time: 0.471484  memory: 16273  loss: 0.440743  loss_kpt: 0.440743  acc_pose: 0.886500
09/14 18:13:48 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:14:28 - mmengine - INFO - Epoch(train)  [46][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:55:22  time: 0.792717  data_time: 0.477718  memory: 16273  loss: 0.444321  loss_kpt: 0.444321  acc_pose: 0.901347
09/14 18:15:07 - mmengine - INFO - Epoch(train)  [46][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:54:41  time: 0.783314  data_time: 0.468871  memory: 16273  loss: 0.438884  loss_kpt: 0.438884  acc_pose: 0.894080
09/14 18:15:43 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:16:23 - mmengine - INFO - Epoch(train)  [47][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:53:27  time: 0.796750  data_time: 0.482614  memory: 16273  loss: 0.441229  loss_kpt: 0.441229  acc_pose: 0.869057
09/14 18:17:02 - mmengine - INFO - Epoch(train)  [47][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:52:42  time: 0.775337  data_time: 0.462004  memory: 16273  loss: 0.441247  loss_kpt: 0.441247  acc_pose: 0.849355
09/14 18:17:38 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:18:19 - mmengine - INFO - Epoch(train)  [48][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:51:43  time: 0.826451  data_time: 0.509431  memory: 16273  loss: 0.433194  loss_kpt: 0.433194  acc_pose: 0.882150
09/14 18:18:57 - mmengine - INFO - Epoch(train)  [48][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:50:53  time: 0.763489  data_time: 0.449363  memory: 16273  loss: 0.444198  loss_kpt: 0.444198  acc_pose: 0.897149
09/14 18:19:27 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:19:33 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:20:13 - mmengine - INFO - Epoch(train)  [49][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:49:39  time: 0.801948  data_time: 0.488500  memory: 16273  loss: 0.438489  loss_kpt: 0.438489  acc_pose: 0.867009
09/14 18:20:52 - mmengine - INFO - Epoch(train)  [49][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:48:56  time: 0.778492  data_time: 0.462543  memory: 16273  loss: 0.438371  loss_kpt: 0.438371  acc_pose: 0.890277
09/14 18:21:27 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:22:07 - mmengine - INFO - Epoch(train)  [50][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:47:38  time: 0.798839  data_time: 0.483613  memory: 16273  loss: 0.437259  loss_kpt: 0.437259  acc_pose: 0.852557
09/14 18:22:46 - mmengine - INFO - Epoch(train)  [50][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:46:56  time: 0.781347  data_time: 0.464568  memory: 16273  loss: 0.439217  loss_kpt: 0.439217  acc_pose: 0.886417
09/14 18:23:22 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:23:22 - mmengine - INFO - Saving checkpoint at 50 epochs
09/14 18:24:04 - mmengine - INFO - Epoch(train)  [51][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:45:45  time: 0.813314  data_time: 0.499359  memory: 16273  loss: 0.442787  loss_kpt: 0.442787  acc_pose: 0.923260
09/14 18:24:43 - mmengine - INFO - Epoch(train)  [51][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:45:03  time: 0.780697  data_time: 0.466232  memory: 16273  loss: 0.435854  loss_kpt: 0.435854  acc_pose: 0.897817
09/14 18:25:19 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:25:59 - mmengine - INFO - Epoch(train)  [52][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:43:54  time: 0.799217  data_time: 0.484912  memory: 16273  loss: 0.437103  loss_kpt: 0.437103  acc_pose: 0.912570
09/14 18:26:39 - mmengine - INFO - Epoch(train)  [52][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:43:16  time: 0.791790  data_time: 0.475635  memory: 16273  loss: 0.433828  loss_kpt: 0.433828  acc_pose: 0.862787
09/14 18:27:14 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:27:54 - mmengine - INFO - Epoch(train)  [53][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:41:58  time: 0.806403  data_time: 0.491971  memory: 16273  loss: 0.436560  loss_kpt: 0.436560  acc_pose: 0.896347
09/14 18:28:33 - mmengine - INFO - Epoch(train)  [53][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:41:19  time: 0.786720  data_time: 0.470053  memory: 16273  loss: 0.436964  loss_kpt: 0.436964  acc_pose: 0.922702
09/14 18:29:08 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:29:49 - mmengine - INFO - Epoch(train)  [54][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:40:03  time: 0.809118  data_time: 0.494317  memory: 16273  loss: 0.434132  loss_kpt: 0.434132  acc_pose: 0.884518
09/14 18:30:28 - mmengine - INFO - Epoch(train)  [54][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:39:21  time: 0.780403  data_time: 0.465919  memory: 16273  loss: 0.436011  loss_kpt: 0.436011  acc_pose: 0.855117
09/14 18:31:04 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:31:44 - mmengine - INFO - Epoch(train)  [55][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:38:07  time: 0.801823  data_time: 0.488262  memory: 16273  loss: 0.434635  loss_kpt: 0.434635  acc_pose: 0.890084
09/14 18:32:23 - mmengine - INFO - Epoch(train)  [55][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:37:25  time: 0.778177  data_time: 0.463966  memory: 16273  loss: 0.431803  loss_kpt: 0.431803  acc_pose: 0.912895
09/14 18:32:35 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:32:58 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:33:39 - mmengine - INFO - Epoch(train)  [56][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:36:11  time: 0.809190  data_time: 0.495323  memory: 16273  loss: 0.433356  loss_kpt: 0.433356  acc_pose: 0.905598
09/14 18:34:18 - mmengine - INFO - Epoch(train)  [56][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:35:28  time: 0.777664  data_time: 0.463357  memory: 16273  loss: 0.442639  loss_kpt: 0.442639  acc_pose: 0.904735
09/14 18:34:53 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:35:33 - mmengine - INFO - Epoch(train)  [57][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:34:11  time: 0.793392  data_time: 0.479161  memory: 16273  loss: 0.435010  loss_kpt: 0.435010  acc_pose: 0.914558
09/14 18:36:12 - mmengine - INFO - Epoch(train)  [57][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:33:31  time: 0.783362  data_time: 0.469022  memory: 16273  loss: 0.432695  loss_kpt: 0.432695  acc_pose: 0.915441
09/14 18:36:48 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:37:28 - mmengine - INFO - Epoch(train)  [58][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:32:14  time: 0.797059  data_time: 0.477027  memory: 16273  loss: 0.430258  loss_kpt: 0.430258  acc_pose: 0.887169
09/14 18:38:07 - mmengine - INFO - Epoch(train)  [58][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:31:35  time: 0.787197  data_time: 0.470687  memory: 16273  loss: 0.432738  loss_kpt: 0.432738  acc_pose: 0.893670
09/14 18:38:42 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:39:22 - mmengine - INFO - Epoch(train)  [59][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:30:18  time: 0.802678  data_time: 0.485691  memory: 16273  loss: 0.427574  loss_kpt: 0.427574  acc_pose: 0.869272
09/14 18:40:01 - mmengine - INFO - Epoch(train)  [59][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:29:37  time: 0.780166  data_time: 0.465866  memory: 16273  loss: 0.432682  loss_kpt: 0.432682  acc_pose: 0.855296
09/14 18:40:37 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:41:17 - mmengine - INFO - Epoch(train)  [60][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:28:22  time: 0.800086  data_time: 0.486549  memory: 16273  loss: 0.434731  loss_kpt: 0.434731  acc_pose: 0.894556
09/14 18:41:57 - mmengine - INFO - Epoch(train)  [60][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:27:43  time: 0.786101  data_time: 0.471220  memory: 16273  loss: 0.428561  loss_kpt: 0.428561  acc_pose: 0.907006
09/14 18:42:32 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:42:32 - mmengine - INFO - Saving checkpoint at 60 epochs
09/14 18:43:13 - mmengine - INFO - Epoch(train)  [61][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:26:24  time: 0.801358  data_time: 0.486117  memory: 16273  loss: 0.433388  loss_kpt: 0.433388  acc_pose: 0.886794
09/14 18:43:53 - mmengine - INFO - Epoch(train)  [61][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:25:48  time: 0.798144  data_time: 0.483358  memory: 16273  loss: 0.431365  loss_kpt: 0.431365  acc_pose: 0.864744
09/14 18:44:28 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:45:08 - mmengine - INFO - Epoch(train)  [62][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:24:32  time: 0.803987  data_time: 0.489705  memory: 16273  loss: 0.429996  loss_kpt: 0.429996  acc_pose: 0.927864
09/14 18:45:42 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:45:47 - mmengine - INFO - Epoch(train)  [62][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:23:48  time: 0.772122  data_time: 0.454800  memory: 16273  loss: 0.426678  loss_kpt: 0.426678  acc_pose: 0.897689
09/14 18:46:23 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:47:02 - mmengine - INFO - Epoch(train)  [63][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:22:32  time: 0.799202  data_time: 0.484263  memory: 16273  loss: 0.427801  loss_kpt: 0.427801  acc_pose: 0.917416
09/14 18:47:41 - mmengine - INFO - Epoch(train)  [63][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:21:50  time: 0.778364  data_time: 0.463984  memory: 16273  loss: 0.428829  loss_kpt: 0.428829  acc_pose: 0.902198
09/14 18:48:17 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:48:57 - mmengine - INFO - Epoch(train)  [64][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:20:34  time: 0.788232  data_time: 0.474428  memory: 16273  loss: 0.427011  loss_kpt: 0.427011  acc_pose: 0.922926
09/14 18:49:36 - mmengine - INFO - Epoch(train)  [64][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:19:56  time: 0.792402  data_time: 0.475215  memory: 16273  loss: 0.430495  loss_kpt: 0.430495  acc_pose: 0.909451
09/14 18:50:12 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:50:52 - mmengine - INFO - Epoch(train)  [65][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:18:40  time: 0.803560  data_time: 0.489601  memory: 16273  loss: 0.429663  loss_kpt: 0.429663  acc_pose: 0.938927
09/14 18:51:32 - mmengine - INFO - Epoch(train)  [65][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:18:05  time: 0.802720  data_time: 0.488636  memory: 16273  loss: 0.426362  loss_kpt: 0.426362  acc_pose: 0.872554
09/14 18:52:08 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:52:47 - mmengine - INFO - Epoch(train)  [66][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:16:48  time: 0.789785  data_time: 0.475285  memory: 16273  loss: 0.427751  loss_kpt: 0.427751  acc_pose: 0.853090
09/14 18:53:27 - mmengine - INFO - Epoch(train)  [66][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:16:10  time: 0.791571  data_time: 0.475886  memory: 16273  loss: 0.427753  loss_kpt: 0.427753  acc_pose: 0.903693
09/14 18:54:03 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:54:44 - mmengine - INFO - Epoch(train)  [67][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:15:01  time: 0.814057  data_time: 0.499205  memory: 16273  loss: 0.424824  loss_kpt: 0.424824  acc_pose: 0.908664
09/14 18:55:22 - mmengine - INFO - Epoch(train)  [67][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:14:17  time: 0.770995  data_time: 0.456440  memory: 16273  loss: 0.424902  loss_kpt: 0.424902  acc_pose: 0.887842
09/14 18:55:58 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:56:38 - mmengine - INFO - Epoch(train)  [68][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:13:02  time: 0.806544  data_time: 0.492668  memory: 16273  loss: 0.431631  loss_kpt: 0.431631  acc_pose: 0.882752
09/14 18:57:18 - mmengine - INFO - Epoch(train)  [68][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:12:24  time: 0.790756  data_time: 0.476592  memory: 16273  loss: 0.422951  loss_kpt: 0.422951  acc_pose: 0.913470
09/14 18:57:53 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:58:33 - mmengine - INFO - Epoch(train)  [69][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:11:09  time: 0.803642  data_time: 0.488961  memory: 16273  loss: 0.426258  loss_kpt: 0.426258  acc_pose: 0.925454
09/14 18:58:50 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 18:59:13 - mmengine - INFO - Epoch(train)  [69][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:10:32  time: 0.793494  data_time: 0.478134  memory: 16273  loss: 0.425522  loss_kpt: 0.425522  acc_pose: 0.915072
09/14 18:59:49 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:00:30 - mmengine - INFO - Epoch(train)  [70][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:09:26  time: 0.828881  data_time: 0.514859  memory: 16273  loss: 0.421095  loss_kpt: 0.421095  acc_pose: 0.903621
09/14 19:01:09 - mmengine - INFO - Epoch(train)  [70][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:08:44  time: 0.777468  data_time: 0.464682  memory: 16273  loss: 0.426946  loss_kpt: 0.426946  acc_pose: 0.868752
09/14 19:01:45 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:01:45 - mmengine - INFO - Saving checkpoint at 70 epochs
09/14 19:02:26 - mmengine - INFO - Epoch(train)  [71][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:07:28  time: 0.806303  data_time: 0.491963  memory: 16273  loss: 0.422107  loss_kpt: 0.422107  acc_pose: 0.902753
09/14 19:03:05 - mmengine - INFO - Epoch(train)  [71][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:06:46  time: 0.778398  data_time: 0.464172  memory: 16273  loss: 0.429109  loss_kpt: 0.429109  acc_pose: 0.896181
09/14 19:03:40 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:04:20 - mmengine - INFO - Epoch(train)  [72][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:05:28  time: 0.799477  data_time: 0.485276  memory: 16273  loss: 0.419841  loss_kpt: 0.419841  acc_pose: 0.924628
09/14 19:05:00 - mmengine - INFO - Epoch(train)  [72][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:04:49  time: 0.788313  data_time: 0.474475  memory: 16273  loss: 0.424192  loss_kpt: 0.424192  acc_pose: 0.917516
09/14 19:05:35 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:06:15 - mmengine - INFO - Epoch(train)  [73][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:03:34  time: 0.804852  data_time: 0.487407  memory: 16273  loss: 0.424567  loss_kpt: 0.424567  acc_pose: 0.942884
09/14 19:06:55 - mmengine - INFO - Epoch(train)  [73][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:02:54  time: 0.784962  data_time: 0.470598  memory: 16273  loss: 0.420677  loss_kpt: 0.420677  acc_pose: 0.899096
09/14 19:07:30 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:08:11 - mmengine - INFO - Epoch(train)  [74][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:01:41  time: 0.802597  data_time: 0.488206  memory: 16273  loss: 0.426384  loss_kpt: 0.426384  acc_pose: 0.914966
09/14 19:08:50 - mmengine - INFO - Epoch(train)  [74][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 12:01:03  time: 0.793123  data_time: 0.475415  memory: 16273  loss: 0.422843  loss_kpt: 0.422843  acc_pose: 0.921209
09/14 19:09:26 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:10:06 - mmengine - INFO - Epoch(train)  [75][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:59:46  time: 0.794392  data_time: 0.480390  memory: 16273  loss: 0.427065  loss_kpt: 0.427065  acc_pose: 0.863896
09/14 19:10:46 - mmengine - INFO - Epoch(train)  [75][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:59:11  time: 0.805518  data_time: 0.488642  memory: 16273  loss: 0.424846  loss_kpt: 0.424846  acc_pose: 0.932887
09/14 19:11:20 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:12:01 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:12:01 - mmengine - INFO - Epoch(train)  [76][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:57:54  time: 0.813592  data_time: 0.499324  memory: 16273  loss: 0.427974  loss_kpt: 0.427974  acc_pose: 0.904573
09/14 19:12:40 - mmengine - INFO - Epoch(train)  [76][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:57:11  time: 0.773331  data_time: 0.458383  memory: 16273  loss: 0.419822  loss_kpt: 0.419822  acc_pose: 0.922989
09/14 19:13:15 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:13:56 - mmengine - INFO - Epoch(train)  [77][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:55:59  time: 0.811389  data_time: 0.497454  memory: 16273  loss: 0.418196  loss_kpt: 0.418196  acc_pose: 0.869434
09/14 19:14:35 - mmengine - INFO - Epoch(train)  [77][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:55:16  time: 0.773136  data_time: 0.459050  memory: 16273  loss: 0.419565  loss_kpt: 0.419565  acc_pose: 0.899757
09/14 19:15:11 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:15:50 - mmengine - INFO - Epoch(train)  [78][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:54:01  time: 0.798055  data_time: 0.481266  memory: 16273  loss: 0.419137  loss_kpt: 0.419137  acc_pose: 0.882568
09/14 19:16:30 - mmengine - INFO - Epoch(train)  [78][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:53:21  time: 0.783562  data_time: 0.466272  memory: 16273  loss: 0.420341  loss_kpt: 0.420341  acc_pose: 0.905457
09/14 19:17:05 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:17:44 - mmengine - INFO - Epoch(train)  [79][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:51:59  time: 0.782388  data_time: 0.467761  memory: 16273  loss: 0.417027  loss_kpt: 0.417027  acc_pose: 0.899069
09/14 19:18:24 - mmengine - INFO - Epoch(train)  [79][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:51:21  time: 0.790088  data_time: 0.476178  memory: 16273  loss: 0.422062  loss_kpt: 0.422062  acc_pose: 0.906605
09/14 19:18:59 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:19:39 - mmengine - INFO - Epoch(train)  [80][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:50:05  time: 0.798651  data_time: 0.484571  memory: 16273  loss: 0.420136  loss_kpt: 0.420136  acc_pose: 0.915826
09/14 19:20:19 - mmengine - INFO - Epoch(train)  [80][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:49:27  time: 0.790090  data_time: 0.473626  memory: 16273  loss: 0.421515  loss_kpt: 0.421515  acc_pose: 0.904431
09/14 19:20:54 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:20:54 - mmengine - INFO - Saving checkpoint at 80 epochs
09/14 19:21:35 - mmengine - INFO - Epoch(train)  [81][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:48:09  time: 0.788393  data_time: 0.473792  memory: 16273  loss: 0.420836  loss_kpt: 0.420836  acc_pose: 0.915572
09/14 19:22:15 - mmengine - INFO - Epoch(train)  [81][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:47:31  time: 0.792788  data_time: 0.475093  memory: 16273  loss: 0.421717  loss_kpt: 0.421717  acc_pose: 0.915545
09/14 19:22:51 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:23:31 - mmengine - INFO - Epoch(train)  [82][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:46:19  time: 0.803549  data_time: 0.488360  memory: 16273  loss: 0.417041  loss_kpt: 0.417041  acc_pose: 0.903212
09/14 19:24:10 - mmengine - INFO - Epoch(train)  [82][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:45:39  time: 0.786459  data_time: 0.471843  memory: 16273  loss: 0.419659  loss_kpt: 0.419659  acc_pose: 0.935129
09/14 19:24:46 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:25:08 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:25:25 - mmengine - INFO - Epoch(train)  [83][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:44:22  time: 0.795363  data_time: 0.481107  memory: 16273  loss: 0.419934  loss_kpt: 0.419934  acc_pose: 0.909797
09/14 19:26:05 - mmengine - INFO - Epoch(train)  [83][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:43:44  time: 0.794667  data_time: 0.479491  memory: 16273  loss: 0.422155  loss_kpt: 0.422155  acc_pose: 0.913144
09/14 19:26:41 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:27:22 - mmengine - INFO - Epoch(train)  [84][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:42:33  time: 0.808914  data_time: 0.494625  memory: 16273  loss: 0.418727  loss_kpt: 0.418727  acc_pose: 0.884567
09/14 19:28:01 - mmengine - INFO - Epoch(train)  [84][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:41:52  time: 0.779689  data_time: 0.465619  memory: 16273  loss: 0.417877  loss_kpt: 0.417877  acc_pose: 0.921831
09/14 19:28:36 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:29:16 - mmengine - INFO - Epoch(train)  [85][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:40:35  time: 0.795042  data_time: 0.480973  memory: 16273  loss: 0.414754  loss_kpt: 0.414754  acc_pose: 0.941413
09/14 19:29:55 - mmengine - INFO - Epoch(train)  [85][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:39:55  time: 0.785652  data_time: 0.470589  memory: 16273  loss: 0.419302  loss_kpt: 0.419302  acc_pose: 0.935410
09/14 19:30:31 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:31:11 - mmengine - INFO - Epoch(train)  [86][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:38:41  time: 0.798627  data_time: 0.481492  memory: 16273  loss: 0.414921  loss_kpt: 0.414921  acc_pose: 0.936228
09/14 19:31:51 - mmengine - INFO - Epoch(train)  [86][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:38:04  time: 0.801146  data_time: 0.484132  memory: 16273  loss: 0.418351  loss_kpt: 0.418351  acc_pose: 0.920872
09/14 19:32:27 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:33:07 - mmengine - INFO - Epoch(train)  [87][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:36:49  time: 0.808514  data_time: 0.493437  memory: 16273  loss: 0.416782  loss_kpt: 0.416782  acc_pose: 0.950391
09/14 19:33:47 - mmengine - INFO - Epoch(train)  [87][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:36:11  time: 0.794691  data_time: 0.479631  memory: 16273  loss: 0.415486  loss_kpt: 0.415486  acc_pose: 0.919748
09/14 19:34:23 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:35:02 - mmengine - INFO - Epoch(train)  [88][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:34:55  time: 0.790389  data_time: 0.472984  memory: 16273  loss: 0.416985  loss_kpt: 0.416985  acc_pose: 0.927915
09/14 19:35:42 - mmengine - INFO - Epoch(train)  [88][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:34:17  time: 0.792118  data_time: 0.477716  memory: 16273  loss: 0.418274  loss_kpt: 0.418274  acc_pose: 0.932829
09/14 19:36:17 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:36:58 - mmengine - INFO - Epoch(train)  [89][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:33:02  time: 0.806624  data_time: 0.492498  memory: 16273  loss: 0.414735  loss_kpt: 0.414735  acc_pose: 0.937258
09/14 19:37:37 - mmengine - INFO - Epoch(train)  [89][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:32:22  time: 0.786604  data_time: 0.471845  memory: 16273  loss: 0.415727  loss_kpt: 0.415727  acc_pose: 0.893375
09/14 19:38:13 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:38:18 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:38:53 - mmengine - INFO - Epoch(train)  [90][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:31:08  time: 0.807510  data_time: 0.491051  memory: 16273  loss: 0.419858  loss_kpt: 0.419858  acc_pose: 0.952656
09/14 19:39:32 - mmengine - INFO - Epoch(train)  [90][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:30:26  time: 0.774849  data_time: 0.460120  memory: 16273  loss: 0.419940  loss_kpt: 0.419940  acc_pose: 0.903159
09/14 19:40:08 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:40:08 - mmengine - INFO - Saving checkpoint at 90 epochs
09/14 19:40:50 - mmengine - INFO - Epoch(train)  [91][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:29:15  time: 0.805822  data_time: 0.489897  memory: 16273  loss: 0.417576  loss_kpt: 0.417576  acc_pose: 0.930470
09/14 19:41:29 - mmengine - INFO - Epoch(train)  [91][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:28:37  time: 0.794891  data_time: 0.480544  memory: 16273  loss: 0.419374  loss_kpt: 0.419374  acc_pose: 0.930000
09/14 19:42:04 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:42:45 - mmengine - INFO - Epoch(train)  [92][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:27:20  time: 0.808351  data_time: 0.494784  memory: 16273  loss: 0.412353  loss_kpt: 0.412353  acc_pose: 0.923220
09/14 19:43:24 - mmengine - INFO - Epoch(train)  [92][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:26:39  time: 0.781433  data_time: 0.464502  memory: 16273  loss: 0.416553  loss_kpt: 0.416553  acc_pose: 0.941310
09/14 19:43:59 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:44:39 - mmengine - INFO - Epoch(train)  [93][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:25:23  time: 0.798320  data_time: 0.481269  memory: 16273  loss: 0.418932  loss_kpt: 0.418932  acc_pose: 0.905922
09/14 19:45:18 - mmengine - INFO - Epoch(train)  [93][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:24:42  time: 0.783248  data_time: 0.468804  memory: 16273  loss: 0.414948  loss_kpt: 0.414948  acc_pose: 0.886091
09/14 19:45:54 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:46:34 - mmengine - INFO - Epoch(train)  [94][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:23:26  time: 0.798996  data_time: 0.485435  memory: 16273  loss: 0.414855  loss_kpt: 0.414855  acc_pose: 0.917175
09/14 19:47:13 - mmengine - INFO - Epoch(train)  [94][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:22:46  time: 0.781759  data_time: 0.466618  memory: 16273  loss: 0.415866  loss_kpt: 0.415866  acc_pose: 0.890997
09/14 19:47:49 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:48:28 - mmengine - INFO - Epoch(train)  [95][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:21:29  time: 0.791156  data_time: 0.476864  memory: 16273  loss: 0.418231  loss_kpt: 0.418231  acc_pose: 0.927087
09/14 19:49:08 - mmengine - INFO - Epoch(train)  [95][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:20:50  time: 0.791259  data_time: 0.474059  memory: 16273  loss: 0.409887  loss_kpt: 0.409887  acc_pose: 0.897411
09/14 19:49:43 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:50:23 - mmengine - INFO - Epoch(train)  [96][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:19:34  time: 0.804334  data_time: 0.489796  memory: 16273  loss: 0.411377  loss_kpt: 0.411377  acc_pose: 0.914793
09/14 19:51:02 - mmengine - INFO - Epoch(train)  [96][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:18:54  time: 0.783256  data_time: 0.469712  memory: 16273  loss: 0.414598  loss_kpt: 0.414598  acc_pose: 0.926526
09/14 19:51:26 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:51:38 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:52:19 - mmengine - INFO - Epoch(train)  [97][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:17:41  time: 0.807270  data_time: 0.493527  memory: 16273  loss: 0.411381  loss_kpt: 0.411381  acc_pose: 0.910641
09/14 19:52:57 - mmengine - INFO - Epoch(train)  [97][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:17:00  time: 0.775548  data_time: 0.461763  memory: 16273  loss: 0.415365  loss_kpt: 0.415365  acc_pose: 0.935215
09/14 19:53:33 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:54:13 - mmengine - INFO - Epoch(train)  [98][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:15:44  time: 0.800169  data_time: 0.486570  memory: 16273  loss: 0.410601  loss_kpt: 0.410601  acc_pose: 0.911135
09/14 19:54:52 - mmengine - INFO - Epoch(train)  [98][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:15:03  time: 0.774979  data_time: 0.460591  memory: 16273  loss: 0.412976  loss_kpt: 0.412976  acc_pose: 0.913677
09/14 19:55:27 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:56:07 - mmengine - INFO - Epoch(train)  [99][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:13:47  time: 0.800569  data_time: 0.486420  memory: 16273  loss: 0.409494  loss_kpt: 0.409494  acc_pose: 0.927131
09/14 19:56:46 - mmengine - INFO - Epoch(train)  [99][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:13:06  time: 0.780838  data_time: 0.462425  memory: 16273  loss: 0.413135  loss_kpt: 0.413135  acc_pose: 0.913942
09/14 19:57:22 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:58:03 - mmengine - INFO - Epoch(train) [100][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:11:52  time: 0.811738  data_time: 0.495452  memory: 16273  loss: 0.414448  loss_kpt: 0.414448  acc_pose: 0.923785
09/14 19:58:41 - mmengine - INFO - Epoch(train) [100][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 11:11:11  time: 0.776702  data_time: 0.461743  memory: 16273  loss: 0.411940  loss_kpt: 0.411940  acc_pose: 0.919682
09/14 19:59:17 - mmengine - INFO - Exp name: pose2_20230914_164723
09/14 19:59:17 - mmengine - INFO - Saving checkpoint at 100 epochs
09/14 19:59:29 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.45s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.818
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.976
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.912
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.818
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.869
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.989
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.944
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.869
09/14 19:59:30 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/14 19:59:30 - mmengine - INFO - Evaluating AUC...
09/14 19:59:30 - mmengine - INFO - Evaluating NME...
09/14 19:59:30 - mmengine - INFO - Epoch(val) [100][19/19]    coco/AP: 0.817655  coco/AP .5: 0.976366  coco/AP .75: 0.912355  coco/AP (L): -1.000000  coco/AR: 0.817655  coco/AR .5: 0.868855  coco/AR .75: 0.989057  coco/AR (L): 0.944444  PCK: 0.942884  AUC: 0.629188  NME: 0.277020  data_time: 0.383039  time: 0.538969
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 102, in run
    self.runner.val_loop.run()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 367, in run
    self.runner.call_hook('after_val_epoch', metrics=metrics)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1807, in call_hook
    getattr(hook, fn_name)(self, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/hooks/checkpoint_hook.py", line 361, in after_val_epoch
    self._save_best_checkpoint(runner, metrics)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/hooks/checkpoint_hook.py", line 505, in _save_best_checkpoint
    key_score = metrics[key_indicator]
KeyError: 'coco-wholebody/AP'
09/15 11:12:18 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:12:18 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='PoseVisualizationHook'))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_batch_size = 64
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_batch_size = 64
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:12:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 11:12:20 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:12:23 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:12:23 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:12:23 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:12:23 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:12:23 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:12:24 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for stem.0.conv.weight: copying a param with shape torch.Size([32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 3, 3, 3]).
size mismatch for stem.0.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.conv.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 40, 3, 3]).
size mismatch for stem.1.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.2.conv.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 40, 3, 3]).
size mismatch for stem.2.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.0.conv.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 80, 3, 3]).
size mismatch for stage1.0.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.main_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.main_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.short_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.final_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.final_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.attention.fc.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.attention.fc.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.0.conv.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 160, 3, 3]).
size mismatch for stage2.0.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.main_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.main_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.short_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.final_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.final_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.attention.fc.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.attention.fc.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.0.conv.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 320, 3, 3]).
size mismatch for stage3.0.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.main_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.main_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.short_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.final_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.final_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.attention.fc.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.attention.fc.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.0.conv.weight: copying a param with shape torch.Size([1024, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1280, 640, 3, 3]).
size mismatch for stage4.0.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv1.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv2.conv.weight: copying a param with shape torch.Size([1024, 2048, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 2560, 1, 1]).
size mismatch for stage4.1.conv2.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.main_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.main_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.short_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.final_conv.conv.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.final_conv.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.attention.fc.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.attention.fc.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
unexpected key in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

missing keys in source state_dict: stage1.1.blocks.3.conv1.conv.weight, stage1.1.blocks.3.conv1.bn.weight, stage1.1.blocks.3.conv1.bn.bias, stage1.1.blocks.3.conv1.bn.running_mean, stage1.1.blocks.3.conv1.bn.running_var, stage1.1.blocks.3.conv2.depthwise_conv.conv.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.bias, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_var, stage1.1.blocks.3.conv2.pointwise_conv.conv.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.bias, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.6.conv1.conv.weight, stage2.1.blocks.6.conv1.bn.weight, stage2.1.blocks.6.conv1.bn.bias, stage2.1.blocks.6.conv1.bn.running_mean, stage2.1.blocks.6.conv1.bn.running_var, stage2.1.blocks.6.conv2.depthwise_conv.conv.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.bias, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.6.conv2.pointwise_conv.conv.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.bias, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.7.conv1.conv.weight, stage2.1.blocks.7.conv1.bn.weight, stage2.1.blocks.7.conv1.bn.bias, stage2.1.blocks.7.conv1.bn.running_mean, stage2.1.blocks.7.conv1.bn.running_var, stage2.1.blocks.7.conv2.depthwise_conv.conv.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.bias, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.7.conv2.pointwise_conv.conv.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.bias, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.6.conv1.conv.weight, stage3.1.blocks.6.conv1.bn.weight, stage3.1.blocks.6.conv1.bn.bias, stage3.1.blocks.6.conv1.bn.running_mean, stage3.1.blocks.6.conv1.bn.running_var, stage3.1.blocks.6.conv2.depthwise_conv.conv.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.bias, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.6.conv2.pointwise_conv.conv.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.bias, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.7.conv1.conv.weight, stage3.1.blocks.7.conv1.bn.weight, stage3.1.blocks.7.conv1.bn.bias, stage3.1.blocks.7.conv1.bn.running_mean, stage3.1.blocks.7.conv1.bn.running_var, stage3.1.blocks.7.conv2.depthwise_conv.conv.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.bias, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.7.conv2.pointwise_conv.conv.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.bias, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage4.2.blocks.3.conv1.conv.weight, stage4.2.blocks.3.conv1.bn.weight, stage4.2.blocks.3.conv1.bn.bias, stage4.2.blocks.3.conv1.bn.running_mean, stage4.2.blocks.3.conv1.bn.running_var, stage4.2.blocks.3.conv2.depthwise_conv.conv.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.bias, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_var, stage4.2.blocks.3.conv2.pointwise_conv.conv.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.bias, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_var

09/15 11:12:24 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:12:24 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:12:24 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 97, in forward
    x = self.depthwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.00 MiB (GPU 0; 23.65 GiB total capacity; 21.77 GiB already allocated; 16.75 MiB free; 22.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:12:57 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:12:58 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_batch_size = 64
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_batch_size = 64
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:13:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:13:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:13:02 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:13:03 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:13:03 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:13:03 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:13:03 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:13:03 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for stem.0.conv.weight: copying a param with shape torch.Size([32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 3, 3, 3]).
size mismatch for stem.0.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.conv.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 40, 3, 3]).
size mismatch for stem.1.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.2.conv.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 40, 3, 3]).
size mismatch for stem.2.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.0.conv.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 80, 3, 3]).
size mismatch for stage1.0.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.main_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.main_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.short_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.final_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.final_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.attention.fc.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.attention.fc.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.0.conv.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 160, 3, 3]).
size mismatch for stage2.0.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.main_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.main_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.short_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.final_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.final_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.attention.fc.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.attention.fc.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.0.conv.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 320, 3, 3]).
size mismatch for stage3.0.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.main_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.main_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.short_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.final_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.final_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.attention.fc.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.attention.fc.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.0.conv.weight: copying a param with shape torch.Size([1024, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1280, 640, 3, 3]).
size mismatch for stage4.0.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv1.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv2.conv.weight: copying a param with shape torch.Size([1024, 2048, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 2560, 1, 1]).
size mismatch for stage4.1.conv2.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.main_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.main_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.short_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.final_conv.conv.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.final_conv.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.attention.fc.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.attention.fc.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
unexpected key in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

missing keys in source state_dict: stage1.1.blocks.3.conv1.conv.weight, stage1.1.blocks.3.conv1.bn.weight, stage1.1.blocks.3.conv1.bn.bias, stage1.1.blocks.3.conv1.bn.running_mean, stage1.1.blocks.3.conv1.bn.running_var, stage1.1.blocks.3.conv2.depthwise_conv.conv.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.bias, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_var, stage1.1.blocks.3.conv2.pointwise_conv.conv.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.bias, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.6.conv1.conv.weight, stage2.1.blocks.6.conv1.bn.weight, stage2.1.blocks.6.conv1.bn.bias, stage2.1.blocks.6.conv1.bn.running_mean, stage2.1.blocks.6.conv1.bn.running_var, stage2.1.blocks.6.conv2.depthwise_conv.conv.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.bias, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.6.conv2.pointwise_conv.conv.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.bias, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.7.conv1.conv.weight, stage2.1.blocks.7.conv1.bn.weight, stage2.1.blocks.7.conv1.bn.bias, stage2.1.blocks.7.conv1.bn.running_mean, stage2.1.blocks.7.conv1.bn.running_var, stage2.1.blocks.7.conv2.depthwise_conv.conv.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.bias, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.7.conv2.pointwise_conv.conv.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.bias, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.6.conv1.conv.weight, stage3.1.blocks.6.conv1.bn.weight, stage3.1.blocks.6.conv1.bn.bias, stage3.1.blocks.6.conv1.bn.running_mean, stage3.1.blocks.6.conv1.bn.running_var, stage3.1.blocks.6.conv2.depthwise_conv.conv.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.bias, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.6.conv2.pointwise_conv.conv.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.bias, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.7.conv1.conv.weight, stage3.1.blocks.7.conv1.bn.weight, stage3.1.blocks.7.conv1.bn.bias, stage3.1.blocks.7.conv1.bn.running_mean, stage3.1.blocks.7.conv1.bn.running_var, stage3.1.blocks.7.conv2.depthwise_conv.conv.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.bias, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.7.conv2.pointwise_conv.conv.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.bias, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage4.2.blocks.3.conv1.conv.weight, stage4.2.blocks.3.conv1.bn.weight, stage4.2.blocks.3.conv1.bn.bias, stage4.2.blocks.3.conv1.bn.running_mean, stage4.2.blocks.3.conv1.bn.running_var, stage4.2.blocks.3.conv2.depthwise_conv.conv.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.bias, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_var, stage4.2.blocks.3.conv2.pointwise_conv.conv.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.bias, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_var

09/15 11:13:03 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:13:03 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:13:03 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 97, in forward
    x = self.depthwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.00 MiB (GPU 0; 23.65 GiB total capacity; 21.77 GiB already allocated; 16.75 MiB free; 22.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:14:51 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:14:51 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_batch_size = 64
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_batch_size = 64
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:14:53 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:14:53 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:55 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:14:56 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:14:56 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:14:56 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:14:56 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:14:56 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:14:56 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for stem.0.conv.weight: copying a param with shape torch.Size([32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 3, 3, 3]).
size mismatch for stem.0.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.conv.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 40, 3, 3]).
size mismatch for stem.1.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.2.conv.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 40, 3, 3]).
size mismatch for stem.2.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.0.conv.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 80, 3, 3]).
size mismatch for stage1.0.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.main_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.main_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.short_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.final_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.final_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.attention.fc.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.attention.fc.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.0.conv.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 160, 3, 3]).
size mismatch for stage2.0.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.main_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.main_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.short_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.final_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.final_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.attention.fc.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.attention.fc.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.0.conv.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 320, 3, 3]).
size mismatch for stage3.0.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.main_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.main_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.short_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.final_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.final_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.attention.fc.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.attention.fc.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.0.conv.weight: copying a param with shape torch.Size([1024, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1280, 640, 3, 3]).
size mismatch for stage4.0.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv1.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv2.conv.weight: copying a param with shape torch.Size([1024, 2048, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 2560, 1, 1]).
size mismatch for stage4.1.conv2.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.main_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.main_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.short_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.final_conv.conv.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.final_conv.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.attention.fc.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.attention.fc.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
unexpected key in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

missing keys in source state_dict: stage1.1.blocks.3.conv1.conv.weight, stage1.1.blocks.3.conv1.bn.weight, stage1.1.blocks.3.conv1.bn.bias, stage1.1.blocks.3.conv1.bn.running_mean, stage1.1.blocks.3.conv1.bn.running_var, stage1.1.blocks.3.conv2.depthwise_conv.conv.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.bias, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_var, stage1.1.blocks.3.conv2.pointwise_conv.conv.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.bias, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.6.conv1.conv.weight, stage2.1.blocks.6.conv1.bn.weight, stage2.1.blocks.6.conv1.bn.bias, stage2.1.blocks.6.conv1.bn.running_mean, stage2.1.blocks.6.conv1.bn.running_var, stage2.1.blocks.6.conv2.depthwise_conv.conv.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.bias, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.6.conv2.pointwise_conv.conv.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.bias, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.7.conv1.conv.weight, stage2.1.blocks.7.conv1.bn.weight, stage2.1.blocks.7.conv1.bn.bias, stage2.1.blocks.7.conv1.bn.running_mean, stage2.1.blocks.7.conv1.bn.running_var, stage2.1.blocks.7.conv2.depthwise_conv.conv.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.bias, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.7.conv2.pointwise_conv.conv.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.bias, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.6.conv1.conv.weight, stage3.1.blocks.6.conv1.bn.weight, stage3.1.blocks.6.conv1.bn.bias, stage3.1.blocks.6.conv1.bn.running_mean, stage3.1.blocks.6.conv1.bn.running_var, stage3.1.blocks.6.conv2.depthwise_conv.conv.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.bias, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.6.conv2.pointwise_conv.conv.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.bias, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.7.conv1.conv.weight, stage3.1.blocks.7.conv1.bn.weight, stage3.1.blocks.7.conv1.bn.bias, stage3.1.blocks.7.conv1.bn.running_mean, stage3.1.blocks.7.conv1.bn.running_var, stage3.1.blocks.7.conv2.depthwise_conv.conv.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.bias, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.7.conv2.pointwise_conv.conv.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.bias, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage4.2.blocks.3.conv1.conv.weight, stage4.2.blocks.3.conv1.bn.weight, stage4.2.blocks.3.conv1.bn.bias, stage4.2.blocks.3.conv1.bn.running_mean, stage4.2.blocks.3.conv1.bn.running_var, stage4.2.blocks.3.conv2.depthwise_conv.conv.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.bias, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_var, stage4.2.blocks.3.conv2.pointwise_conv.conv.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.bias, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_var

09/15 11:14:57 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:14:57 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:14:57 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 97, in forward
    x = self.depthwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.00 MiB (GPU 0; 23.65 GiB total capacity; 21.77 GiB already allocated; 16.75 MiB free; 22.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:17:28 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:17:28 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(enable=False, type='PoseVisualizationHook'))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:17:30 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
09/15 11:17:31 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:17:33 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:17:33 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:17:33 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:17:33 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:17:33 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:17:34 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for stem.0.conv.weight: copying a param with shape torch.Size([32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 3, 3, 3]).
size mismatch for stem.0.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.conv.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 40, 3, 3]).
size mismatch for stem.1.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.2.conv.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 40, 3, 3]).
size mismatch for stem.2.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.0.conv.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 80, 3, 3]).
size mismatch for stage1.0.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.main_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.main_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.short_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.final_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.final_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.attention.fc.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.attention.fc.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.0.conv.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 160, 3, 3]).
size mismatch for stage2.0.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.main_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.main_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.short_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.final_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.final_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.attention.fc.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.attention.fc.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.0.conv.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 320, 3, 3]).
size mismatch for stage3.0.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.main_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.main_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.short_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.final_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.final_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.attention.fc.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.attention.fc.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.0.conv.weight: copying a param with shape torch.Size([1024, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1280, 640, 3, 3]).
size mismatch for stage4.0.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv1.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv2.conv.weight: copying a param with shape torch.Size([1024, 2048, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 2560, 1, 1]).
size mismatch for stage4.1.conv2.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.main_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.main_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.short_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.final_conv.conv.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.final_conv.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.attention.fc.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.attention.fc.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
unexpected key in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

missing keys in source state_dict: stage1.1.blocks.3.conv1.conv.weight, stage1.1.blocks.3.conv1.bn.weight, stage1.1.blocks.3.conv1.bn.bias, stage1.1.blocks.3.conv1.bn.running_mean, stage1.1.blocks.3.conv1.bn.running_var, stage1.1.blocks.3.conv2.depthwise_conv.conv.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.bias, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_var, stage1.1.blocks.3.conv2.pointwise_conv.conv.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.bias, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.6.conv1.conv.weight, stage2.1.blocks.6.conv1.bn.weight, stage2.1.blocks.6.conv1.bn.bias, stage2.1.blocks.6.conv1.bn.running_mean, stage2.1.blocks.6.conv1.bn.running_var, stage2.1.blocks.6.conv2.depthwise_conv.conv.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.bias, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.6.conv2.pointwise_conv.conv.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.bias, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.7.conv1.conv.weight, stage2.1.blocks.7.conv1.bn.weight, stage2.1.blocks.7.conv1.bn.bias, stage2.1.blocks.7.conv1.bn.running_mean, stage2.1.blocks.7.conv1.bn.running_var, stage2.1.blocks.7.conv2.depthwise_conv.conv.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.bias, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.7.conv2.pointwise_conv.conv.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.bias, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.6.conv1.conv.weight, stage3.1.blocks.6.conv1.bn.weight, stage3.1.blocks.6.conv1.bn.bias, stage3.1.blocks.6.conv1.bn.running_mean, stage3.1.blocks.6.conv1.bn.running_var, stage3.1.blocks.6.conv2.depthwise_conv.conv.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.bias, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.6.conv2.pointwise_conv.conv.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.bias, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.7.conv1.conv.weight, stage3.1.blocks.7.conv1.bn.weight, stage3.1.blocks.7.conv1.bn.bias, stage3.1.blocks.7.conv1.bn.running_mean, stage3.1.blocks.7.conv1.bn.running_var, stage3.1.blocks.7.conv2.depthwise_conv.conv.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.bias, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.7.conv2.pointwise_conv.conv.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.bias, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage4.2.blocks.3.conv1.conv.weight, stage4.2.blocks.3.conv1.bn.weight, stage4.2.blocks.3.conv1.bn.bias, stage4.2.blocks.3.conv1.bn.running_mean, stage4.2.blocks.3.conv1.bn.running_var, stage4.2.blocks.3.conv2.depthwise_conv.conv.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.bias, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_var, stage4.2.blocks.3.conv2.pointwise_conv.conv.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.bias, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_var

09/15 11:17:34 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:17:34 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:17:34 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 97, in forward
    x = self.depthwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.00 MiB (GPU 0; 23.65 GiB total capacity; 21.77 GiB already allocated; 16.75 MiB free; 22.10 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:19:31 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:19:31 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:19:34 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:19:34 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:19:36 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:19:36 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:19:36 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:19:36 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:19:37 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:19:37 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for stem.0.conv.weight: copying a param with shape torch.Size([32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 3, 3, 3]).
size mismatch for stem.0.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.conv.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 40, 3, 3]).
size mismatch for stem.1.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.2.conv.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 40, 3, 3]).
size mismatch for stem.2.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.0.conv.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 80, 3, 3]).
size mismatch for stage1.0.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.main_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.main_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.short_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.final_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.final_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.attention.fc.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.attention.fc.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.0.conv.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 160, 3, 3]).
size mismatch for stage2.0.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.main_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.main_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.short_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.final_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.final_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.attention.fc.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.attention.fc.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.0.conv.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 320, 3, 3]).
size mismatch for stage3.0.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.main_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.main_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.short_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.final_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.final_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.attention.fc.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.attention.fc.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.0.conv.weight: copying a param with shape torch.Size([1024, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1280, 640, 3, 3]).
size mismatch for stage4.0.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv1.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv2.conv.weight: copying a param with shape torch.Size([1024, 2048, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 2560, 1, 1]).
size mismatch for stage4.1.conv2.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.main_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.main_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.short_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.final_conv.conv.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.final_conv.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.attention.fc.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.attention.fc.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
unexpected key in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

missing keys in source state_dict: stage1.1.blocks.3.conv1.conv.weight, stage1.1.blocks.3.conv1.bn.weight, stage1.1.blocks.3.conv1.bn.bias, stage1.1.blocks.3.conv1.bn.running_mean, stage1.1.blocks.3.conv1.bn.running_var, stage1.1.blocks.3.conv2.depthwise_conv.conv.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.bias, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_var, stage1.1.blocks.3.conv2.pointwise_conv.conv.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.bias, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.6.conv1.conv.weight, stage2.1.blocks.6.conv1.bn.weight, stage2.1.blocks.6.conv1.bn.bias, stage2.1.blocks.6.conv1.bn.running_mean, stage2.1.blocks.6.conv1.bn.running_var, stage2.1.blocks.6.conv2.depthwise_conv.conv.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.bias, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.6.conv2.pointwise_conv.conv.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.bias, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.7.conv1.conv.weight, stage2.1.blocks.7.conv1.bn.weight, stage2.1.blocks.7.conv1.bn.bias, stage2.1.blocks.7.conv1.bn.running_mean, stage2.1.blocks.7.conv1.bn.running_var, stage2.1.blocks.7.conv2.depthwise_conv.conv.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.bias, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.7.conv2.pointwise_conv.conv.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.bias, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.6.conv1.conv.weight, stage3.1.blocks.6.conv1.bn.weight, stage3.1.blocks.6.conv1.bn.bias, stage3.1.blocks.6.conv1.bn.running_mean, stage3.1.blocks.6.conv1.bn.running_var, stage3.1.blocks.6.conv2.depthwise_conv.conv.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.bias, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.6.conv2.pointwise_conv.conv.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.bias, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.7.conv1.conv.weight, stage3.1.blocks.7.conv1.bn.weight, stage3.1.blocks.7.conv1.bn.bias, stage3.1.blocks.7.conv1.bn.running_mean, stage3.1.blocks.7.conv1.bn.running_var, stage3.1.blocks.7.conv2.depthwise_conv.conv.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.bias, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.7.conv2.pointwise_conv.conv.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.bias, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage4.2.blocks.3.conv1.conv.weight, stage4.2.blocks.3.conv1.bn.weight, stage4.2.blocks.3.conv1.bn.bias, stage4.2.blocks.3.conv1.bn.running_mean, stage4.2.blocks.3.conv1.bn.running_var, stage4.2.blocks.3.conv2.depthwise_conv.conv.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.bias, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_var, stage4.2.blocks.3.conv2.pointwise_conv.conv.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.bias, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_var

09/15 11:19:37 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:19:37 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:19:37 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 98, in forward
    x = self.pointwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 18.00 MiB (GPU 0; 23.65 GiB total capacity; 21.67 GiB already allocated; 10.94 MiB free; 22.00 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:21:07 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:21:07 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=32,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:21:10 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:21:10 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:21:12 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:21:12 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:21:12 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:21:12 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:21:13 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:21:13 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for stem.0.conv.weight: copying a param with shape torch.Size([32, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 3, 3, 3]).
size mismatch for stem.0.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.0.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.conv.weight: copying a param with shape torch.Size([32, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([40, 40, 3, 3]).
size mismatch for stem.1.bn.weight: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.bias: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_mean: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.1.bn.running_var: copying a param with shape torch.Size([32]) from checkpoint, the shape in current model is torch.Size([40]).
size mismatch for stem.2.conv.weight: copying a param with shape torch.Size([64, 32, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 40, 3, 3]).
size mismatch for stem.2.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stem.2.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.0.conv.weight: copying a param with shape torch.Size([128, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 80, 3, 3]).
size mismatch for stage1.0.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.0.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.main_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.main_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.main_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.conv.weight: copying a param with shape torch.Size([64, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 160, 1, 1]).
size mismatch for stage1.1.short_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.short_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.final_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.final_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.final_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage1.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([64, 64, 3, 3]) from checkpoint, the shape in current model is torch.Size([80, 80, 3, 3]).
size mismatch for stage1.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([64, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([80, 1, 5, 5]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([64, 64, 1, 1]) from checkpoint, the shape in current model is torch.Size([80, 80, 1, 1]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([64]) from checkpoint, the shape in current model is torch.Size([80]).
size mismatch for stage1.1.attention.fc.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage1.1.attention.fc.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.0.conv.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 160, 3, 3]).
size mismatch for stage2.0.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.0.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.main_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.main_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.main_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.conv.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 320, 1, 1]).
size mismatch for stage2.1.short_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.short_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.final_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.final_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.final_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage2.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([160, 160, 3, 3]).
size mismatch for stage2.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([128, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([160, 1, 5, 5]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([128, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([160, 160, 1, 1]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([160]).
size mismatch for stage2.1.attention.fc.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage2.1.attention.fc.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.0.conv.weight: copying a param with shape torch.Size([512, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 320, 3, 3]).
size mismatch for stage3.0.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.0.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.main_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.main_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.main_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.conv.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 640, 1, 1]).
size mismatch for stage3.1.short_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.short_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.final_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.final_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.final_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage3.1.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.3.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.3.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.4.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.4.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([320, 320, 3, 3]).
size mismatch for stage3.1.blocks.5.conv1.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv1.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([256, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([320, 1, 5, 5]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([256, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([320, 320, 1, 1]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.blocks.5.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([320]).
size mismatch for stage3.1.attention.fc.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage3.1.attention.fc.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.0.conv.weight: copying a param with shape torch.Size([1024, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([1280, 640, 3, 3]).
size mismatch for stage4.0.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.0.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv1.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.1.conv2.conv.weight: copying a param with shape torch.Size([1024, 2048, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 2560, 1, 1]).
size mismatch for stage4.1.conv2.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.1.conv2.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.main_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.main_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.main_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.conv.weight: copying a param with shape torch.Size([512, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 1280, 1, 1]).
size mismatch for stage4.2.short_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.short_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.final_conv.conv.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.final_conv.bn.weight: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_mean: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.final_conv.bn.running_var: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
size mismatch for stage4.2.blocks.0.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.0.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.0.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.1.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.1.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.conv.weight: copying a param with shape torch.Size([512, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([640, 640, 3, 3]).
size mismatch for stage4.2.blocks.2.conv1.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv1.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.conv.weight: copying a param with shape torch.Size([512, 1, 5, 5]) from checkpoint, the shape in current model is torch.Size([640, 1, 5, 5]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.depthwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.conv.weight: copying a param with shape torch.Size([512, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([640, 640, 1, 1]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_mean: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.blocks.2.conv2.pointwise_conv.bn.running_var: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([640]).
size mismatch for stage4.2.attention.fc.weight: copying a param with shape torch.Size([1024, 1024, 1, 1]) from checkpoint, the shape in current model is torch.Size([1280, 1280, 1, 1]).
size mismatch for stage4.2.attention.fc.bias: copying a param with shape torch.Size([1024]) from checkpoint, the shape in current model is torch.Size([1280]).
unexpected key in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

missing keys in source state_dict: stage1.1.blocks.3.conv1.conv.weight, stage1.1.blocks.3.conv1.bn.weight, stage1.1.blocks.3.conv1.bn.bias, stage1.1.blocks.3.conv1.bn.running_mean, stage1.1.blocks.3.conv1.bn.running_var, stage1.1.blocks.3.conv2.depthwise_conv.conv.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.weight, stage1.1.blocks.3.conv2.depthwise_conv.bn.bias, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.depthwise_conv.bn.running_var, stage1.1.blocks.3.conv2.pointwise_conv.conv.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.weight, stage1.1.blocks.3.conv2.pointwise_conv.bn.bias, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_mean, stage1.1.blocks.3.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.6.conv1.conv.weight, stage2.1.blocks.6.conv1.bn.weight, stage2.1.blocks.6.conv1.bn.bias, stage2.1.blocks.6.conv1.bn.running_mean, stage2.1.blocks.6.conv1.bn.running_var, stage2.1.blocks.6.conv2.depthwise_conv.conv.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.weight, stage2.1.blocks.6.conv2.depthwise_conv.bn.bias, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.6.conv2.pointwise_conv.conv.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.weight, stage2.1.blocks.6.conv2.pointwise_conv.bn.bias, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage2.1.blocks.7.conv1.conv.weight, stage2.1.blocks.7.conv1.bn.weight, stage2.1.blocks.7.conv1.bn.bias, stage2.1.blocks.7.conv1.bn.running_mean, stage2.1.blocks.7.conv1.bn.running_var, stage2.1.blocks.7.conv2.depthwise_conv.conv.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.weight, stage2.1.blocks.7.conv2.depthwise_conv.bn.bias, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage2.1.blocks.7.conv2.pointwise_conv.conv.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.weight, stage2.1.blocks.7.conv2.pointwise_conv.bn.bias, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage2.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.6.conv1.conv.weight, stage3.1.blocks.6.conv1.bn.weight, stage3.1.blocks.6.conv1.bn.bias, stage3.1.blocks.6.conv1.bn.running_mean, stage3.1.blocks.6.conv1.bn.running_var, stage3.1.blocks.6.conv2.depthwise_conv.conv.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.weight, stage3.1.blocks.6.conv2.depthwise_conv.bn.bias, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.6.conv2.pointwise_conv.conv.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.weight, stage3.1.blocks.6.conv2.pointwise_conv.bn.bias, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.6.conv2.pointwise_conv.bn.running_var, stage3.1.blocks.7.conv1.conv.weight, stage3.1.blocks.7.conv1.bn.weight, stage3.1.blocks.7.conv1.bn.bias, stage3.1.blocks.7.conv1.bn.running_mean, stage3.1.blocks.7.conv1.bn.running_var, stage3.1.blocks.7.conv2.depthwise_conv.conv.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.weight, stage3.1.blocks.7.conv2.depthwise_conv.bn.bias, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.depthwise_conv.bn.running_var, stage3.1.blocks.7.conv2.pointwise_conv.conv.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.weight, stage3.1.blocks.7.conv2.pointwise_conv.bn.bias, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_mean, stage3.1.blocks.7.conv2.pointwise_conv.bn.running_var, stage4.2.blocks.3.conv1.conv.weight, stage4.2.blocks.3.conv1.bn.weight, stage4.2.blocks.3.conv1.bn.bias, stage4.2.blocks.3.conv1.bn.running_mean, stage4.2.blocks.3.conv1.bn.running_var, stage4.2.blocks.3.conv2.depthwise_conv.conv.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.weight, stage4.2.blocks.3.conv2.depthwise_conv.bn.bias, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.depthwise_conv.bn.running_var, stage4.2.blocks.3.conv2.pointwise_conv.conv.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.weight, stage4.2.blocks.3.conv2.pointwise_conv.bn.bias, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_mean, stage4.2.blocks.3.conv2.pointwise_conv.bn.running_var

09/15 11:21:13 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:21:13 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:21:13 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
09/15 11:21:35 - mmengine - INFO - Epoch(train)   [1][ 50/291]  base_lr: 1.962342e-04 lr: 1.962342e-04  eta: 9:34:09  time: 0.438740  data_time: 0.175162  memory: 12704  grad_norm: 2.976841  loss: 0.440099  loss_kpt: 0.440099  acc_pose: 0.022844
09/15 11:21:55 - mmengine - INFO - Epoch(train)   [1][100/291]  base_lr: 3.964324e-04 lr: 3.964324e-04  eta: 9:10:43  time: 0.403442  data_time: 0.169230  memory: 12704  grad_norm: 0.857087  loss: 0.412682  loss_kpt: 0.412682  acc_pose: 0.018340
09/15 11:22:15 - mmengine - INFO - Epoch(train)   [1][150/291]  base_lr: 5.966306e-04 lr: 5.966306e-04  eta: 8:57:20  time: 0.391203  data_time: 0.157217  memory: 12704  grad_norm: 0.550169  loss: 0.413360  loss_kpt: 0.413360  acc_pose: 0.026405
09/15 11:22:34 - mmengine - INFO - Epoch(train)   [1][200/291]  base_lr: 7.968288e-04 lr: 7.968288e-04  eta: 8:48:52  time: 0.386236  data_time: 0.152959  memory: 12704  grad_norm: 0.597507  loss: 0.407269  loss_kpt: 0.407269  acc_pose: 0.030948
09/15 11:22:54 - mmengine - INFO - Epoch(train)   [1][250/291]  base_lr: 9.970270e-04 lr: 9.970270e-04  eta: 8:46:06  time: 0.395611  data_time: 0.161660  memory: 12704  grad_norm: 56.263002  loss: 3.370566  loss_kpt: 3.370566  acc_pose: 0.003812
09/15 11:23:09 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:23:30 - mmengine - INFO - Epoch(train)   [2][ 50/291]  base_lr: 1.361388e-03 lr: 1.361388e-03  eta: 8:43:15  time: 0.409230  data_time: 0.174998  memory: 12704  grad_norm: 0.964930  loss: 0.431253  loss_kpt: 0.431253  acc_pose: 0.029976
09/15 11:23:49 - mmengine - INFO - Epoch(train)   [2][100/291]  base_lr: 1.561586e-03 lr: 1.561586e-03  eta: 8:41:04  time: 0.390243  data_time: 0.152916  memory: 12704  grad_norm: 0.736795  loss: 0.416834  loss_kpt: 0.416834  acc_pose: 0.027118
09/15 11:24:09 - mmengine - INFO - Epoch(train)   [2][150/291]  base_lr: 1.761784e-03 lr: 1.761784e-03  eta: 8:39:39  time: 0.392622  data_time: 0.159629  memory: 12704  grad_norm: 0.742617  loss: 0.415627  loss_kpt: 0.415627  acc_pose: 0.032679
09/15 11:24:29 - mmengine - INFO - Epoch(train)   [2][200/291]  base_lr: 1.961982e-03 lr: 1.961982e-03  eta: 8:38:38  time: 0.393931  data_time: 0.159668  memory: 12704  grad_norm: 0.894442  loss: 0.412035  loss_kpt: 0.412035  acc_pose: 0.023914
09/15 11:24:48 - mmengine - INFO - Epoch(train)   [2][250/291]  base_lr: 2.162181e-03 lr: 2.162181e-03  eta: 8:37:29  time: 0.391699  data_time: 0.157211  memory: 12704  grad_norm: 0.811973  loss: 0.415182  loss_kpt: 0.415182  acc_pose: 0.044821
09/15 11:25:05 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:25:25 - mmengine - INFO - Epoch(train)   [3][ 50/291]  base_lr: 2.526541e-03 lr: 2.526541e-03  eta: 8:38:00  time: 0.405190  data_time: 0.171051  memory: 12704  grad_norm: 0.499199  loss: 0.403686  loss_kpt: 0.403686  acc_pose: 0.034210
09/15 11:25:45 - mmengine - INFO - Epoch(train)   [3][100/291]  base_lr: 2.726739e-03 lr: 2.726739e-03  eta: 8:37:37  time: 0.398162  data_time: 0.163708  memory: 12704  grad_norm: 0.503171  loss: 0.415616  loss_kpt: 0.415616  acc_pose: 0.031925
09/15 11:26:04 - mmengine - INFO - Epoch(train)   [3][150/291]  base_lr: 2.926938e-03 lr: 2.926938e-03  eta: 8:36:04  time: 0.385114  data_time: 0.148143  memory: 12704  grad_norm: 0.432013  loss: 0.405936  loss_kpt: 0.405936  acc_pose: 0.042646
09/15 11:26:24 - mmengine - INFO - Epoch(train)   [3][200/291]  base_lr: 3.127136e-03 lr: 3.127136e-03  eta: 8:35:26  time: 0.394085  data_time: 0.159364  memory: 12704  grad_norm: 0.534767  loss: 0.405717  loss_kpt: 0.405717  acc_pose: 0.034688
09/15 11:26:44 - mmengine - INFO - Epoch(train)   [3][250/291]  base_lr: 3.327334e-03 lr: 3.327334e-03  eta: 8:34:57  time: 0.395696  data_time: 0.161564  memory: 12704  grad_norm: 0.382960  loss: 0.405020  loss_kpt: 0.405020  acc_pose: 0.025945
09/15 11:27:00 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:27:20 - mmengine - INFO - Epoch(train)   [4][ 50/291]  base_lr: 3.691695e-03 lr: 3.691695e-03  eta: 8:34:18  time: 0.403253  data_time: 0.166830  memory: 12704  grad_norm: 0.432485  loss: 0.409746  loss_kpt: 0.409746  acc_pose: 0.025420
09/15 11:27:40 - mmengine - INFO - Epoch(train)   [4][100/291]  base_lr: 3.891893e-03 lr: 3.891893e-03  eta: 8:33:59  time: 0.397686  data_time: 0.163761  memory: 12704  grad_norm: 0.297207  loss: 0.401606  loss_kpt: 0.401606  acc_pose: 0.035198
09/15 11:27:50 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:27:59 - mmengine - INFO - Epoch(train)   [4][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:32:46  time: 0.383344  data_time: 0.149539  memory: 12704  grad_norm: 0.251190  loss: 0.405671  loss_kpt: 0.405671  acc_pose: 0.070420
09/15 11:28:19 - mmengine - INFO - Epoch(train)   [4][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:32:20  time: 0.395242  data_time: 0.161630  memory: 12704  grad_norm: 0.248536  loss: 0.400265  loss_kpt: 0.400265  acc_pose: 0.043889
09/15 11:28:39 - mmengine - INFO - Epoch(train)   [4][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:32:07  time: 0.398529  data_time: 0.164276  memory: 12704  grad_norm: 0.243057  loss: 0.405978  loss_kpt: 0.405978  acc_pose: 0.029433
09/15 11:28:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:29:15 - mmengine - INFO - Epoch(train)   [5][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:31:24  time: 0.405908  data_time: 0.171639  memory: 12704  grad_norm: 0.180313  loss: 0.411977  loss_kpt: 0.411977  acc_pose: 0.035674
09/15 11:29:34 - mmengine - INFO - Epoch(train)   [5][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:30:17  time: 0.381480  data_time: 0.148331  memory: 12704  grad_norm: 0.176344  loss: 0.394710  loss_kpt: 0.394710  acc_pose: 0.043955
09/15 11:29:53 - mmengine - INFO - Epoch(train)   [5][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:29:48  time: 0.392701  data_time: 0.158825  memory: 12704  grad_norm: 0.152100  loss: 0.409405  loss_kpt: 0.409405  acc_pose: 0.034644
09/15 11:30:13 - mmengine - INFO - Epoch(train)   [5][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:29:09  time: 0.389178  data_time: 0.154990  memory: 12704  grad_norm: 0.155537  loss: 0.406437  loss_kpt: 0.406437  acc_pose: 0.062720
09/15 11:30:32 - mmengine - INFO - Epoch(train)   [5][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:28:43  time: 0.393395  data_time: 0.159710  memory: 12704  grad_norm: 0.163918  loss: 0.399896  loss_kpt: 0.399896  acc_pose: 0.044384
09/15 11:30:48 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:31:09 - mmengine - INFO - Epoch(train)   [6][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:28:39  time: 0.415391  data_time: 0.179388  memory: 12704  grad_norm: 0.147884  loss: 0.407457  loss_kpt: 0.407457  acc_pose: 0.047594
09/15 11:31:29 - mmengine - INFO - Epoch(train)   [6][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:28:15  time: 0.393964  data_time: 0.160063  memory: 12704  grad_norm: 0.138585  loss: 0.406590  loss_kpt: 0.406590  acc_pose: 0.055224
09/15 11:31:48 - mmengine - INFO - Epoch(train)   [6][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:27:36  time: 0.388220  data_time: 0.155163  memory: 12704  grad_norm: 0.138697  loss: 0.396620  loss_kpt: 0.396620  acc_pose: 0.048417
09/15 11:32:08 - mmengine - INFO - Epoch(train)   [6][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:27:20  time: 0.397461  data_time: 0.163048  memory: 12704  grad_norm: 0.146879  loss: 0.403441  loss_kpt: 0.403441  acc_pose: 0.058201
09/15 11:32:28 - mmengine - INFO - Epoch(train)   [6][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:26:52  time: 0.392038  data_time: 0.157683  memory: 12704  grad_norm: 0.153577  loss: 0.406027  loss_kpt: 0.406027  acc_pose: 0.042552
09/15 11:32:43 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:33:03 - mmengine - INFO - Epoch(train)   [7][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:26:06  time: 0.404833  data_time: 0.171476  memory: 12704  grad_norm: 0.142906  loss: 0.408470  loss_kpt: 0.408470  acc_pose: 0.045401
09/15 11:33:23 - mmengine - INFO - Epoch(train)   [7][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:25:21  time: 0.383810  data_time: 0.146826  memory: 12704  grad_norm: 0.131170  loss: 0.397147  loss_kpt: 0.397147  acc_pose: 0.038539
09/15 11:33:42 - mmengine - INFO - Epoch(train)   [7][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:24:54  time: 0.391317  data_time: 0.157874  memory: 12704  grad_norm: 0.140986  loss: 0.394905  loss_kpt: 0.394905  acc_pose: 0.066027
09/15 11:34:01 - mmengine - INFO - Epoch(train)   [7][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:24:13  time: 0.384366  data_time: 0.150409  memory: 12704  grad_norm: 0.133566  loss: 0.395407  loss_kpt: 0.395407  acc_pose: 0.060904
09/15 11:34:22 - mmengine - INFO - Epoch(train)   [7][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:24:20  time: 0.408779  data_time: 0.174178  memory: 12704  grad_norm: 0.149370  loss: 0.391381  loss_kpt: 0.391381  acc_pose: 0.113359
09/15 11:34:23 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:34:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:34:57 - mmengine - INFO - Epoch(train)   [8][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:23:32  time: 0.399396  data_time: 0.166296  memory: 12704  grad_norm: 0.254033  loss: 0.392212  loss_kpt: 0.392212  acc_pose: 0.049540
09/15 11:35:17 - mmengine - INFO - Epoch(train)   [8][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:23:22  time: 0.400149  data_time: 0.166969  memory: 12704  grad_norm: 0.156144  loss: 0.388218  loss_kpt: 0.388218  acc_pose: 0.068971
09/15 11:35:37 - mmengine - INFO - Epoch(train)   [8][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:23:01  time: 0.394838  data_time: 0.160405  memory: 12704  grad_norm: 0.182982  loss: 0.385811  loss_kpt: 0.385811  acc_pose: 0.075056
09/15 11:35:57 - mmengine - INFO - Epoch(train)   [8][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:22:27  time: 0.386411  data_time: 0.152619  memory: 12704  grad_norm: 0.144401  loss: 0.386581  loss_kpt: 0.386581  acc_pose: 0.092833
09/15 11:36:16 - mmengine - INFO - Epoch(train)   [8][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:21:51  time: 0.385302  data_time: 0.151792  memory: 12704  grad_norm: 0.137466  loss: 0.380031  loss_kpt: 0.380031  acc_pose: 0.145978
09/15 11:36:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:36:52 - mmengine - INFO - Epoch(train)   [9][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:21:17  time: 0.394518  data_time: 0.160886  memory: 12704  grad_norm: 0.130898  loss: 0.375366  loss_kpt: 0.375366  acc_pose: 0.096919
09/15 11:37:11 - mmengine - INFO - Epoch(train)   [9][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:20:52  time: 0.391534  data_time: 0.157774  memory: 12704  grad_norm: 0.140841  loss: 0.369324  loss_kpt: 0.369324  acc_pose: 0.202587
09/15 11:37:32 - mmengine - INFO - Epoch(train)   [9][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:20:48  time: 0.405292  data_time: 0.171282  memory: 12704  grad_norm: 0.130002  loss: 0.367884  loss_kpt: 0.367884  acc_pose: 0.130297
09/15 11:37:52 - mmengine - INFO - Epoch(train)   [9][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:20:35  time: 0.399262  data_time: 0.165467  memory: 12704  grad_norm: 0.131465  loss: 0.362486  loss_kpt: 0.362486  acc_pose: 0.219170
09/15 11:38:11 - mmengine - INFO - Epoch(train)   [9][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:20:11  time: 0.391726  data_time: 0.158518  memory: 12704  grad_norm: 0.139290  loss: 0.365363  loss_kpt: 0.365363  acc_pose: 0.259832
09/15 11:38:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:38:47 - mmengine - INFO - Epoch(train)  [10][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:19:17  time: 0.396683  data_time: 0.163994  memory: 12704  grad_norm: 0.122946  loss: 0.360937  loss_kpt: 0.360937  acc_pose: 0.234696
09/15 11:39:06 - mmengine - INFO - Epoch(train)  [10][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:18:56  time: 0.393921  data_time: 0.160741  memory: 12704  grad_norm: 0.119055  loss: 0.361794  loss_kpt: 0.361794  acc_pose: 0.227790
09/15 11:39:26 - mmengine - INFO - Epoch(train)  [10][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:18:32  time: 0.391687  data_time: 0.159701  memory: 12704  grad_norm: 0.131830  loss: 0.354408  loss_kpt: 0.354408  acc_pose: 0.189660
09/15 11:39:45 - mmengine - INFO - Epoch(train)  [10][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:18:02  time: 0.387103  data_time: 0.153994  memory: 12704  grad_norm: 0.127445  loss: 0.349077  loss_kpt: 0.349077  acc_pose: 0.263887
09/15 11:40:05 - mmengine - INFO - Epoch(train)  [10][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:17:36  time: 0.389635  data_time: 0.156207  memory: 12704  grad_norm: 0.134270  loss: 0.354451  loss_kpt: 0.354451  acc_pose: 0.312868
09/15 11:40:20 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:40:20 - mmengine - INFO - Saving checkpoint at 10 epochs
09/15 11:40:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:40:40 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='PReLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1024,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/15 11:40:42 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:40:42 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 11:40:42 - mmengine - INFO - Epoch(train)  [11][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:17:00  time: 0.403260  data_time: 0.169349  memory: 12704  grad_norm: 0.127479  loss: 0.349391  loss_kpt: 0.349391  acc_pose: 0.218610
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:40:44 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:40:45 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:40:45 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:40:45 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:40:45 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:40:45 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:40:45 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:40:45 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
09/15 11:40:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:41:03 - mmengine - INFO - Epoch(train)  [11][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:16:53  time: 0.404448  data_time: 0.171097  memory: 12704  grad_norm: 0.138055  loss: 0.349472  loss_kpt: 0.349472  acc_pose: 0.231296
09/15 11:41:22 - mmengine - INFO - Epoch(train)  [11][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:16:32  time: 0.394124  data_time: 0.160116  memory: 12704  grad_norm: 0.126778  loss: 0.346895  loss_kpt: 0.346895  acc_pose: 0.259936
09/15 11:41:26 - mmengine - INFO - Epoch(train)   [1][ 50/146]  base_lr: 2.452928e-05 lr: 2.452928e-05  eta: 8:56:37  time: 0.817824  data_time: 0.474708  memory: 16273  loss: 2.147070  loss_kpt: 2.147070  acc_pose: 0.009182
09/15 11:41:42 - mmengine - INFO - Epoch(train)  [11][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:16:07  time: 0.389567  data_time: 0.156143  memory: 12704  grad_norm: 0.115850  loss: 0.346106  loss_kpt: 0.346106  acc_pose: 0.270714
09/15 11:42:02 - mmengine - INFO - Epoch(train)  [11][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:15:50  time: 0.396972  data_time: 0.162960  memory: 12704  grad_norm: 0.118580  loss: 0.344383  loss_kpt: 0.344383  acc_pose: 0.326334
09/15 11:42:06 - mmengine - INFO - Epoch(train)   [1][100/146]  base_lr: 4.955405e-05 lr: 4.955405e-05  eta: 8:46:27  time: 0.788886  data_time: 0.474309  memory: 16273  loss: 0.879671  loss_kpt: 0.879671  acc_pose: 0.032389
09/15 11:42:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:42:38 - mmengine - INFO - Epoch(train)  [12][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:15:25  time: 0.401901  data_time: 0.169066  memory: 12704  grad_norm: 0.127705  loss: 0.337245  loss_kpt: 0.337245  acc_pose: 0.205893
09/15 11:42:42 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:42:58 - mmengine - INFO - Epoch(train)  [12][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:15:07  time: 0.396170  data_time: 0.162175  memory: 12704  grad_norm: 0.125995  loss: 0.345305  loss_kpt: 0.345305  acc_pose: 0.267352
09/15 11:43:17 - mmengine - INFO - Epoch(train)  [12][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:14:45  time: 0.392648  data_time: 0.157238  memory: 12704  grad_norm: 0.126866  loss: 0.344082  loss_kpt: 0.344082  acc_pose: 0.371931
09/15 11:43:22 - mmengine - INFO - Epoch(train)   [2][ 50/146]  base_lr: 9.760162e-05 lr: 9.760162e-05  eta: 8:42:58  time: 0.807505  data_time: 0.491459  memory: 16273  loss: 0.822435  loss_kpt: 0.822435  acc_pose: 0.062299
09/15 11:43:37 - mmengine - INFO - Epoch(train)  [12][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:14:20  time: 0.389823  data_time: 0.156504  memory: 12704  grad_norm: 0.130475  loss: 0.339629  loss_kpt: 0.339629  acc_pose: 0.288960
09/15 11:43:57 - mmengine - INFO - Epoch(train)  [12][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:14:07  time: 0.400609  data_time: 0.166905  memory: 12704  grad_norm: 0.115618  loss: 0.339241  loss_kpt: 0.339241  acc_pose: 0.311504
09/15 11:44:01 - mmengine - INFO - Epoch(train)   [2][100/146]  base_lr: 1.226264e-04 lr: 1.226264e-04  eta: 8:39:40  time: 0.780070  data_time: 0.461682  memory: 16273  loss: 0.777376  loss_kpt: 0.777376  acc_pose: 0.205870
09/15 11:44:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:44:34 - mmengine - INFO - Epoch(train)  [13][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:13:44  time: 0.397590  data_time: 0.163845  memory: 12704  grad_norm: 0.120424  loss: 0.351778  loss_kpt: 0.351778  acc_pose: 0.308867
09/15 11:44:37 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:44:54 - mmengine - INFO - Epoch(train)  [13][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:13:33  time: 0.403293  data_time: 0.169481  memory: 12704  grad_norm: 0.112747  loss: 0.337148  loss_kpt: 0.337148  acc_pose: 0.354029
09/15 11:45:13 - mmengine - INFO - Epoch(train)  [13][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:13:14  time: 0.395820  data_time: 0.163162  memory: 12704  grad_norm: 0.111264  loss: 0.332354  loss_kpt: 0.332354  acc_pose: 0.365119
09/15 11:45:17 - mmengine - INFO - Epoch(train)   [3][ 50/146]  base_lr: 1.706740e-04 lr: 1.706740e-04  eta: 8:36:59  time: 0.800237  data_time: 0.484453  memory: 16273  loss: 0.566166  loss_kpt: 0.566166  acc_pose: 0.793700
09/15 11:45:33 - mmengine - INFO - Epoch(train)  [13][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:12:41  time: 0.381913  data_time: 0.149011  memory: 12704  grad_norm: 0.107686  loss: 0.330391  loss_kpt: 0.330391  acc_pose: 0.354452
09/15 11:45:53 - mmengine - INFO - Epoch(train)  [13][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:12:28  time: 0.401432  data_time: 0.167986  memory: 12704  grad_norm: 0.111020  loss: 0.324759  loss_kpt: 0.324759  acc_pose: 0.449960
09/15 11:45:56 - mmengine - INFO - Epoch(train)   [3][100/146]  base_lr: 1.956987e-04 lr: 1.956987e-04  eta: 8:35:34  time: 0.784712  data_time: 0.469466  memory: 16273  loss: 0.516919  loss_kpt: 0.516919  acc_pose: 0.875838
09/15 11:46:08 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:46:29 - mmengine - INFO - Epoch(train)  [14][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:11:54  time: 0.405474  data_time: 0.171140  memory: 12704  grad_norm: 0.113861  loss: 0.330107  loss_kpt: 0.330107  acc_pose: 0.391669
09/15 11:46:31 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:46:49 - mmengine - INFO - Epoch(train)  [14][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:11:41  time: 0.401923  data_time: 0.168453  memory: 12704  grad_norm: 0.106182  loss: 0.328217  loss_kpt: 0.328217  acc_pose: 0.280949
09/15 11:47:09 - mmengine - INFO - Epoch(train)  [14][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:11:24  time: 0.397812  data_time: 0.164003  memory: 12704  grad_norm: 0.098818  loss: 0.323040  loss_kpt: 0.323040  acc_pose: 0.408136
09/15 11:47:12 - mmengine - INFO - Epoch(train)   [4][ 50/146]  base_lr: 2.437463e-04 lr: 2.437463e-04  eta: 8:33:36  time: 0.809632  data_time: 0.492140  memory: 16273  loss: 0.479280  loss_kpt: 0.479280  acc_pose: 0.921660
09/15 11:47:28 - mmengine - INFO - Epoch(train)  [14][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:11:00  time: 0.389782  data_time: 0.157261  memory: 12704  grad_norm: 0.095789  loss: 0.321468  loss_kpt: 0.321468  acc_pose: 0.336198
09/15 11:47:35 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:47:48 - mmengine - INFO - Epoch(train)  [14][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:10:36  time: 0.390557  data_time: 0.157231  memory: 12704  grad_norm: 0.106270  loss: 0.325612  loss_kpt: 0.325612  acc_pose: 0.465967
09/15 11:47:50 - mmengine - INFO - Epoch(train)   [4][100/146]  base_lr: 2.687711e-04 lr: 2.687711e-04  eta: 8:31:08  time: 0.761417  data_time: 0.446540  memory: 16273  loss: 0.466010  loss_kpt: 0.466010  acc_pose: 0.924231
09/15 11:48:03 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:48:17 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:48:17 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/pth/rtmpose/rtm-x-u-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=32,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:48:20 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:48:20 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.08s)
creating index...
index created!
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:48:22 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.03s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:48:23 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:48:23 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:48:23 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:48:23 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/pth/rtmpose/rtm-x-u-384.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/pth/rtmpose/rtm-x-u-384.pth
09/15 11:48:23 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:48:23 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:48:23 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
09/15 11:48:24 - mmengine - INFO - Epoch(train)  [15][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:10:14  time: 0.421866  data_time: 0.185562  memory: 12704  grad_norm: 0.102851  loss: 0.323680  loss_kpt: 0.323680  acc_pose: 0.483057
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 98, in forward
    x = self.pointwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 34.00 MiB (GPU 0; 23.65 GiB total capacity; 7.23 GiB already allocated; 24.94 MiB free; 7.42 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:48:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:48:44 - mmengine - INFO - Epoch(train)  [15][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:09:53  time: 0.393653  data_time: 0.157735  memory: 12704  grad_norm: 0.097811  loss: 0.313713  loss_kpt: 0.313713  acc_pose: 0.357368
09/15 11:49:03 - mmengine - INFO - Epoch(train)  [15][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:09:23  time: 0.383893  data_time: 0.150329  memory: 12704  grad_norm: 0.104650  loss: 0.316610  loss_kpt: 0.316610  acc_pose: 0.514074
09/15 11:49:07 - mmengine - INFO - Epoch(train)   [5][ 50/146]  base_lr: 3.168186e-04 lr: 3.168186e-04  eta: 8:31:04  time: 0.790753  data_time: 0.474641  memory: 16273  loss: 0.456232  loss_kpt: 0.456232  acc_pose: 0.923475
09/15 11:49:23 - mmengine - INFO - Epoch(train)  [15][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:08:57  time: 0.387958  data_time: 0.153355  memory: 12704  grad_norm: 0.108525  loss: 0.323796  loss_kpt: 0.323796  acc_pose: 0.501783
09/15 11:49:43 - mmengine - INFO - Epoch(train)  [15][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:08:41  time: 0.399029  data_time: 0.164398  memory: 12704  grad_norm: 0.112709  loss: 0.319890  loss_kpt: 0.319890  acc_pose: 0.501682
09/15 11:49:47 - mmengine - INFO - Epoch(train)   [5][100/146]  base_lr: 3.418434e-04 lr: 3.418434e-04  eta: 8:30:40  time: 0.796148  data_time: 0.480535  memory: 16273  loss: 0.453468  loss_kpt: 0.453468  acc_pose: 0.949822
09/15 11:49:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:50:19 - mmengine - INFO - Epoch(train)  [16][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:08:05  time: 0.406276  data_time: 0.173752  memory: 12704  grad_norm: 0.107580  loss: 0.318539  loss_kpt: 0.318539  acc_pose: 0.432400
09/15 11:50:22 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:50:38 - mmengine - INFO - Epoch(train)  [16][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:07:37  time: 0.385338  data_time: 0.151628  memory: 12704  grad_norm: 0.105834  loss: 0.318067  loss_kpt: 0.318067  acc_pose: 0.528627
09/15 11:50:57 - mmengine - INFO - Epoch(train)  [16][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:07:07  time: 0.382050  data_time: 0.147967  memory: 12704  grad_norm: 0.106998  loss: 0.317296  loss_kpt: 0.317296  acc_pose: 0.435452
09/15 11:51:03 - mmengine - INFO - Epoch(train)   [6][ 50/146]  base_lr: 3.898910e-04 lr: 3.898910e-04  eta: 8:29:41  time: 0.807886  data_time: 0.491281  memory: 16273  loss: 0.448291  loss_kpt: 0.448291  acc_pose: 0.936600
09/15 11:51:16 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:51:16 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='PReLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1024,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/15 11:51:17 - mmengine - INFO - Epoch(train)  [16][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:06:46  time: 0.393506  data_time: 0.160263  memory: 12704  grad_norm: 0.099134  loss: 0.311634  loss_kpt: 0.311634  acc_pose: 0.437833
09/15 11:51:18 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:51:18 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:51:21 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:51:21 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:51:21 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:51:21 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:51:21 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:51:22 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:51:22 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:51:22 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 239, in forward
    x_main = self.main_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 108.00 MiB (GPU 0; 23.65 GiB total capacity; 3.80 GiB already allocated; 26.75 MiB free; 3.83 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:51:36 - mmengine - INFO - Epoch(train)  [16][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:06:27  time: 0.395545  data_time: 0.162068  memory: 12704  grad_norm: 0.098431  loss: 0.316775  loss_kpt: 0.316775  acc_pose: 0.387394
09/15 11:51:42 - mmengine - INFO - Epoch(train)   [6][100/146]  base_lr: 4.149158e-04 lr: 4.149158e-04  eta: 8:28:34  time: 0.779476  data_time: 0.460681  memory: 16273  loss: 0.436658  loss_kpt: 0.436658  acc_pose: 0.925753
09/15 11:51:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:52:13 - mmengine - INFO - Epoch(train)  [17][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:06:03  time: 0.415078  data_time: 0.180627  memory: 12704  grad_norm: 0.101959  loss: 0.314506  loss_kpt: 0.314506  acc_pose: 0.439871
09/15 11:52:17 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:52:33 - mmengine - INFO - Epoch(train)  [17][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:05:46  time: 0.398662  data_time: 0.165177  memory: 12704  grad_norm: 0.095385  loss: 0.310691  loss_kpt: 0.310691  acc_pose: 0.493755
09/15 11:52:52 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:52:52 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.004
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
input_size = (
    288,
    384,
)
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='SiLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.33,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/pth/rtmpose/rtm-x-u-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.25),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='SiLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1280,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
num_keypoints = 53
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.004, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=0.0002,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=32,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/3'

09/15 11:52:53 - mmengine - INFO - Epoch(train)  [17][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:05:23  time: 0.390444  data_time: 0.156306  memory: 12704  grad_norm: 0.099624  loss: 0.312235  loss_kpt: 0.312235  acc_pose: 0.470198
09/15 11:52:55 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:52:55 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
09/15 11:52:57 - mmengine - INFO - Epoch(train)   [7][ 50/146]  base_lr: 4.629633e-04 lr: 4.629633e-04  eta: 8:26:29  time: 0.790120  data_time: 0.472799  memory: 16273  loss: 0.445940  loss_kpt: 0.445940  acc_pose: 0.955588
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.6.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.7.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:52:57 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:52:58 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:52:58 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:52:58 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:52:58 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/pth/rtmpose/rtm-x-u-384.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/pth/rtmpose/rtm-x-u-384.pth
09/15 11:52:58 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:52:58 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:52:58 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/3.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train3.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train3.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 240, in forward
    x_main = self.blocks(x_main)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 145, in forward
    out = self.conv2(out)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/depthwise_separable_conv_module.py", line 98, in forward
    x = self.pointwise_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 34.00 MiB (GPU 0; 23.65 GiB total capacity; 7.23 GiB already allocated; 24.94 MiB free; 7.42 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:53:12 - mmengine - INFO - Epoch(train)  [17][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:04:54  time: 0.382321  data_time: 0.144690  memory: 12704  grad_norm: 0.094530  loss: 0.311379  loss_kpt: 0.311379  acc_pose: 0.488540
09/15 11:53:32 - mmengine - INFO - Epoch(train)  [17][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:04:36  time: 0.397416  data_time: 0.163992  memory: 12704  grad_norm: 0.097735  loss: 0.311490  loss_kpt: 0.311490  acc_pose: 0.474738
09/15 11:53:36 - mmengine - INFO - Epoch(train)   [7][100/146]  base_lr: 4.879881e-04 lr: 4.879881e-04  eta: 8:25:40  time: 0.784721  data_time: 0.469565  memory: 16273  loss: 0.435462  loss_kpt: 0.435462  acc_pose: 0.958109
09/15 11:53:47 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:53:55 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:54:08 - mmengine - INFO - Epoch(train)  [18][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:04:00  time: 0.403147  data_time: 0.169091  memory: 12704  grad_norm: 0.093846  loss: 0.308034  loss_kpt: 0.308034  acc_pose: 0.577107
09/15 11:54:09 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:54:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:54:27 - mmengine - INFO - Epoch(train)  [18][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:03:31  time: 0.381363  data_time: 0.147466  memory: 12704  grad_norm: 0.097240  loss: 0.308162  loss_kpt: 0.308162  acc_pose: 0.443749
09/15 11:54:46 - mmengine - INFO - Epoch(train)  [18][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:03:13  time: 0.397127  data_time: 0.164312  memory: 12704  grad_norm: 0.120504  loss: 0.310774  loss_kpt: 0.310774  acc_pose: 0.458987
09/15 11:54:52 - mmengine - INFO - Epoch(train)   [8][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:24:41  time: 0.801993  data_time: 0.483867  memory: 16273  loss: 0.435231  loss_kpt: 0.435231  acc_pose: 0.942373
09/15 11:55:06 - mmengine - INFO - Epoch(train)  [18][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:02:56  time: 0.398919  data_time: 0.164984  memory: 12704  grad_norm: 0.099672  loss: 0.305076  loss_kpt: 0.305076  acc_pose: 0.501557
09/15 11:55:26 - mmengine - INFO - Epoch(train)  [18][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:02:40  time: 0.398703  data_time: 0.163914  memory: 12704  grad_norm: 0.095142  loss: 0.308534  loss_kpt: 0.308534  acc_pose: 0.429284
09/15 11:55:32 - mmengine - INFO - Epoch(train)   [8][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:24:14  time: 0.797083  data_time: 0.481780  memory: 16273  loss: 0.442404  loss_kpt: 0.442404  acc_pose: 0.917718
09/15 11:55:42 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:56:03 - mmengine - INFO - Epoch(train)  [19][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:02:08  time: 0.401916  data_time: 0.168244  memory: 12704  grad_norm: 0.082557  loss: 0.306322  loss_kpt: 0.306322  acc_pose: 0.605155
09/15 11:56:07 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:56:22 - mmengine - INFO - Epoch(train)  [19][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:01:40  time: 0.382842  data_time: 0.148977  memory: 12704  grad_norm: 0.093589  loss: 0.304752  loss_kpt: 0.304752  acc_pose: 0.499977
09/15 11:56:41 - mmengine - INFO - Epoch(train)  [19][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:01:16  time: 0.389567  data_time: 0.156532  memory: 12704  grad_norm: 0.096679  loss: 0.306397  loss_kpt: 0.306397  acc_pose: 0.490406
09/15 11:56:47 - mmengine - INFO - Epoch(train)   [9][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:22:45  time: 0.796251  data_time: 0.478284  memory: 16273  loss: 0.428629  loss_kpt: 0.428629  acc_pose: 0.890728
09/15 11:57:01 - mmengine - INFO - Epoch(train)  [19][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:00:53  time: 0.389427  data_time: 0.156215  memory: 12704  grad_norm: 0.102516  loss: 0.308873  loss_kpt: 0.308873  acc_pose: 0.538728
09/15 11:57:20 - mmengine - INFO - Epoch(train)  [19][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:00:34  time: 0.395925  data_time: 0.162623  memory: 12704  grad_norm: 0.086851  loss: 0.300352  loss_kpt: 0.300352  acc_pose: 0.622745
09/15 11:57:27 - mmengine - INFO - Epoch(train)   [9][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:22:03  time: 0.788443  data_time: 0.473399  memory: 16273  loss: 0.431416  loss_kpt: 0.431416  acc_pose: 0.912981
09/15 11:57:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:57:57 - mmengine - INFO - Epoch(train)  [20][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 8:00:06  time: 0.404217  data_time: 0.170267  memory: 12704  grad_norm: 0.085830  loss: 0.304753  loss_kpt: 0.304753  acc_pose: 0.535898
09/15 11:58:02 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:58:17 - mmengine - INFO - Epoch(train)  [20][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:59:48  time: 0.396361  data_time: 0.160722  memory: 12704  grad_norm: 0.103176  loss: 0.306231  loss_kpt: 0.306231  acc_pose: 0.597644
09/15 11:58:36 - mmengine - INFO - Epoch(train)  [20][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:59:24  time: 0.388774  data_time: 0.155124  memory: 12704  grad_norm: 0.092727  loss: 0.301320  loss_kpt: 0.301320  acc_pose: 0.540682
09/15 11:58:43 - mmengine - INFO - Epoch(train)  [10][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:20:56  time: 0.815323  data_time: 0.499970  memory: 16273  loss: 0.429543  loss_kpt: 0.429543  acc_pose: 0.943017
09/15 11:58:56 - mmengine - INFO - Epoch(train)  [20][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:58:59  time: 0.385738  data_time: 0.149897  memory: 12704  grad_norm: 0.090296  loss: 0.299692  loss_kpt: 0.299692  acc_pose: 0.664369
09/15 11:59:15 - mmengine - INFO - Epoch(train)  [20][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:58:42  time: 0.398634  data_time: 0.162559  memory: 12704  grad_norm: 0.083439  loss: 0.297151  loss_kpt: 0.297151  acc_pose: 0.492142
09/15 11:59:22 - mmengine - INFO - Epoch(train)  [10][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:20:09  time: 0.784243  data_time: 0.468814  memory: 16273  loss: 0.416761  loss_kpt: 0.416761  acc_pose: 0.958568
09/15 11:59:31 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 11:59:31 - mmengine - INFO - Saving checkpoint at 20 epochs
09/15 11:59:47 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/15 11:59:47 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='PReLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1024,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/15 11:59:49 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/15 11:59:49 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/15 11:59:52 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/15 11:59:52 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/15 11:59:52 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/15 11:59:52 - mmengine - WARNING - The prefix is not set in metric class NME.
09/15 11:59:53 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/15 11:59:53 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/15 11:59:53 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/15 11:59:53 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
09/15 11:59:53 - mmengine - INFO - Epoch(train)  [21][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:58:09  time: 0.404331  data_time: 0.168583  memory: 12704  grad_norm: 0.103612  loss: 0.302808  loss_kpt: 0.302808  acc_pose: 0.598358
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 245, in forward
    x_final = self.attention(x_final)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/se_layer.py", line 162, in forward
    return x * out
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 216.00 MiB (GPU 0; 23.65 GiB total capacity; 7.18 GiB already allocated; 52.94 MiB free; 7.39 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/15 11:59:58 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 11:59:58 - mmengine - INFO - Saving checkpoint at 10 epochs
09/15 12:00:13 - mmengine - INFO - Epoch(train)  [21][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:57:44  time: 0.385277  data_time: 0.149083  memory: 12704  grad_norm: 0.086562  loss: 0.301479  loss_kpt: 0.301479  acc_pose: 0.568959
09/15 12:00:32 - mmengine - INFO - Epoch(train)  [21][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:57:22  time: 0.392132  data_time: 0.157660  memory: 12704  grad_norm: 0.091892  loss: 0.297093  loss_kpt: 0.297093  acc_pose: 0.436883
09/15 12:00:40 - mmengine - INFO - Epoch(train)  [11][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:19:05  time: 0.807419  data_time: 0.488750  memory: 16273  loss: 0.417108  loss_kpt: 0.417108  acc_pose: 0.956107
09/15 12:00:44 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:00:52 - mmengine - INFO - Epoch(train)  [21][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:56:57  time: 0.385907  data_time: 0.151951  memory: 12704  grad_norm: 0.085556  loss: 0.299212  loss_kpt: 0.299212  acc_pose: 0.557630
09/15 12:01:12 - mmengine - INFO - Epoch(train)  [21][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:56:42  time: 0.401248  data_time: 0.164718  memory: 12704  grad_norm: 0.085088  loss: 0.299406  loss_kpt: 0.299406  acc_pose: 0.660065
09/15 12:01:19 - mmengine - INFO - Epoch(train)  [11][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:18:21  time: 0.786318  data_time: 0.469867  memory: 16273  loss: 0.417026  loss_kpt: 0.417026  acc_pose: 0.949979
09/15 12:01:28 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:01:48 - mmengine - INFO - Epoch(train)  [22][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:56:09  time: 0.403229  data_time: 0.169940  memory: 12704  grad_norm: 0.095173  loss: 0.298412  loss_kpt: 0.298412  acc_pose: 0.508799
09/15 12:01:54 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:02:08 - mmengine - INFO - Epoch(train)  [22][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:55:54  time: 0.402724  data_time: 0.168562  memory: 12704  grad_norm: 0.092276  loss: 0.298126  loss_kpt: 0.298126  acc_pose: 0.549200
09/15 12:02:27 - mmengine - INFO - Epoch(train)  [22][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:55:29  time: 0.385161  data_time: 0.149518  memory: 12704  grad_norm: 0.087897  loss: 0.296266  loss_kpt: 0.296266  acc_pose: 0.595134
09/15 12:02:35 - mmengine - INFO - Epoch(train)  [12][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:17:01  time: 0.802160  data_time: 0.485162  memory: 16273  loss: 0.409932  loss_kpt: 0.409932  acc_pose: 0.971737
09/15 12:02:47 - mmengine - INFO - Epoch(train)  [22][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:55:12  time: 0.399095  data_time: 0.165941  memory: 12704  grad_norm: 0.088549  loss: 0.294753  loss_kpt: 0.294753  acc_pose: 0.495350
09/15 12:03:07 - mmengine - INFO - Epoch(train)  [22][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:54:53  time: 0.397378  data_time: 0.163652  memory: 12704  grad_norm: 0.086630  loss: 0.292144  loss_kpt: 0.292144  acc_pose: 0.557263
09/15 12:03:13 - mmengine - INFO - Epoch(train)  [12][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:16:08  time: 0.777952  data_time: 0.462775  memory: 16273  loss: 0.414914  loss_kpt: 0.414914  acc_pose: 0.932938
09/15 12:03:23 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:03:43 - mmengine - INFO - Epoch(train)  [23][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:54:19  time: 0.407623  data_time: 0.170538  memory: 12704  grad_norm: 0.085980  loss: 0.291840  loss_kpt: 0.291840  acc_pose: 0.532746
09/15 12:03:49 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:04:03 - mmengine - INFO - Epoch(train)  [23][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:53:58  time: 0.392083  data_time: 0.156042  memory: 12704  grad_norm: 0.088373  loss: 0.292821  loss_kpt: 0.292821  acc_pose: 0.547725
09/15 12:04:22 - mmengine - INFO - Epoch(train)  [23][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:53:33  time: 0.385013  data_time: 0.151288  memory: 12704  grad_norm: 0.083502  loss: 0.293331  loss_kpt: 0.293331  acc_pose: 0.552304
09/15 12:04:29 - mmengine - INFO - Epoch(train)  [13][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:14:48  time: 0.794324  data_time: 0.479408  memory: 16273  loss: 0.414339  loss_kpt: 0.414339  acc_pose: 0.945238
09/15 12:04:42 - mmengine - INFO - Epoch(train)  [23][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:53:16  time: 0.398598  data_time: 0.164763  memory: 12704  grad_norm: 0.085638  loss: 0.298338  loss_kpt: 0.298338  acc_pose: 0.540663
09/15 12:05:01 - mmengine - INFO - Epoch(train)  [23][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:52:54  time: 0.390721  data_time: 0.157258  memory: 12704  grad_norm: 0.090010  loss: 0.293781  loss_kpt: 0.293781  acc_pose: 0.496360
09/15 12:05:08 - mmengine - INFO - Epoch(train)  [13][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:14:06  time: 0.786777  data_time: 0.467530  memory: 16273  loss: 0.407326  loss_kpt: 0.407326  acc_pose: 0.962268
09/15 12:05:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:05:38 - mmengine - INFO - Epoch(train)  [24][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:52:21  time: 0.400007  data_time: 0.166319  memory: 12704  grad_norm: 0.092455  loss: 0.294820  loss_kpt: 0.294820  acc_pose: 0.559180
09/15 12:05:44 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:05:57 - mmengine - INFO - Epoch(train)  [24][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:52:01  time: 0.393614  data_time: 0.159581  memory: 12704  grad_norm: 0.082284  loss: 0.288387  loss_kpt: 0.288387  acc_pose: 0.600792
09/15 12:06:17 - mmengine - INFO - Epoch(train)  [24][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:51:44  time: 0.398711  data_time: 0.164582  memory: 12704  grad_norm: 0.086982  loss: 0.294355  loss_kpt: 0.294355  acc_pose: 0.590836
09/15 12:06:24 - mmengine - INFO - Epoch(train)  [14][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:12:56  time: 0.811564  data_time: 0.493422  memory: 16273  loss: 0.409048  loss_kpt: 0.409048  acc_pose: 0.959255
09/15 12:06:37 - mmengine - INFO - Epoch(train)  [24][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:51:24  time: 0.394386  data_time: 0.161099  memory: 12704  grad_norm: 0.094657  loss: 0.295006  loss_kpt: 0.295006  acc_pose: 0.618633
09/15 12:06:57 - mmengine - INFO - Epoch(train)  [24][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:51:05  time: 0.395566  data_time: 0.161418  memory: 12704  grad_norm: 0.089222  loss: 0.290300  loss_kpt: 0.290300  acc_pose: 0.561304
09/15 12:07:04 - mmengine - INFO - Epoch(train)  [14][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:12:11  time: 0.783779  data_time: 0.464647  memory: 16273  loss: 0.406557  loss_kpt: 0.406557  acc_pose: 0.943695
09/15 12:07:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:07:13 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:07:20 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:07:33 - mmengine - INFO - Epoch(train)  [25][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:50:36  time: 0.411637  data_time: 0.174668  memory: 12704  grad_norm: 0.091254  loss: 0.289229  loss_kpt: 0.289229  acc_pose: 0.613978
09/15 12:07:39 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:07:53 - mmengine - INFO - Epoch(train)  [25][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:50:11  time: 0.383802  data_time: 0.149469  memory: 12704  grad_norm: 0.078489  loss: 0.289351  loss_kpt: 0.289351  acc_pose: 0.578035
09/15 12:08:12 - mmengine - INFO - Epoch(train)  [25][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:49:52  time: 0.394653  data_time: 0.160462  memory: 12704  grad_norm: 0.089492  loss: 0.291444  loss_kpt: 0.291444  acc_pose: 0.673816
09/15 12:08:19 - mmengine - INFO - Epoch(train)  [15][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:10:56  time: 0.807708  data_time: 0.491134  memory: 16273  loss: 0.400274  loss_kpt: 0.400274  acc_pose: 0.918837
09/15 12:08:32 - mmengine - INFO - Epoch(train)  [25][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:49:27  time: 0.385503  data_time: 0.151784  memory: 12704  grad_norm: 0.092532  loss: 0.290725  loss_kpt: 0.290725  acc_pose: 0.601766
09/15 12:08:51 - mmengine - INFO - Epoch(train)  [25][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:49:06  time: 0.391200  data_time: 0.157485  memory: 12704  grad_norm: 0.105986  loss: 0.288673  loss_kpt: 0.288673  acc_pose: 0.695546
09/15 12:08:58 - mmengine - INFO - Epoch(train)  [15][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:10:08  time: 0.779345  data_time: 0.460262  memory: 16273  loss: 0.402998  loss_kpt: 0.402998  acc_pose: 0.967133
09/15 12:09:07 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:09:27 - mmengine - INFO - Epoch(train)  [26][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:48:29  time: 0.400336  data_time: 0.165883  memory: 12704  grad_norm: 0.088154  loss: 0.289675  loss_kpt: 0.289675  acc_pose: 0.643923
09/15 12:09:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:09:47 - mmengine - INFO - Epoch(train)  [26][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:48:16  time: 0.408336  data_time: 0.171494  memory: 12704  grad_norm: 0.095888  loss: 0.288580  loss_kpt: 0.288580  acc_pose: 0.680851
09/15 12:10:07 - mmengine - INFO - Epoch(train)  [26][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:47:53  time: 0.388333  data_time: 0.154415  memory: 12704  grad_norm: 0.079639  loss: 0.287287  loss_kpt: 0.287287  acc_pose: 0.616768
09/15 12:10:13 - mmengine - INFO - Epoch(train)  [16][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:08:36  time: 0.796101  data_time: 0.479475  memory: 16273  loss: 0.403407  loss_kpt: 0.403407  acc_pose: 0.962890
09/15 12:10:27 - mmengine - INFO - Epoch(train)  [26][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:47:34  time: 0.397040  data_time: 0.163197  memory: 12704  grad_norm: 0.105709  loss: 0.285082  loss_kpt: 0.285082  acc_pose: 0.608260
09/15 12:10:47 - mmengine - INFO - Epoch(train)  [26][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:47:16  time: 0.397377  data_time: 0.163743  memory: 12704  grad_norm: 0.086403  loss: 0.283566  loss_kpt: 0.283566  acc_pose: 0.623985
09/15 12:10:52 - mmengine - INFO - Epoch(train)  [16][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:07:43  time: 0.771265  data_time: 0.456590  memory: 16273  loss: 0.398803  loss_kpt: 0.398803  acc_pose: 0.971414
09/15 12:11:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:11:22 - mmengine - INFO - Epoch(train)  [27][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:46:38  time: 0.405673  data_time: 0.171035  memory: 12704  grad_norm: 0.076686  loss: 0.284281  loss_kpt: 0.284281  acc_pose: 0.644308
09/15 12:11:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:11:42 - mmengine - INFO - Epoch(train)  [27][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:46:15  time: 0.387072  data_time: 0.152315  memory: 12704  grad_norm: 0.091668  loss: 0.283999  loss_kpt: 0.283999  acc_pose: 0.622465
09/15 12:12:02 - mmengine - INFO - Epoch(train)  [27][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:45:57  time: 0.397907  data_time: 0.164102  memory: 12704  grad_norm: 0.088019  loss: 0.284911  loss_kpt: 0.284911  acc_pose: 0.576645
09/15 12:12:07 - mmengine - INFO - Epoch(train)  [17][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:06:25  time: 0.798373  data_time: 0.482168  memory: 16273  loss: 0.399406  loss_kpt: 0.399406  acc_pose: 0.953754
09/15 12:12:21 - mmengine - INFO - Epoch(train)  [27][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:45:37  time: 0.393003  data_time: 0.158394  memory: 12704  grad_norm: 0.086531  loss: 0.288072  loss_kpt: 0.288072  acc_pose: 0.613809
09/15 12:12:41 - mmengine - INFO - Epoch(train)  [27][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:45:18  time: 0.397449  data_time: 0.163802  memory: 12704  grad_norm: 0.088853  loss: 0.282190  loss_kpt: 0.282190  acc_pose: 0.658606
09/15 12:12:46 - mmengine - INFO - Epoch(train)  [17][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:05:30  time: 0.768395  data_time: 0.451863  memory: 16273  loss: 0.402371  loss_kpt: 0.402371  acc_pose: 0.943773
09/15 12:12:57 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:13:17 - mmengine - INFO - Epoch(train)  [28][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:44:42  time: 0.398161  data_time: 0.161295  memory: 12704  grad_norm: 0.085779  loss: 0.286227  loss_kpt: 0.286227  acc_pose: 0.708497
09/15 12:13:22 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:13:37 - mmengine - INFO - Epoch(train)  [28][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:44:20  time: 0.390730  data_time: 0.157217  memory: 12704  grad_norm: 0.089109  loss: 0.281559  loss_kpt: 0.281559  acc_pose: 0.631298
09/15 12:13:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:13:57 - mmengine - INFO - Epoch(train)  [28][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:44:05  time: 0.403936  data_time: 0.169618  memory: 12704  grad_norm: 0.086056  loss: 0.281232  loss_kpt: 0.281232  acc_pose: 0.627748
09/15 12:14:01 - mmengine - INFO - Epoch(train)  [18][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:04:16  time: 0.795941  data_time: 0.477271  memory: 16273  loss: 0.397733  loss_kpt: 0.397733  acc_pose: 0.932269
09/15 12:14:16 - mmengine - INFO - Epoch(train)  [28][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:43:45  time: 0.393647  data_time: 0.160790  memory: 12704  grad_norm: 0.098887  loss: 0.285393  loss_kpt: 0.285393  acc_pose: 0.637284
09/15 12:14:36 - mmengine - INFO - Epoch(train)  [28][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:43:22  time: 0.388403  data_time: 0.154729  memory: 12704  grad_norm: 0.099282  loss: 0.283764  loss_kpt: 0.283764  acc_pose: 0.638723
09/15 12:14:41 - mmengine - INFO - Epoch(train)  [18][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:03:41  time: 0.793949  data_time: 0.477846  memory: 16273  loss: 0.396552  loss_kpt: 0.396552  acc_pose: 0.963500
09/15 12:14:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:15:12 - mmengine - INFO - Epoch(train)  [29][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:42:47  time: 0.404811  data_time: 0.170000  memory: 12704  grad_norm: 0.076070  loss: 0.283973  loss_kpt: 0.283973  acc_pose: 0.614139
09/15 12:15:16 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:15:31 - mmengine - INFO - Epoch(train)  [29][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:42:24  time: 0.387354  data_time: 0.153289  memory: 12704  grad_norm: 0.107824  loss: 0.285226  loss_kpt: 0.285226  acc_pose: 0.576895
09/15 12:15:51 - mmengine - INFO - Epoch(train)  [29][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:42:06  time: 0.399282  data_time: 0.165129  memory: 12704  grad_norm: 0.083912  loss: 0.287175  loss_kpt: 0.287175  acc_pose: 0.680942
09/15 12:15:56 - mmengine - INFO - Epoch(train)  [19][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:02:09  time: 0.788336  data_time: 0.470416  memory: 16273  loss: 0.401270  loss_kpt: 0.401270  acc_pose: 0.965958
09/15 12:16:10 - mmengine - INFO - Epoch(train)  [29][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:41:42  time: 0.383434  data_time: 0.149896  memory: 12704  grad_norm: 0.089419  loss: 0.282403  loss_kpt: 0.282403  acc_pose: 0.609476
09/15 12:16:30 - mmengine - INFO - Epoch(train)  [29][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:41:25  time: 0.400690  data_time: 0.166783  memory: 12704  grad_norm: 0.089270  loss: 0.280615  loss_kpt: 0.280615  acc_pose: 0.613673
09/15 12:16:35 - mmengine - INFO - Epoch(train)  [19][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:01:27  time: 0.783791  data_time: 0.467841  memory: 16273  loss: 0.397410  loss_kpt: 0.397410  acc_pose: 0.937984
09/15 12:16:46 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:17:06 - mmengine - INFO - Epoch(train)  [30][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:40:49  time: 0.396944  data_time: 0.162608  memory: 12704  grad_norm: 0.086336  loss: 0.285057  loss_kpt: 0.285057  acc_pose: 0.680025
09/15 12:17:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:17:26 - mmengine - INFO - Epoch(train)  [30][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:40:26  time: 0.386181  data_time: 0.152066  memory: 12704  grad_norm: 0.095450  loss: 0.278592  loss_kpt: 0.278592  acc_pose: 0.627710
09/15 12:17:45 - mmengine - INFO - Epoch(train)  [30][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:40:07  time: 0.395840  data_time: 0.161149  memory: 12704  grad_norm: 0.092742  loss: 0.281102  loss_kpt: 0.281102  acc_pose: 0.701041
09/15 12:17:52 - mmengine - INFO - Epoch(train)  [20][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 8:00:32  time: 0.801148  data_time: 0.484157  memory: 16273  loss: 0.398740  loss_kpt: 0.398740  acc_pose: 0.941248
09/15 12:18:06 - mmengine - INFO - Epoch(train)  [30][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:39:51  time: 0.404425  data_time: 0.170148  memory: 12704  grad_norm: 0.084276  loss: 0.281174  loss_kpt: 0.281174  acc_pose: 0.673441
09/15 12:18:25 - mmengine - INFO - Epoch(train)  [30][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:39:28  time: 0.387044  data_time: 0.153863  memory: 12704  grad_norm: 0.101695  loss: 0.281318  loss_kpt: 0.281318  acc_pose: 0.594013
09/15 12:18:31 - mmengine - INFO - Epoch(train)  [20][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:59:45  time: 0.775867  data_time: 0.459954  memory: 16273  loss: 0.396298  loss_kpt: 0.396298  acc_pose: 0.963408
09/15 12:18:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:18:41 - mmengine - INFO - Saving checkpoint at 30 epochs
09/15 12:19:03 - mmengine - INFO - Epoch(train)  [31][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:38:54  time: 0.404043  data_time: 0.169777  memory: 12704  grad_norm: 0.090964  loss: 0.282873  loss_kpt: 0.282873  acc_pose: 0.634815
09/15 12:19:06 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:19:06 - mmengine - INFO - Saving checkpoint at 20 epochs
09/15 12:19:22 - mmengine - INFO - Epoch(train)  [31][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:38:32  time: 0.389445  data_time: 0.153019  memory: 12704  grad_norm: 0.086453  loss: 0.276142  loss_kpt: 0.276142  acc_pose: 0.597568
09/15 12:19:42 - mmengine - INFO - Epoch(train)  [31][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:38:10  time: 0.387941  data_time: 0.154531  memory: 12704  grad_norm: 0.086794  loss: 0.275382  loss_kpt: 0.275382  acc_pose: 0.749115
09/15 12:19:47 - mmengine - INFO - Epoch(train)  [21][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:58:22  time: 0.789184  data_time: 0.472694  memory: 16273  loss: 0.395169  loss_kpt: 0.395169  acc_pose: 0.960843
09/15 12:20:01 - mmengine - INFO - Epoch(train)  [31][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:37:49  time: 0.393178  data_time: 0.160338  memory: 12704  grad_norm: 0.086618  loss: 0.278014  loss_kpt: 0.278014  acc_pose: 0.728881
09/15 12:20:10 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:20:21 - mmengine - INFO - Epoch(train)  [31][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:37:32  time: 0.399554  data_time: 0.165170  memory: 12704  grad_norm: 0.103463  loss: 0.279186  loss_kpt: 0.279186  acc_pose: 0.676022
09/15 12:20:26 - mmengine - INFO - Epoch(train)  [21][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:57:36  time: 0.775424  data_time: 0.455920  memory: 16273  loss: 0.393346  loss_kpt: 0.393346  acc_pose: 0.955558
09/15 12:20:29 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:20:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:20:57 - mmengine - INFO - Epoch(train)  [32][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:36:57  time: 0.406355  data_time: 0.168685  memory: 12704  grad_norm: 0.123809  loss: 0.276115  loss_kpt: 0.276115  acc_pose: 0.714723
09/15 12:21:02 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:21:17 - mmengine - INFO - Epoch(train)  [32][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:36:37  time: 0.394841  data_time: 0.160655  memory: 12704  grad_norm: 0.096816  loss: 0.275531  loss_kpt: 0.275531  acc_pose: 0.666415
09/15 12:21:37 - mmengine - INFO - Epoch(train)  [32][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:36:16  time: 0.388925  data_time: 0.151619  memory: 12704  grad_norm: 0.099010  loss: 0.274612  loss_kpt: 0.274612  acc_pose: 0.692742
09/15 12:21:42 - mmengine - INFO - Epoch(train)  [22][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:56:33  time: 0.810575  data_time: 0.494535  memory: 16273  loss: 0.401419  loss_kpt: 0.401419  acc_pose: 0.951355
09/15 12:21:57 - mmengine - INFO - Epoch(train)  [32][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:36:02  time: 0.410736  data_time: 0.176608  memory: 12704  grad_norm: 0.102673  loss: 0.276604  loss_kpt: 0.276604  acc_pose: 0.605089
09/15 12:22:17 - mmengine - INFO - Epoch(train)  [32][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:35:46  time: 0.404472  data_time: 0.170318  memory: 12704  grad_norm: 0.076744  loss: 0.277463  loss_kpt: 0.277463  acc_pose: 0.766407
09/15 12:22:22 - mmengine - INFO - Epoch(train)  [22][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:55:54  time: 0.789298  data_time: 0.473325  memory: 16273  loss: 0.395903  loss_kpt: 0.395903  acc_pose: 0.936409
09/15 12:22:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:22:53 - mmengine - INFO - Epoch(train)  [33][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:35:11  time: 0.418230  data_time: 0.184314  memory: 12704  grad_norm: 0.120978  loss: 0.276989  loss_kpt: 0.276989  acc_pose: 0.648262
09/15 12:22:57 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:23:13 - mmengine - INFO - Epoch(train)  [33][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:34:47  time: 0.382057  data_time: 0.147314  memory: 12704  grad_norm: 0.087258  loss: 0.277141  loss_kpt: 0.277141  acc_pose: 0.703983
09/15 12:23:32 - mmengine - INFO - Epoch(train)  [33][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:34:22  time: 0.381711  data_time: 0.147218  memory: 12704  grad_norm: 0.089336  loss: 0.275376  loss_kpt: 0.275376  acc_pose: 0.692660
09/15 12:23:38 - mmengine - INFO - Epoch(train)  [23][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:54:40  time: 0.802867  data_time: 0.486025  memory: 16273  loss: 0.391198  loss_kpt: 0.391198  acc_pose: 0.956913
09/15 12:23:51 - mmengine - INFO - Epoch(train)  [33][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:34:02  time: 0.392743  data_time: 0.155552  memory: 12704  grad_norm: 0.076439  loss: 0.277820  loss_kpt: 0.277820  acc_pose: 0.717637
09/15 12:24:11 - mmengine - INFO - Epoch(train)  [33][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:33:42  time: 0.392369  data_time: 0.157219  memory: 12704  grad_norm: 0.080234  loss: 0.277159  loss_kpt: 0.277159  acc_pose: 0.714373
09/15 12:24:16 - mmengine - INFO - Epoch(train)  [23][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:53:53  time: 0.773062  data_time: 0.456360  memory: 16273  loss: 0.394530  loss_kpt: 0.394530  acc_pose: 0.959650
09/15 12:24:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:24:47 - mmengine - INFO - Epoch(train)  [34][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:33:10  time: 0.404911  data_time: 0.167456  memory: 12704  grad_norm: 0.082896  loss: 0.275585  loss_kpt: 0.275585  acc_pose: 0.675888
09/15 12:24:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:25:07 - mmengine - INFO - Epoch(train)  [34][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:32:49  time: 0.389014  data_time: 0.155341  memory: 12704  grad_norm: 0.088963  loss: 0.275338  loss_kpt: 0.275338  acc_pose: 0.615964
09/15 12:25:27 - mmengine - INFO - Epoch(train)  [34][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:32:31  time: 0.401407  data_time: 0.167879  memory: 12704  grad_norm: 0.106394  loss: 0.282209  loss_kpt: 0.282209  acc_pose: 0.710689
09/15 12:25:31 - mmengine - INFO - Epoch(train)  [24][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:52:25  time: 0.781376  data_time: 0.465971  memory: 16273  loss: 0.399544  loss_kpt: 0.399544  acc_pose: 0.949268
09/15 12:25:46 - mmengine - INFO - Epoch(train)  [34][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:32:09  time: 0.388547  data_time: 0.154097  memory: 12704  grad_norm: 0.088887  loss: 0.271169  loss_kpt: 0.271169  acc_pose: 0.720996
09/15 12:26:06 - mmengine - INFO - Epoch(train)  [34][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:31:50  time: 0.394519  data_time: 0.156632  memory: 12704  grad_norm: 0.080943  loss: 0.270474  loss_kpt: 0.270474  acc_pose: 0.693438
09/15 12:26:10 - mmengine - INFO - Epoch(train)  [24][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:51:46  time: 0.787080  data_time: 0.467564  memory: 16273  loss: 0.396214  loss_kpt: 0.396214  acc_pose: 0.977774
09/15 12:26:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:26:42 - mmengine - INFO - Epoch(train)  [35][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:31:16  time: 0.404797  data_time: 0.170798  memory: 12704  grad_norm: 0.103800  loss: 0.272172  loss_kpt: 0.272172  acc_pose: 0.721367
09/15 12:26:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:27:02 - mmengine - INFO - Epoch(train)  [35][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:30:59  time: 0.403426  data_time: 0.166909  memory: 12704  grad_norm: 0.082887  loss: 0.272906  loss_kpt: 0.272906  acc_pose: 0.663038
09/15 12:27:05 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:27:22 - mmengine - INFO - Epoch(train)  [35][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:30:38  time: 0.390530  data_time: 0.155718  memory: 12704  grad_norm: 0.089150  loss: 0.274716  loss_kpt: 0.274716  acc_pose: 0.625551
09/15 12:27:26 - mmengine - INFO - Epoch(train)  [25][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:50:39  time: 0.811032  data_time: 0.492546  memory: 16273  loss: 0.394202  loss_kpt: 0.394202  acc_pose: 0.946474
09/15 12:27:41 - mmengine - INFO - Epoch(train)  [35][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:30:15  time: 0.387093  data_time: 0.153086  memory: 12704  grad_norm: 0.152124  loss: 0.276846  loss_kpt: 0.276846  acc_pose: 0.751731
09/15 12:28:01 - mmengine - INFO - Epoch(train)  [35][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:29:53  time: 0.387336  data_time: 0.153159  memory: 12704  grad_norm: 0.093099  loss: 0.275014  loss_kpt: 0.275014  acc_pose: 0.658326
09/15 12:28:05 - mmengine - INFO - Epoch(train)  [25][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:49:53  time: 0.774793  data_time: 0.455843  memory: 16273  loss: 0.398559  loss_kpt: 0.398559  acc_pose: 0.961051
09/15 12:28:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:28:37 - mmengine - INFO - Epoch(train)  [36][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:29:22  time: 0.403299  data_time: 0.169908  memory: 12704  grad_norm: 0.087368  loss: 0.273492  loss_kpt: 0.273492  acc_pose: 0.740738
09/15 12:28:40 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:28:57 - mmengine - INFO - Epoch(train)  [36][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:29:03  time: 0.396556  data_time: 0.162374  memory: 12704  grad_norm: 0.103046  loss: 0.273113  loss_kpt: 0.273113  acc_pose: 0.693953
09/15 12:29:17 - mmengine - INFO - Epoch(train)  [36][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:28:43  time: 0.393028  data_time: 0.158651  memory: 12704  grad_norm: 0.082263  loss: 0.271561  loss_kpt: 0.271561  acc_pose: 0.708931
09/15 12:29:21 - mmengine - INFO - Epoch(train)  [26][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:48:36  time: 0.807547  data_time: 0.492273  memory: 16273  loss: 0.394906  loss_kpt: 0.394906  acc_pose: 0.958047
09/15 12:29:36 - mmengine - INFO - Epoch(train)  [36][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:28:20  time: 0.384604  data_time: 0.151256  memory: 12704  grad_norm: 0.091814  loss: 0.273558  loss_kpt: 0.273558  acc_pose: 0.665088
09/15 12:29:55 - mmengine - INFO - Epoch(train)  [36][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:27:58  time: 0.389380  data_time: 0.152795  memory: 12704  grad_norm: 0.092082  loss: 0.275267  loss_kpt: 0.275267  acc_pose: 0.647562
09/15 12:30:00 - mmengine - INFO - Epoch(train)  [26][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:47:55  time: 0.783516  data_time: 0.465857  memory: 16273  loss: 0.395691  loss_kpt: 0.395691  acc_pose: 0.945904
09/15 12:30:11 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:30:32 - mmengine - INFO - Epoch(train)  [37][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:27:25  time: 0.412573  data_time: 0.178715  memory: 12704  grad_norm: 0.096816  loss: 0.268611  loss_kpt: 0.268611  acc_pose: 0.653248
09/15 12:30:35 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:30:51 - mmengine - INFO - Epoch(train)  [37][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:27:03  time: 0.386875  data_time: 0.153558  memory: 12704  grad_norm: 0.074496  loss: 0.269740  loss_kpt: 0.269740  acc_pose: 0.682815
09/15 12:31:11 - mmengine - INFO - Epoch(train)  [37][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:26:43  time: 0.394948  data_time: 0.160791  memory: 12704  grad_norm: 0.129443  loss: 0.274994  loss_kpt: 0.274994  acc_pose: 0.610937
09/15 12:31:15 - mmengine - INFO - Epoch(train)  [27][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:46:33  time: 0.789761  data_time: 0.474265  memory: 16273  loss: 0.400216  loss_kpt: 0.400216  acc_pose: 0.960663
09/15 12:31:30 - mmengine - INFO - Epoch(train)  [37][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:26:22  time: 0.390159  data_time: 0.156242  memory: 12704  grad_norm: 0.097404  loss: 0.273320  loss_kpt: 0.273320  acc_pose: 0.721275
09/15 12:31:50 - mmengine - INFO - Epoch(train)  [37][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:26:01  time: 0.389768  data_time: 0.155655  memory: 12704  grad_norm: 0.090873  loss: 0.273636  loss_kpt: 0.273636  acc_pose: 0.757474
09/15 12:31:54 - mmengine - INFO - Epoch(train)  [27][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:45:57  time: 0.794142  data_time: 0.477893  memory: 16273  loss: 0.395171  loss_kpt: 0.395171  acc_pose: 0.941444
09/15 12:32:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:32:26 - mmengine - INFO - Epoch(train)  [38][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:25:26  time: 0.401091  data_time: 0.164436  memory: 12704  grad_norm: 0.101850  loss: 0.271099  loss_kpt: 0.271099  acc_pose: 0.708432
09/15 12:32:30 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:32:45 - mmengine - INFO - Epoch(train)  [38][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:25:05  time: 0.391502  data_time: 0.157250  memory: 12704  grad_norm: 0.106370  loss: 0.275003  loss_kpt: 0.275003  acc_pose: 0.698141
09/15 12:33:05 - mmengine - INFO - Epoch(train)  [38][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:24:47  time: 0.398815  data_time: 0.164548  memory: 12704  grad_norm: 0.092251  loss: 0.268248  loss_kpt: 0.268248  acc_pose: 0.726948
09/15 12:33:10 - mmengine - INFO - Epoch(train)  [28][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:44:46  time: 0.804757  data_time: 0.488634  memory: 16273  loss: 0.393158  loss_kpt: 0.393158  acc_pose: 0.950927
09/15 12:33:17 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:33:24 - mmengine - INFO - Epoch(train)  [38][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:24:22  time: 0.378303  data_time: 0.141507  memory: 12704  grad_norm: 0.074656  loss: 0.268158  loss_kpt: 0.268158  acc_pose: 0.689814
09/15 12:33:38 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:33:45 - mmengine - INFO - Epoch(train)  [38][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:24:06  time: 0.406478  data_time: 0.172400  memory: 12704  grad_norm: 0.102915  loss: 0.272216  loss_kpt: 0.272216  acc_pose: 0.671632
09/15 12:33:50 - mmengine - INFO - Epoch(train)  [28][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:44:05  time: 0.781248  data_time: 0.462453  memory: 16273  loss: 0.394056  loss_kpt: 0.394056  acc_pose: 0.956612
09/15 12:34:00 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:34:21 - mmengine - INFO - Epoch(train)  [39][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:23:32  time: 0.409662  data_time: 0.175203  memory: 12704  grad_norm: 0.116871  loss: 0.267654  loss_kpt: 0.267654  acc_pose: 0.759999
09/15 12:34:25 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:34:40 - mmengine - INFO - Epoch(train)  [39][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:23:11  time: 0.392284  data_time: 0.158764  memory: 12704  grad_norm: 0.086534  loss: 0.265882  loss_kpt: 0.265882  acc_pose: 0.716375
09/15 12:35:01 - mmengine - INFO - Epoch(train)  [39][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:22:56  time: 0.407338  data_time: 0.172496  memory: 12704  grad_norm: 0.101879  loss: 0.268945  loss_kpt: 0.268945  acc_pose: 0.733421
09/15 12:35:05 - mmengine - INFO - Epoch(train)  [29][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:42:51  time: 0.800449  data_time: 0.482639  memory: 16273  loss: 0.392033  loss_kpt: 0.392033  acc_pose: 0.943569
09/15 12:35:21 - mmengine - INFO - Epoch(train)  [39][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:22:36  time: 0.395136  data_time: 0.160328  memory: 12704  grad_norm: 0.091277  loss: 0.267676  loss_kpt: 0.267676  acc_pose: 0.782013
09/15 12:35:40 - mmengine - INFO - Epoch(train)  [39][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:22:14  time: 0.385282  data_time: 0.151713  memory: 12704  grad_norm: 0.092108  loss: 0.272428  loss_kpt: 0.272428  acc_pose: 0.729522
09/15 12:35:45 - mmengine - INFO - Epoch(train)  [29][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:42:15  time: 0.795085  data_time: 0.478646  memory: 16273  loss: 0.393886  loss_kpt: 0.393886  acc_pose: 0.955580
09/15 12:35:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:36:15 - mmengine - INFO - Epoch(train)  [40][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:21:34  time: 0.397354  data_time: 0.164094  memory: 12704  grad_norm: 0.096757  loss: 0.271553  loss_kpt: 0.271553  acc_pose: 0.669659
09/15 12:36:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:36:35 - mmengine - INFO - Epoch(train)  [40][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:21:16  time: 0.399692  data_time: 0.166830  memory: 12704  grad_norm: 0.103998  loss: 0.271228  loss_kpt: 0.271228  acc_pose: 0.737206
09/15 12:36:55 - mmengine - INFO - Epoch(train)  [40][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:20:57  time: 0.395750  data_time: 0.162149  memory: 12704  grad_norm: 0.103726  loss: 0.266763  loss_kpt: 0.266763  acc_pose: 0.703684
09/15 12:37:00 - mmengine - INFO - Epoch(train)  [30][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:40:51  time: 0.781794  data_time: 0.465758  memory: 16273  loss: 0.393466  loss_kpt: 0.393466  acc_pose: 0.935442
09/15 12:37:14 - mmengine - INFO - Epoch(train)  [40][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:20:36  time: 0.389322  data_time: 0.154984  memory: 12704  grad_norm: 0.090371  loss: 0.273492  loss_kpt: 0.273492  acc_pose: 0.663329
09/15 12:37:35 - mmengine - INFO - Epoch(train)  [40][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:20:20  time: 0.406813  data_time: 0.172737  memory: 12704  grad_norm: 0.104579  loss: 0.270904  loss_kpt: 0.270904  acc_pose: 0.718228
09/15 12:37:40 - mmengine - INFO - Epoch(train)  [30][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:40:16  time: 0.797254  data_time: 0.480788  memory: 16273  loss: 0.392824  loss_kpt: 0.392824  acc_pose: 0.952324
09/15 12:37:50 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:37:50 - mmengine - INFO - Saving checkpoint at 40 epochs
09/15 12:38:12 - mmengine - INFO - Epoch(train)  [41][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:19:43  time: 0.405840  data_time: 0.171722  memory: 12704  grad_norm: 0.112101  loss: 0.266361  loss_kpt: 0.266361  acc_pose: 0.650619
09/15 12:38:15 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:38:15 - mmengine - INFO - Saving checkpoint at 30 epochs
09/15 12:38:32 - mmengine - INFO - Epoch(train)  [41][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:19:22  time: 0.389189  data_time: 0.155145  memory: 12704  grad_norm: 0.081078  loss: 0.267473  loss_kpt: 0.267473  acc_pose: 0.695510
09/15 12:38:52 - mmengine - INFO - Epoch(train)  [41][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:19:04  time: 0.399368  data_time: 0.165019  memory: 12704  grad_norm: 0.099887  loss: 0.266115  loss_kpt: 0.266115  acc_pose: 0.715096
09/15 12:38:56 - mmengine - INFO - Epoch(train)  [31][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:39:00  time: 0.803085  data_time: 0.487357  memory: 16273  loss: 0.386507  loss_kpt: 0.386507  acc_pose: 0.968435
09/15 12:39:12 - mmengine - INFO - Epoch(train)  [41][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:18:46  time: 0.402031  data_time: 0.167257  memory: 12704  grad_norm: 0.102086  loss: 0.267668  loss_kpt: 0.267668  acc_pose: 0.603082
09/15 12:39:31 - mmengine - INFO - Epoch(train)  [41][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:18:23  time: 0.383801  data_time: 0.146180  memory: 12704  grad_norm: 0.109731  loss: 0.271199  loss_kpt: 0.271199  acc_pose: 0.770942
09/15 12:39:36 - mmengine - INFO - Epoch(train)  [31][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:38:23  time: 0.793991  data_time: 0.477341  memory: 16273  loss: 0.391599  loss_kpt: 0.391599  acc_pose: 0.951501
09/15 12:39:47 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:40:07 - mmengine - INFO - Epoch(train)  [42][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:17:49  time: 0.408913  data_time: 0.176250  memory: 12704  grad_norm: 0.097065  loss: 0.262851  loss_kpt: 0.262851  acc_pose: 0.771315
09/15 12:40:11 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:40:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:40:26 - mmengine - INFO - Epoch(train)  [42][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:17:27  time: 0.387303  data_time: 0.154255  memory: 12704  grad_norm: 0.115692  loss: 0.269025  loss_kpt: 0.269025  acc_pose: 0.712032
09/15 12:40:46 - mmengine - INFO - Epoch(train)  [42][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:17:05  time: 0.385228  data_time: 0.150022  memory: 12704  grad_norm: 0.097026  loss: 0.265436  loss_kpt: 0.265436  acc_pose: 0.680828
09/15 12:40:51 - mmengine - INFO - Epoch(train)  [32][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:37:02  time: 0.787693  data_time: 0.471864  memory: 16273  loss: 0.387682  loss_kpt: 0.387682  acc_pose: 0.948858
09/15 12:41:05 - mmengine - INFO - Epoch(train)  [42][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:16:42  time: 0.383886  data_time: 0.149495  memory: 12704  grad_norm: 0.097006  loss: 0.269214  loss_kpt: 0.269214  acc_pose: 0.756167
09/15 12:41:25 - mmengine - INFO - Epoch(train)  [42][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:16:23  time: 0.394863  data_time: 0.161724  memory: 12704  grad_norm: 0.109618  loss: 0.269337  loss_kpt: 0.269337  acc_pose: 0.798553
09/15 12:41:31 - mmengine - INFO - Epoch(train)  [32][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:36:27  time: 0.800764  data_time: 0.485886  memory: 16273  loss: 0.388648  loss_kpt: 0.388648  acc_pose: 0.963352
09/15 12:41:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:42:01 - mmengine - INFO - Epoch(train)  [43][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:15:48  time: 0.400220  data_time: 0.166544  memory: 12704  grad_norm: 0.076965  loss: 0.266963  loss_kpt: 0.266963  acc_pose: 0.773623
09/15 12:42:07 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:42:21 - mmengine - INFO - Epoch(train)  [43][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:15:28  time: 0.395364  data_time: 0.160417  memory: 12704  grad_norm: 0.111469  loss: 0.266218  loss_kpt: 0.266218  acc_pose: 0.721540
09/15 12:42:40 - mmengine - INFO - Epoch(train)  [43][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:15:09  time: 0.395390  data_time: 0.161339  memory: 12704  grad_norm: 0.099957  loss: 0.265500  loss_kpt: 0.265500  acc_pose: 0.761952
09/15 12:42:48 - mmengine - INFO - Epoch(train)  [33][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:35:20  time: 0.813651  data_time: 0.496884  memory: 16273  loss: 0.386238  loss_kpt: 0.386238  acc_pose: 0.962713
09/15 12:43:00 - mmengine - INFO - Epoch(train)  [43][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:14:49  time: 0.395146  data_time: 0.160983  memory: 12704  grad_norm: 0.097383  loss: 0.265281  loss_kpt: 0.265281  acc_pose: 0.706292
09/15 12:43:20 - mmengine - INFO - Epoch(train)  [43][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:14:30  time: 0.394895  data_time: 0.161188  memory: 12704  grad_norm: 0.089719  loss: 0.263636  loss_kpt: 0.263636  acc_pose: 0.752559
09/15 12:43:26 - mmengine - INFO - Epoch(train)  [33][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:34:37  time: 0.777664  data_time: 0.459303  memory: 16273  loss: 0.391274  loss_kpt: 0.391274  acc_pose: 0.957356
09/15 12:43:36 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:43:56 - mmengine - INFO - Epoch(train)  [44][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:13:56  time: 0.405823  data_time: 0.171410  memory: 12704  grad_norm: 0.095766  loss: 0.262627  loss_kpt: 0.262627  acc_pose: 0.709855
09/15 12:44:02 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:44:16 - mmengine - INFO - Epoch(train)  [44][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:13:36  time: 0.392072  data_time: 0.158112  memory: 12704  grad_norm: 0.085825  loss: 0.262558  loss_kpt: 0.262558  acc_pose: 0.767513
09/15 12:44:35 - mmengine - INFO - Epoch(train)  [44][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:13:12  time: 0.381570  data_time: 0.146922  memory: 12704  grad_norm: 0.112334  loss: 0.267810  loss_kpt: 0.267810  acc_pose: 0.720192
09/15 12:44:42 - mmengine - INFO - Epoch(train)  [34][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:33:20  time: 0.802277  data_time: 0.485769  memory: 16273  loss: 0.389780  loss_kpt: 0.389780  acc_pose: 0.947276
09/15 12:44:55 - mmengine - INFO - Epoch(train)  [44][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:12:55  time: 0.404121  data_time: 0.170445  memory: 12704  grad_norm: 0.102555  loss: 0.269870  loss_kpt: 0.269870  acc_pose: 0.725177
09/15 12:45:16 - mmengine - INFO - Epoch(train)  [44][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:12:41  time: 0.416564  data_time: 0.182851  memory: 12704  grad_norm: 0.101687  loss: 0.264595  loss_kpt: 0.264595  acc_pose: 0.720438
09/15 12:45:20 - mmengine - INFO - Epoch(train)  [34][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:32:35  time: 0.772603  data_time: 0.457768  memory: 16273  loss: 0.389331  loss_kpt: 0.389331  acc_pose: 0.955119
09/15 12:45:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:45:52 - mmengine - INFO - Epoch(train)  [45][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:12:07  time: 0.407100  data_time: 0.172668  memory: 12704  grad_norm: 0.093778  loss: 0.267909  loss_kpt: 0.267909  acc_pose: 0.710082
09/15 12:45:56 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:46:11 - mmengine - INFO - Epoch(train)  [45][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:11:46  time: 0.389190  data_time: 0.155420  memory: 12704  grad_norm: 0.105435  loss: 0.264397  loss_kpt: 0.264397  acc_pose: 0.696455
09/15 12:46:25 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:46:31 - mmengine - INFO - Epoch(train)  [45][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:11:25  time: 0.390708  data_time: 0.156113  memory: 12704  grad_norm: 0.087008  loss: 0.262473  loss_kpt: 0.262473  acc_pose: 0.754663
09/15 12:46:36 - mmengine - INFO - Epoch(train)  [35][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:31:18  time: 0.796397  data_time: 0.480647  memory: 16273  loss: 0.386967  loss_kpt: 0.386967  acc_pose: 0.940624
09/15 12:46:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:46:51 - mmengine - INFO - Epoch(train)  [45][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:11:05  time: 0.393575  data_time: 0.156334  memory: 12704  grad_norm: 0.096119  loss: 0.267337  loss_kpt: 0.267337  acc_pose: 0.719054
09/15 12:47:11 - mmengine - INFO - Epoch(train)  [45][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:10:46  time: 0.396401  data_time: 0.161743  memory: 12704  grad_norm: 0.080848  loss: 0.261935  loss_kpt: 0.261935  acc_pose: 0.696146
09/15 12:47:15 - mmengine - INFO - Epoch(train)  [35][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:30:38  time: 0.785926  data_time: 0.470303  memory: 16273  loss: 0.390256  loss_kpt: 0.390256  acc_pose: 0.970344
09/15 12:47:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:47:47 - mmengine - INFO - Epoch(train)  [46][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:10:12  time: 0.403843  data_time: 0.170276  memory: 12704  grad_norm: 0.087069  loss: 0.259868  loss_kpt: 0.259868  acc_pose: 0.713186
09/15 12:47:51 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:48:07 - mmengine - INFO - Epoch(train)  [46][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:09:52  time: 0.393910  data_time: 0.160380  memory: 12704  grad_norm: 0.093787  loss: 0.262940  loss_kpt: 0.262940  acc_pose: 0.645323
09/15 12:48:26 - mmengine - INFO - Epoch(train)  [46][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:09:31  time: 0.390009  data_time: 0.155368  memory: 12704  grad_norm: 0.104704  loss: 0.262744  loss_kpt: 0.262744  acc_pose: 0.760904
09/15 12:48:31 - mmengine - INFO - Epoch(train)  [36][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:29:29  time: 0.805976  data_time: 0.489715  memory: 16273  loss: 0.393846  loss_kpt: 0.393846  acc_pose: 0.962727
09/15 12:48:46 - mmengine - INFO - Epoch(train)  [46][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:09:13  time: 0.402098  data_time: 0.167281  memory: 12704  grad_norm: 0.091822  loss: 0.264783  loss_kpt: 0.264783  acc_pose: 0.780055
09/15 12:49:06 - mmengine - INFO - Epoch(train)  [46][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:08:53  time: 0.393771  data_time: 0.157292  memory: 12704  grad_norm: 0.096996  loss: 0.261021  loss_kpt: 0.261021  acc_pose: 0.671811
09/15 12:49:10 - mmengine - INFO - Epoch(train)  [36][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:28:46  time: 0.776964  data_time: 0.458476  memory: 16273  loss: 0.392926  loss_kpt: 0.392926  acc_pose: 0.948264
09/15 12:49:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:49:43 - mmengine - INFO - Epoch(train)  [47][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:08:22  time: 0.414791  data_time: 0.180527  memory: 12704  grad_norm: 0.132792  loss: 0.258987  loss_kpt: 0.258987  acc_pose: 0.773155
09/15 12:49:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:50:02 - mmengine - INFO - Epoch(train)  [47][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:08:01  time: 0.388630  data_time: 0.154668  memory: 12704  grad_norm: 0.094839  loss: 0.262264  loss_kpt: 0.262264  acc_pose: 0.694598
09/15 12:50:22 - mmengine - INFO - Epoch(train)  [47][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:07:39  time: 0.385537  data_time: 0.152124  memory: 12704  grad_norm: 0.108861  loss: 0.266220  loss_kpt: 0.266220  acc_pose: 0.697160
09/15 12:50:26 - mmengine - INFO - Epoch(train)  [37][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:27:34  time: 0.802349  data_time: 0.486118  memory: 16273  loss: 0.383533  loss_kpt: 0.383533  acc_pose: 0.963602
09/15 12:50:41 - mmengine - INFO - Epoch(train)  [47][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:07:19  time: 0.392656  data_time: 0.158602  memory: 12704  grad_norm: 0.091165  loss: 0.259318  loss_kpt: 0.259318  acc_pose: 0.827245
09/15 12:51:01 - mmengine - INFO - Epoch(train)  [47][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:07:02  time: 0.404440  data_time: 0.170045  memory: 12704  grad_norm: 0.092854  loss: 0.259494  loss_kpt: 0.259494  acc_pose: 0.727898
09/15 12:51:05 - mmengine - INFO - Epoch(train)  [37][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:26:50  time: 0.773368  data_time: 0.454562  memory: 16273  loss: 0.391832  loss_kpt: 0.391832  acc_pose: 0.951819
09/15 12:51:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:51:39 - mmengine - INFO - Epoch(train)  [48][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:06:32  time: 0.419055  data_time: 0.184594  memory: 12704  grad_norm: 0.111608  loss: 0.254151  loss_kpt: 0.254151  acc_pose: 0.695204
09/15 12:51:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:51:59 - mmengine - INFO - Epoch(train)  [48][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:06:13  time: 0.400161  data_time: 0.166427  memory: 12704  grad_norm: 0.100831  loss: 0.264623  loss_kpt: 0.264623  acc_pose: 0.754801
09/15 12:52:18 - mmengine - INFO - Epoch(train)  [48][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:05:50  time: 0.380154  data_time: 0.146600  memory: 12704  grad_norm: 0.105420  loss: 0.263395  loss_kpt: 0.263395  acc_pose: 0.760128
09/15 12:52:21 - mmengine - INFO - Epoch(train)  [38][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:25:34  time: 0.796835  data_time: 0.480847  memory: 16273  loss: 0.388518  loss_kpt: 0.388518  acc_pose: 0.968420
09/15 12:52:37 - mmengine - INFO - Epoch(train)  [48][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:05:29  time: 0.389647  data_time: 0.155730  memory: 12704  grad_norm: 0.090402  loss: 0.263352  loss_kpt: 0.263352  acc_pose: 0.730866
09/15 12:52:57 - mmengine - INFO - Epoch(train)  [48][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:05:08  time: 0.389709  data_time: 0.153159  memory: 12704  grad_norm: 0.086881  loss: 0.264781  loss_kpt: 0.264781  acc_pose: 0.747215
09/15 12:52:59 - mmengine - INFO - Epoch(train)  [38][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:24:51  time: 0.772961  data_time: 0.456739  memory: 16273  loss: 0.382301  loss_kpt: 0.382301  acc_pose: 0.971261
09/15 12:53:13 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:53:26 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:53:33 - mmengine - INFO - Epoch(train)  [49][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:04:33  time: 0.402580  data_time: 0.169854  memory: 12704  grad_norm: 0.097151  loss: 0.262175  loss_kpt: 0.262175  acc_pose: 0.733043
09/15 12:53:35 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:53:52 - mmengine - INFO - Epoch(train)  [49][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:04:13  time: 0.393733  data_time: 0.158992  memory: 12704  grad_norm: 0.078840  loss: 0.261082  loss_kpt: 0.261082  acc_pose: 0.798978
09/15 12:54:12 - mmengine - INFO - Epoch(train)  [49][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:03:55  time: 0.399652  data_time: 0.166464  memory: 12704  grad_norm: 0.088941  loss: 0.261321  loss_kpt: 0.261321  acc_pose: 0.765114
09/15 12:54:15 - mmengine - INFO - Epoch(train)  [39][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:23:36  time: 0.794926  data_time: 0.479387  memory: 16273  loss: 0.383838  loss_kpt: 0.383838  acc_pose: 0.969623
09/15 12:54:32 - mmengine - INFO - Epoch(train)  [49][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:03:33  time: 0.383472  data_time: 0.149647  memory: 12704  grad_norm: 0.091950  loss: 0.263144  loss_kpt: 0.263144  acc_pose: 0.730854
09/15 12:54:51 - mmengine - INFO - Epoch(train)  [49][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:03:12  time: 0.392918  data_time: 0.155936  memory: 12704  grad_norm: 0.099301  loss: 0.258482  loss_kpt: 0.258482  acc_pose: 0.800696
09/15 12:54:55 - mmengine - INFO - Epoch(train)  [39][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:22:58  time: 0.791305  data_time: 0.475849  memory: 16273  loss: 0.386589  loss_kpt: 0.386589  acc_pose: 0.962587
09/15 12:55:07 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:55:28 - mmengine - INFO - Epoch(train)  [50][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:02:41  time: 0.414268  data_time: 0.180909  memory: 12704  grad_norm: 0.102383  loss: 0.259556  loss_kpt: 0.259556  acc_pose: 0.623294
09/15 12:55:29 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:55:47 - mmengine - INFO - Epoch(train)  [50][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:02:19  time: 0.384305  data_time: 0.149982  memory: 12704  grad_norm: 0.093463  loss: 0.261853  loss_kpt: 0.261853  acc_pose: 0.751760
09/15 12:56:07 - mmengine - INFO - Epoch(train)  [50][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:01:59  time: 0.394231  data_time: 0.160083  memory: 12704  grad_norm: 0.105105  loss: 0.262570  loss_kpt: 0.262570  acc_pose: 0.662093
09/15 12:56:10 - mmengine - INFO - Epoch(train)  [40][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:21:43  time: 0.815935  data_time: 0.500991  memory: 16273  loss: 0.388835  loss_kpt: 0.388835  acc_pose: 0.975281
09/15 12:56:27 - mmengine - INFO - Epoch(train)  [50][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:01:39  time: 0.395931  data_time: 0.161471  memory: 12704  grad_norm: 0.093028  loss: 0.260344  loss_kpt: 0.260344  acc_pose: 0.709113
09/15 12:56:46 - mmengine - INFO - Epoch(train)  [50][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:01:20  time: 0.394931  data_time: 0.160256  memory: 12704  grad_norm: 0.120712  loss: 0.261393  loss_kpt: 0.261393  acc_pose: 0.820318
09/15 12:56:49 - mmengine - INFO - Epoch(train)  [40][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:21:02  time: 0.779648  data_time: 0.464397  memory: 16273  loss: 0.384050  loss_kpt: 0.384050  acc_pose: 0.964368
09/15 12:57:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:57:02 - mmengine - INFO - Saving checkpoint at 50 epochs
09/15 12:57:15 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.625
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.914
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.683
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.625
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.722
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.949
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.722
09/15 12:57:15 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 12:57:15 - mmengine - INFO - Evaluating AUC...
09/15 12:57:15 - mmengine - INFO - Evaluating NME...
09/15 12:57:15 - mmengine - INFO - Epoch(val) [50][38/38]    coco/AP: 0.625218  coco/AP .5: 0.913641  coco/AP .75: 0.683351  coco/AP (L): -1.000000  coco/AR: 0.625218  coco/AR .5: 0.721801  coco/AR .75: 0.949495  coco/AR (L): 0.797980  PCK: 0.867032  AUC: 0.494455  NME: 0.463858  data_time: 0.156440  time: 0.272182
09/15 12:57:16 - mmengine - INFO - The best checkpoint with 0.6252 coco/AP at 50 epoch is saved to best_coco_AP_epoch_50.pth.
09/15 12:57:25 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:57:25 - mmengine - INFO - Saving checkpoint at 40 epochs
09/15 12:57:39 - mmengine - INFO - Epoch(train)  [51][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:00:46  time: 0.412275  data_time: 0.177638  memory: 12704  grad_norm: 0.097937  loss: 0.263635  loss_kpt: 0.263635  acc_pose: 0.753084
09/15 12:57:59 - mmengine - INFO - Epoch(train)  [51][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:00:27  time: 0.397861  data_time: 0.162087  memory: 12704  grad_norm: 0.098308  loss: 0.261715  loss_kpt: 0.261715  acc_pose: 0.821617
09/15 12:58:07 - mmengine - INFO - Epoch(train)  [41][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:19:50  time: 0.813329  data_time: 0.497770  memory: 16273  loss: 0.386196  loss_kpt: 0.386196  acc_pose: 0.958685
09/15 12:58:18 - mmengine - INFO - Epoch(train)  [51][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 7:00:07  time: 0.392775  data_time: 0.157828  memory: 12704  grad_norm: 0.112332  loss: 0.259510  loss_kpt: 0.259510  acc_pose: 0.850942
09/15 12:58:38 - mmengine - INFO - Epoch(train)  [51][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:59:46  time: 0.392349  data_time: 0.158271  memory: 12704  grad_norm: 0.100353  loss: 0.259414  loss_kpt: 0.259414  acc_pose: 0.752960
09/15 12:58:46 - mmengine - INFO - Epoch(train)  [41][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:19:12  time: 0.790634  data_time: 0.474461  memory: 16273  loss: 0.386045  loss_kpt: 0.386045  acc_pose: 0.951198
09/15 12:58:58 - mmengine - INFO - Epoch(train)  [51][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:59:27  time: 0.394674  data_time: 0.159759  memory: 12704  grad_norm: 0.098924  loss: 0.259785  loss_kpt: 0.259785  acc_pose: 0.794271
09/15 12:59:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 12:59:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:59:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 12:59:34 - mmengine - INFO - Epoch(train)  [52][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:58:52  time: 0.402449  data_time: 0.169037  memory: 12704  grad_norm: 0.116559  loss: 0.257990  loss_kpt: 0.257990  acc_pose: 0.747261
09/15 12:59:54 - mmengine - INFO - Epoch(train)  [52][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:58:32  time: 0.392198  data_time: 0.157103  memory: 12704  grad_norm: 0.094484  loss: 0.261970  loss_kpt: 0.261970  acc_pose: 0.782527
09/15 13:00:02 - mmengine - INFO - Epoch(train)  [42][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:17:55  time: 0.803829  data_time: 0.487966  memory: 16273  loss: 0.383450  loss_kpt: 0.383450  acc_pose: 0.960867
09/15 13:00:13 - mmengine - INFO - Epoch(train)  [52][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:58:13  time: 0.396036  data_time: 0.162552  memory: 12704  grad_norm: 0.101432  loss: 0.259721  loss_kpt: 0.259721  acc_pose: 0.787113
09/15 13:00:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:00:33 - mmengine - INFO - Epoch(train)  [52][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:57:53  time: 0.395485  data_time: 0.161866  memory: 12704  grad_norm: 0.101301  loss: 0.258012  loss_kpt: 0.258012  acc_pose: 0.787841
09/15 13:00:40 - mmengine - INFO - Epoch(train)  [42][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:17:12  time: 0.770909  data_time: 0.456108  memory: 16273  loss: 0.387475  loss_kpt: 0.387475  acc_pose: 0.969798
09/15 13:00:52 - mmengine - INFO - Epoch(train)  [52][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:57:31  time: 0.383635  data_time: 0.147063  memory: 12704  grad_norm: 0.104380  loss: 0.263330  loss_kpt: 0.263330  acc_pose: 0.746090
09/15 13:01:08 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:01:16 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:01:29 - mmengine - INFO - Epoch(train)  [53][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:56:56  time: 0.401982  data_time: 0.165119  memory: 12704  grad_norm: 0.086949  loss: 0.259918  loss_kpt: 0.259918  acc_pose: 0.748347
09/15 13:01:49 - mmengine - INFO - Epoch(train)  [53][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:56:37  time: 0.399759  data_time: 0.165018  memory: 12704  grad_norm: 0.107040  loss: 0.260952  loss_kpt: 0.260952  acc_pose: 0.724810
09/15 13:01:56 - mmengine - INFO - Epoch(train)  [43][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:15:59  time: 0.803656  data_time: 0.485140  memory: 16273  loss: 0.386397  loss_kpt: 0.386397  acc_pose: 0.962123
09/15 13:02:09 - mmengine - INFO - Epoch(train)  [53][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:56:19  time: 0.402500  data_time: 0.167543  memory: 12704  grad_norm: 0.105241  loss: 0.258440  loss_kpt: 0.258440  acc_pose: 0.723487
09/15 13:02:29 - mmengine - INFO - Epoch(train)  [53][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:56:00  time: 0.398317  data_time: 0.163682  memory: 12704  grad_norm: 0.108984  loss: 0.257468  loss_kpt: 0.257468  acc_pose: 0.746440
09/15 13:02:35 - mmengine - INFO - Epoch(train)  [43][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:15:19  time: 0.783516  data_time: 0.468671  memory: 16273  loss: 0.386620  loss_kpt: 0.386620  acc_pose: 0.955681
09/15 13:02:48 - mmengine - INFO - Epoch(train)  [53][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:55:38  time: 0.381513  data_time: 0.147132  memory: 12704  grad_norm: 0.098971  loss: 0.256890  loss_kpt: 0.256890  acc_pose: 0.767032
09/15 13:03:03 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:03:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:03:23 - mmengine - INFO - Epoch(train)  [54][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:55:02  time: 0.403270  data_time: 0.168522  memory: 12704  grad_norm: 0.110338  loss: 0.257201  loss_kpt: 0.257201  acc_pose: 0.778620
09/15 13:03:44 - mmengine - INFO - Epoch(train)  [54][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:54:44  time: 0.403149  data_time: 0.168779  memory: 12704  grad_norm: 0.116627  loss: 0.256429  loss_kpt: 0.256429  acc_pose: 0.786073
09/15 13:03:52 - mmengine - INFO - Epoch(train)  [44][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:14:09  time: 0.801625  data_time: 0.485487  memory: 16273  loss: 0.378718  loss_kpt: 0.378718  acc_pose: 0.981305
09/15 13:04:03 - mmengine - INFO - Epoch(train)  [54][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:54:22  time: 0.387693  data_time: 0.151335  memory: 12704  grad_norm: 0.089814  loss: 0.259517  loss_kpt: 0.259517  acc_pose: 0.735580
09/15 13:04:22 - mmengine - INFO - Epoch(train)  [54][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:54:01  time: 0.386103  data_time: 0.151834  memory: 12704  grad_norm: 0.104655  loss: 0.257440  loss_kpt: 0.257440  acc_pose: 0.814862
09/15 13:04:31 - mmengine - INFO - Epoch(train)  [44][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:13:27  time: 0.779579  data_time: 0.465133  memory: 16273  loss: 0.388951  loss_kpt: 0.388951  acc_pose: 0.948507
09/15 13:04:42 - mmengine - INFO - Epoch(train)  [54][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:53:40  time: 0.390245  data_time: 0.156166  memory: 12704  grad_norm: 0.112651  loss: 0.259886  loss_kpt: 0.259886  acc_pose: 0.651382
09/15 13:04:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:05:07 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:05:18 - mmengine - INFO - Epoch(train)  [55][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:53:06  time: 0.406756  data_time: 0.169844  memory: 12704  grad_norm: 0.104530  loss: 0.256925  loss_kpt: 0.256925  acc_pose: 0.732500
09/15 13:05:38 - mmengine - INFO - Epoch(train)  [55][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:52:46  time: 0.390582  data_time: 0.156128  memory: 12704  grad_norm: 0.118901  loss: 0.259963  loss_kpt: 0.259963  acc_pose: 0.782136
09/15 13:05:46 - mmengine - INFO - Epoch(train)  [45][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:12:11  time: 0.797495  data_time: 0.482898  memory: 16273  loss: 0.387122  loss_kpt: 0.387122  acc_pose: 0.953380
09/15 13:05:57 - mmengine - INFO - Epoch(train)  [55][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:52:24  time: 0.387623  data_time: 0.154241  memory: 12704  grad_norm: 0.093280  loss: 0.260181  loss_kpt: 0.260181  acc_pose: 0.751725
09/15 13:06:17 - mmengine - INFO - Epoch(train)  [55][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:52:04  time: 0.390322  data_time: 0.156366  memory: 12704  grad_norm: 0.084533  loss: 0.258264  loss_kpt: 0.258264  acc_pose: 0.753860
09/15 13:06:26 - mmengine - INFO - Epoch(train)  [45][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:11:32  time: 0.787801  data_time: 0.472496  memory: 16273  loss: 0.381988  loss_kpt: 0.381988  acc_pose: 0.968750
09/15 13:06:37 - mmengine - INFO - Epoch(train)  [55][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:51:46  time: 0.405842  data_time: 0.171914  memory: 12704  grad_norm: 0.096191  loss: 0.258569  loss_kpt: 0.258569  acc_pose: 0.734975
09/15 13:06:51 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:06:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:07:02 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:07:12 - mmengine - INFO - Epoch(train)  [56][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:51:09  time: 0.400573  data_time: 0.167129  memory: 12704  grad_norm: 0.107783  loss: 0.257456  loss_kpt: 0.257456  acc_pose: 0.831990
09/15 13:07:32 - mmengine - INFO - Epoch(train)  [56][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:50:49  time: 0.394424  data_time: 0.156859  memory: 12704  grad_norm: 0.094100  loss: 0.255109  loss_kpt: 0.255109  acc_pose: 0.723623
09/15 13:07:41 - mmengine - INFO - Epoch(train)  [46][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:10:14  time: 0.789145  data_time: 0.473641  memory: 16273  loss: 0.384439  loss_kpt: 0.384439  acc_pose: 0.964436
09/15 13:07:52 - mmengine - INFO - Epoch(train)  [56][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:50:31  time: 0.406739  data_time: 0.172147  memory: 12704  grad_norm: 0.106474  loss: 0.260282  loss_kpt: 0.260282  acc_pose: 0.772751
09/15 13:08:12 - mmengine - INFO - Epoch(train)  [56][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:50:10  time: 0.387203  data_time: 0.153825  memory: 12704  grad_norm: 0.107886  loss: 0.258744  loss_kpt: 0.258744  acc_pose: 0.758507
09/15 13:08:20 - mmengine - INFO - Epoch(train)  [46][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:09:33  time: 0.778684  data_time: 0.460018  memory: 16273  loss: 0.380163  loss_kpt: 0.380163  acc_pose: 0.969987
09/15 13:08:32 - mmengine - INFO - Epoch(train)  [56][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:49:53  time: 0.408161  data_time: 0.173387  memory: 12704  grad_norm: 0.095076  loss: 0.255895  loss_kpt: 0.255895  acc_pose: 0.740657
09/15 13:08:48 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:08:56 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:09:08 - mmengine - INFO - Epoch(train)  [57][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:49:18  time: 0.408046  data_time: 0.174121  memory: 12704  grad_norm: 0.104353  loss: 0.255440  loss_kpt: 0.255440  acc_pose: 0.836741
09/15 13:09:28 - mmengine - INFO - Epoch(train)  [57][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:48:56  time: 0.385106  data_time: 0.151087  memory: 12704  grad_norm: 0.087972  loss: 0.256601  loss_kpt: 0.256601  acc_pose: 0.740594
09/15 13:09:36 - mmengine - INFO - Epoch(train)  [47][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:08:20  time: 0.801591  data_time: 0.482547  memory: 16273  loss: 0.384349  loss_kpt: 0.384349  acc_pose: 0.952951
09/15 13:09:48 - mmengine - INFO - Epoch(train)  [57][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:48:38  time: 0.401649  data_time: 0.167306  memory: 12704  grad_norm: 0.100964  loss: 0.257176  loss_kpt: 0.257176  acc_pose: 0.685923
09/15 13:10:07 - mmengine - INFO - Epoch(train)  [57][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:48:18  time: 0.393536  data_time: 0.159303  memory: 12704  grad_norm: 0.095198  loss: 0.254157  loss_kpt: 0.254157  acc_pose: 0.778434
09/15 13:10:15 - mmengine - INFO - Epoch(train)  [47][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:07:38  time: 0.779186  data_time: 0.463910  memory: 16273  loss: 0.383232  loss_kpt: 0.383232  acc_pose: 0.942330
09/15 13:10:27 - mmengine - INFO - Epoch(train)  [57][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:47:58  time: 0.393343  data_time: 0.156377  memory: 12704  grad_norm: 0.111667  loss: 0.256978  loss_kpt: 0.256978  acc_pose: 0.827963
09/15 13:10:43 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:10:51 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:11:03 - mmengine - INFO - Epoch(train)  [58][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:47:21  time: 0.399758  data_time: 0.166373  memory: 12704  grad_norm: 0.102085  loss: 0.257818  loss_kpt: 0.257818  acc_pose: 0.708127
09/15 13:11:23 - mmengine - INFO - Epoch(train)  [58][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:47:02  time: 0.399259  data_time: 0.164681  memory: 12704  grad_norm: 0.091624  loss: 0.253512  loss_kpt: 0.253512  acc_pose: 0.749265
09/15 13:11:32 - mmengine - INFO - Epoch(train)  [48][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:06:30  time: 0.822608  data_time: 0.506981  memory: 16273  loss: 0.376550  loss_kpt: 0.376550  acc_pose: 0.955149
09/15 13:11:43 - mmengine - INFO - Epoch(train)  [58][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:46:43  time: 0.397869  data_time: 0.163510  memory: 12704  grad_norm: 0.096046  loss: 0.260023  loss_kpt: 0.260023  acc_pose: 0.765478
09/15 13:12:02 - mmengine - INFO - Epoch(train)  [58][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:46:21  time: 0.380870  data_time: 0.146756  memory: 12704  grad_norm: 0.111911  loss: 0.254916  loss_kpt: 0.254916  acc_pose: 0.778890
09/15 13:12:10 - mmengine - INFO - Epoch(train)  [48][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:05:45  time: 0.762872  data_time: 0.446196  memory: 16273  loss: 0.385531  loss_kpt: 0.385531  acc_pose: 0.971917
09/15 13:12:21 - mmengine - INFO - Epoch(train)  [58][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:46:00  time: 0.387116  data_time: 0.153482  memory: 12704  grad_norm: 0.121685  loss: 0.260773  loss_kpt: 0.260773  acc_pose: 0.768653
09/15 13:12:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:12:40 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:12:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:12:57 - mmengine - INFO - Epoch(train)  [59][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:45:25  time: 0.401925  data_time: 0.168366  memory: 12704  grad_norm: 0.110991  loss: 0.254592  loss_kpt: 0.254592  acc_pose: 0.798829
09/15 13:13:17 - mmengine - INFO - Epoch(train)  [59][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:45:05  time: 0.392665  data_time: 0.156625  memory: 12704  grad_norm: 0.095484  loss: 0.252361  loss_kpt: 0.252361  acc_pose: 0.804139
09/15 13:13:26 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:13:27 - mmengine - INFO - Epoch(train)  [49][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:04:33  time: 0.803089  data_time: 0.487696  memory: 16273  loss: 0.384631  loss_kpt: 0.384631  acc_pose: 0.940178
09/15 13:13:37 - mmengine - INFO - Epoch(train)  [59][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:44:46  time: 0.398512  data_time: 0.163994  memory: 12704  grad_norm: 0.087244  loss: 0.255741  loss_kpt: 0.255741  acc_pose: 0.809881
09/15 13:13:56 - mmengine - INFO - Epoch(train)  [59][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:44:26  time: 0.394812  data_time: 0.157879  memory: 12704  grad_norm: 0.100884  loss: 0.257197  loss_kpt: 0.257197  acc_pose: 0.736896
09/15 13:14:06 - mmengine - INFO - Epoch(train)  [49][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:03:52  time: 0.780551  data_time: 0.464913  memory: 16273  loss: 0.386397  loss_kpt: 0.386397  acc_pose: 0.960082
09/15 13:14:16 - mmengine - INFO - Epoch(train)  [59][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:44:07  time: 0.400763  data_time: 0.166144  memory: 12704  grad_norm: 0.118307  loss: 0.258125  loss_kpt: 0.258125  acc_pose: 0.798683
09/15 13:14:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:14:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:14:53 - mmengine - INFO - Epoch(train)  [60][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:43:32  time: 0.402655  data_time: 0.169156  memory: 12704  grad_norm: 0.104152  loss: 0.252885  loss_kpt: 0.252885  acc_pose: 0.806567
09/15 13:15:13 - mmengine - INFO - Epoch(train)  [60][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:43:14  time: 0.404435  data_time: 0.169708  memory: 12704  grad_norm: 0.089400  loss: 0.255165  loss_kpt: 0.255165  acc_pose: 0.708546
09/15 13:15:21 - mmengine - INFO - Epoch(train)  [50][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:02:37  time: 0.801544  data_time: 0.485085  memory: 16273  loss: 0.384143  loss_kpt: 0.384143  acc_pose: 0.939190
09/15 13:15:32 - mmengine - INFO - Epoch(train)  [60][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:42:54  time: 0.392148  data_time: 0.157302  memory: 12704  grad_norm: 0.093300  loss: 0.255398  loss_kpt: 0.255398  acc_pose: 0.852264
09/15 13:15:52 - mmengine - INFO - Epoch(train)  [60][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:42:34  time: 0.394109  data_time: 0.159282  memory: 12704  grad_norm: 0.129474  loss: 0.253543  loss_kpt: 0.253543  acc_pose: 0.831729
09/15 13:16:00 - mmengine - INFO - Epoch(train)  [50][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:01:56  time: 0.777834  data_time: 0.459539  memory: 16273  loss: 0.383216  loss_kpt: 0.383216  acc_pose: 0.953763
09/15 13:16:12 - mmengine - INFO - Epoch(train)  [60][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:42:15  time: 0.400559  data_time: 0.165781  memory: 12704  grad_norm: 0.093521  loss: 0.255182  loss_kpt: 0.255182  acc_pose: 0.822827
09/15 13:16:28 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:16:28 - mmengine - INFO - Saving checkpoint at 60 epochs
09/15 13:16:36 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:16:36 - mmengine - INFO - Saving checkpoint at 50 epochs
09/15 13:16:48 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.797
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.976
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.895
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.797
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.856
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.984
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.933
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.856
09/15 13:16:48 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 13:16:48 - mmengine - INFO - Evaluating AUC...
09/15 13:16:48 - mmengine - INFO - Evaluating NME...
09/15 13:16:48 - mmengine - INFO - Epoch(val) [50][19/19]    coco/AP: 0.796630  coco/AP .5: 0.975563  coco/AP .75: 0.894522  coco/AP (L): -1.000000  coco/AR: 0.796630  coco/AR .5: 0.855976  coco/AR .75: 0.984007  coco/AR (L): 0.932660  PCK: 0.936940  AUC: 0.618157  NME: 0.302881  data_time: 0.379153  time: 0.538369
09/15 13:16:49 - mmengine - INFO - The best checkpoint with 0.7966 coco/AP at 50 epoch is saved to best_coco_AP_epoch_50.pth.
09/15 13:16:50 - mmengine - INFO - Epoch(train)  [61][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:41:40  time: 0.405179  data_time: 0.170858  memory: 12704  grad_norm: 0.088600  loss: 0.252421  loss_kpt: 0.252421  acc_pose: 0.762312
09/15 13:17:10 - mmengine - INFO - Epoch(train)  [61][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:41:21  time: 0.398541  data_time: 0.164834  memory: 12704  grad_norm: 0.112911  loss: 0.252058  loss_kpt: 0.252058  acc_pose: 0.751261
09/15 13:17:30 - mmengine - INFO - Epoch(train)  [61][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:41:04  time: 0.406529  data_time: 0.168951  memory: 12704  grad_norm: 0.108148  loss: 0.254038  loss_kpt: 0.254038  acc_pose: 0.739835
09/15 13:17:31 - mmengine - INFO - Epoch(train)  [51][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:00:44  time: 0.815195  data_time: 0.498633  memory: 16273  loss: 0.385668  loss_kpt: 0.385668  acc_pose: 0.968066
09/15 13:17:50 - mmengine - INFO - Epoch(train)  [61][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:40:43  time: 0.388739  data_time: 0.154861  memory: 12704  grad_norm: 0.116867  loss: 0.254072  loss_kpt: 0.254072  acc_pose: 0.803911
09/15 13:18:09 - mmengine - INFO - Epoch(train)  [61][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:40:22  time: 0.388552  data_time: 0.154894  memory: 12704  grad_norm: 0.141198  loss: 0.258017  loss_kpt: 0.258017  acc_pose: 0.777200
09/15 13:18:10 - mmengine - INFO - Epoch(train)  [51][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 7:00:02  time: 0.773324  data_time: 0.456806  memory: 16273  loss: 0.378686  loss_kpt: 0.378686  acc_pose: 0.972415
09/15 13:18:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:18:46 - mmengine - INFO - Epoch(train)  [62][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:39:47  time: 0.407525  data_time: 0.173609  memory: 12704  grad_norm: 0.118179  loss: 0.253714  loss_kpt: 0.253714  acc_pose: 0.846707
09/15 13:18:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:19:05 - mmengine - INFO - Epoch(train)  [62][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:39:26  time: 0.384451  data_time: 0.151884  memory: 12704  grad_norm: 0.124184  loss: 0.254734  loss_kpt: 0.254734  acc_pose: 0.687951
09/15 13:19:24 - mmengine - INFO - Epoch(train)  [62][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:39:04  time: 0.383971  data_time: 0.147506  memory: 12704  grad_norm: 0.134115  loss: 0.255837  loss_kpt: 0.255837  acc_pose: 0.735386
09/15 13:19:26 - mmengine - INFO - Epoch(train)  [52][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:58:49  time: 0.798633  data_time: 0.483136  memory: 16273  loss: 0.384418  loss_kpt: 0.384418  acc_pose: 0.965312
09/15 13:19:44 - mmengine - INFO - Epoch(train)  [62][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:38:45  time: 0.396487  data_time: 0.162977  memory: 12704  grad_norm: 0.108432  loss: 0.250761  loss_kpt: 0.250761  acc_pose: 0.747963
09/15 13:20:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:20:04 - mmengine - INFO - Epoch(train)  [62][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:38:28  time: 0.409350  data_time: 0.175013  memory: 12704  grad_norm: 0.109850  loss: 0.255055  loss_kpt: 0.255055  acc_pose: 0.799331
09/15 13:20:06 - mmengine - INFO - Epoch(train)  [52][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:58:12  time: 0.795017  data_time: 0.476437  memory: 16273  loss: 0.382226  loss_kpt: 0.382226  acc_pose: 0.942430
09/15 13:20:20 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:20:40 - mmengine - INFO - Epoch(train)  [63][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:37:52  time: 0.404728  data_time: 0.171311  memory: 12704  grad_norm: 0.106599  loss: 0.255726  loss_kpt: 0.255726  acc_pose: 0.819712
09/15 13:20:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:21:00 - mmengine - INFO - Epoch(train)  [63][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:37:33  time: 0.398578  data_time: 0.165165  memory: 12704  grad_norm: 0.123958  loss: 0.250426  loss_kpt: 0.250426  acc_pose: 0.728646
09/15 13:21:20 - mmengine - INFO - Epoch(train)  [63][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:37:12  time: 0.388787  data_time: 0.155459  memory: 12704  grad_norm: 0.092508  loss: 0.256313  loss_kpt: 0.256313  acc_pose: 0.790831
09/15 13:21:21 - mmengine - INFO - Epoch(train)  [53][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:56:56  time: 0.808284  data_time: 0.492778  memory: 16273  loss: 0.382019  loss_kpt: 0.382019  acc_pose: 0.978333
09/15 13:21:39 - mmengine - INFO - Epoch(train)  [63][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:36:51  time: 0.387075  data_time: 0.154043  memory: 12704  grad_norm: 0.103169  loss: 0.252882  loss_kpt: 0.252882  acc_pose: 0.755431
09/15 13:21:59 - mmengine - INFO - Epoch(train)  [63][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:36:31  time: 0.396092  data_time: 0.161480  memory: 12704  grad_norm: 0.107943  loss: 0.254888  loss_kpt: 0.254888  acc_pose: 0.721846
09/15 13:22:01 - mmengine - INFO - Epoch(train)  [53][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:56:16  time: 0.785081  data_time: 0.469086  memory: 16273  loss: 0.382705  loss_kpt: 0.382705  acc_pose: 0.966617
09/15 13:22:15 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:22:35 - mmengine - INFO - Epoch(train)  [64][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:35:56  time: 0.399287  data_time: 0.165834  memory: 12704  grad_norm: 0.112517  loss: 0.253240  loss_kpt: 0.253240  acc_pose: 0.774430
09/15 13:22:36 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:22:54 - mmengine - INFO - Epoch(train)  [64][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:35:35  time: 0.384802  data_time: 0.151214  memory: 12704  grad_norm: 0.099905  loss: 0.253109  loss_kpt: 0.253109  acc_pose: 0.798288
09/15 13:23:14 - mmengine - INFO - Epoch(train)  [64][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:35:16  time: 0.397781  data_time: 0.164546  memory: 12704  grad_norm: 0.132596  loss: 0.256756  loss_kpt: 0.256756  acc_pose: 0.806559
09/15 13:23:16 - mmengine - INFO - Epoch(train)  [54][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:54:59  time: 0.801140  data_time: 0.487713  memory: 16273  loss: 0.380169  loss_kpt: 0.380169  acc_pose: 0.959735
09/15 13:23:34 - mmengine - INFO - Epoch(train)  [64][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:34:57  time: 0.402823  data_time: 0.168512  memory: 12704  grad_norm: 0.102372  loss: 0.254582  loss_kpt: 0.254582  acc_pose: 0.819636
09/15 13:23:53 - mmengine - INFO - Epoch(train)  [64][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:34:36  time: 0.385816  data_time: 0.150976  memory: 12704  grad_norm: 0.108580  loss: 0.252650  loss_kpt: 0.252650  acc_pose: 0.691373
09/15 13:23:55 - mmengine - INFO - Epoch(train)  [54][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:54:20  time: 0.786978  data_time: 0.472393  memory: 16273  loss: 0.381707  loss_kpt: 0.381707  acc_pose: 0.947613
09/15 13:24:09 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:24:30 - mmengine - INFO - Epoch(train)  [65][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:34:01  time: 0.401932  data_time: 0.167819  memory: 12704  grad_norm: 0.086825  loss: 0.252714  loss_kpt: 0.252714  acc_pose: 0.839638
09/15 13:24:31 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:24:49 - mmengine - INFO - Epoch(train)  [65][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:33:41  time: 0.396273  data_time: 0.161466  memory: 12704  grad_norm: 0.100707  loss: 0.251731  loss_kpt: 0.251731  acc_pose: 0.811548
09/15 13:25:09 - mmengine - INFO - Epoch(train)  [65][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:33:22  time: 0.398987  data_time: 0.165289  memory: 12704  grad_norm: 0.113007  loss: 0.254369  loss_kpt: 0.254369  acc_pose: 0.762397
09/15 13:25:11 - mmengine - INFO - Epoch(train)  [55][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:53:04  time: 0.800268  data_time: 0.484766  memory: 16273  loss: 0.381987  loss_kpt: 0.381987  acc_pose: 0.957116
09/15 13:25:29 - mmengine - INFO - Epoch(train)  [65][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:33:04  time: 0.401875  data_time: 0.168814  memory: 12704  grad_norm: 0.101137  loss: 0.252353  loss_kpt: 0.252353  acc_pose: 0.850381
09/15 13:25:49 - mmengine - INFO - Epoch(train)  [65][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:32:42  time: 0.385570  data_time: 0.151948  memory: 12704  grad_norm: 0.139869  loss: 0.254646  loss_kpt: 0.254646  acc_pose: 0.892962
09/15 13:25:50 - mmengine - INFO - Epoch(train)  [55][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:52:23  time: 0.777388  data_time: 0.461380  memory: 16273  loss: 0.377721  loss_kpt: 0.377721  acc_pose: 0.974041
09/15 13:26:02 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:26:05 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:26:25 - mmengine - INFO - Epoch(train)  [66][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:32:07  time: 0.402848  data_time: 0.169172  memory: 12704  grad_norm: 0.112128  loss: 0.254082  loss_kpt: 0.254082  acc_pose: 0.759003
09/15 13:26:25 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:26:39 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:26:45 - mmengine - INFO - Epoch(train)  [66][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:31:47  time: 0.392947  data_time: 0.156591  memory: 12704  grad_norm: 0.144824  loss: 0.251406  loss_kpt: 0.251406  acc_pose: 0.776884
09/15 13:27:04 - mmengine - INFO - Epoch(train)  [66][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:31:27  time: 0.393331  data_time: 0.159077  memory: 12704  grad_norm: 0.096721  loss: 0.254110  loss_kpt: 0.254110  acc_pose: 0.764908
09/15 13:27:05 - mmengine - INFO - Epoch(train)  [56][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:51:07  time: 0.801392  data_time: 0.482598  memory: 16273  loss: 0.379170  loss_kpt: 0.379170  acc_pose: 0.963482
09/15 13:27:24 - mmengine - INFO - Epoch(train)  [66][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:31:08  time: 0.400146  data_time: 0.165569  memory: 12704  grad_norm: 0.084231  loss: 0.251991  loss_kpt: 0.251991  acc_pose: 0.713995
09/15 13:27:44 - mmengine - INFO - Epoch(train)  [66][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:30:47  time: 0.385889  data_time: 0.148477  memory: 12704  grad_norm: 0.102681  loss: 0.251618  loss_kpt: 0.251618  acc_pose: 0.833230
09/15 13:27:44 - mmengine - INFO - Epoch(train)  [56][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:50:26  time: 0.777877  data_time: 0.462261  memory: 16273  loss: 0.383940  loss_kpt: 0.383940  acc_pose: 0.959901
09/15 13:27:59 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:28:20 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:28:20 - mmengine - INFO - Epoch(train)  [67][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:30:13  time: 0.411923  data_time: 0.177603  memory: 12704  grad_norm: 0.111132  loss: 0.248973  loss_kpt: 0.248973  acc_pose: 0.783310
09/15 13:28:40 - mmengine - INFO - Epoch(train)  [67][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:29:53  time: 0.395463  data_time: 0.161763  memory: 12704  grad_norm: 0.137134  loss: 0.253190  loss_kpt: 0.253190  acc_pose: 0.812046
09/15 13:28:59 - mmengine - INFO - Epoch(train)  [67][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:29:33  time: 0.392908  data_time: 0.158507  memory: 12704  grad_norm: 0.116316  loss: 0.251819  loss_kpt: 0.251819  acc_pose: 0.815259
09/15 13:29:00 - mmengine - INFO - Epoch(train)  [57][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:49:10  time: 0.793672  data_time: 0.478493  memory: 16273  loss: 0.379406  loss_kpt: 0.379406  acc_pose: 0.959404
09/15 13:29:19 - mmengine - INFO - Epoch(train)  [67][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:29:13  time: 0.390948  data_time: 0.155814  memory: 12704  grad_norm: 0.111474  loss: 0.252183  loss_kpt: 0.252183  acc_pose: 0.751784
09/15 13:29:38 - mmengine - INFO - Epoch(train)  [67][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:28:53  time: 0.390574  data_time: 0.155928  memory: 12704  grad_norm: 0.121229  loss: 0.254673  loss_kpt: 0.254673  acc_pose: 0.730191
09/15 13:29:39 - mmengine - INFO - Epoch(train)  [57][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:48:30  time: 0.783083  data_time: 0.467909  memory: 16273  loss: 0.378482  loss_kpt: 0.378482  acc_pose: 0.958858
09/15 13:29:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:30:14 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:30:15 - mmengine - INFO - Epoch(train)  [68][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:28:19  time: 0.409835  data_time: 0.176119  memory: 12704  grad_norm: 0.123739  loss: 0.254631  loss_kpt: 0.254631  acc_pose: 0.795943
09/15 13:30:35 - mmengine - INFO - Epoch(train)  [68][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:27:58  time: 0.391849  data_time: 0.154453  memory: 12704  grad_norm: 0.119178  loss: 0.254117  loss_kpt: 0.254117  acc_pose: 0.716671
09/15 13:30:54 - mmengine - INFO - Epoch(train)  [58][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:47:13  time: 0.797900  data_time: 0.479637  memory: 16273  loss: 0.377569  loss_kpt: 0.377569  acc_pose: 0.958985
09/15 13:30:55 - mmengine - INFO - Epoch(train)  [68][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:27:40  time: 0.406670  data_time: 0.172325  memory: 12704  grad_norm: 0.112264  loss: 0.247764  loss_kpt: 0.247764  acc_pose: 0.702442
09/15 13:31:14 - mmengine - INFO - Epoch(train)  [68][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:27:18  time: 0.378327  data_time: 0.143334  memory: 12704  grad_norm: 0.106338  loss: 0.253570  loss_kpt: 0.253570  acc_pose: 0.786452
09/15 13:31:33 - mmengine - INFO - Epoch(train)  [58][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:46:33  time: 0.784189  data_time: 0.466079  memory: 16273  loss: 0.379656  loss_kpt: 0.379656  acc_pose: 0.949383
09/15 13:31:33 - mmengine - INFO - Epoch(train)  [68][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:26:57  time: 0.387085  data_time: 0.152493  memory: 12704  grad_norm: 0.102701  loss: 0.249183  loss_kpt: 0.249183  acc_pose: 0.737787
09/15 13:31:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:32:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:32:09 - mmengine - INFO - Epoch(train)  [69][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:26:21  time: 0.396922  data_time: 0.163052  memory: 12704  grad_norm: 0.108054  loss: 0.253092  loss_kpt: 0.253092  acc_pose: 0.784669
09/15 13:32:29 - mmengine - INFO - Epoch(train)  [69][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:26:01  time: 0.397824  data_time: 0.160455  memory: 12704  grad_norm: 0.099252  loss: 0.251671  loss_kpt: 0.251671  acc_pose: 0.817604
09/15 13:32:48 - mmengine - INFO - Epoch(train)  [59][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:45:15  time: 0.796993  data_time: 0.481312  memory: 16273  loss: 0.372971  loss_kpt: 0.372971  acc_pose: 0.946645
09/15 13:32:48 - mmengine - INFO - Epoch(train)  [69][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:25:40  time: 0.387288  data_time: 0.153633  memory: 12704  grad_norm: 0.134771  loss: 0.255355  loss_kpt: 0.255355  acc_pose: 0.789813
09/15 13:33:08 - mmengine - INFO - Epoch(train)  [69][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:25:21  time: 0.396934  data_time: 0.162817  memory: 12704  grad_norm: 0.086934  loss: 0.248275  loss_kpt: 0.248275  acc_pose: 0.865487
09/15 13:33:13 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:33:27 - mmengine - INFO - Epoch(train)  [59][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:44:34  time: 0.777903  data_time: 0.460056  memory: 16273  loss: 0.378587  loss_kpt: 0.378587  acc_pose: 0.949220
09/15 13:33:28 - mmengine - INFO - Epoch(train)  [69][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:25:02  time: 0.399097  data_time: 0.164099  memory: 12704  grad_norm: 0.078802  loss: 0.248122  loss_kpt: 0.248122  acc_pose: 0.789231
09/15 13:33:44 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:34:02 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:34:05 - mmengine - INFO - Epoch(train)  [70][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:24:28  time: 0.416447  data_time: 0.182910  memory: 12704  grad_norm: 0.098614  loss: 0.247405  loss_kpt: 0.247405  acc_pose: 0.770697
09/15 13:34:25 - mmengine - INFO - Epoch(train)  [70][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:24:09  time: 0.403557  data_time: 0.168006  memory: 12704  grad_norm: 0.116888  loss: 0.252030  loss_kpt: 0.252030  acc_pose: 0.685922
09/15 13:34:43 - mmengine - INFO - Epoch(train)  [60][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:43:19  time: 0.803719  data_time: 0.487583  memory: 16273  loss: 0.381452  loss_kpt: 0.381452  acc_pose: 0.958036
09/15 13:34:44 - mmengine - INFO - Epoch(train)  [70][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:23:48  time: 0.386387  data_time: 0.152686  memory: 12704  grad_norm: 0.117367  loss: 0.253188  loss_kpt: 0.253188  acc_pose: 0.828468
09/15 13:35:03 - mmengine - INFO - Epoch(train)  [70][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:23:27  time: 0.384432  data_time: 0.150750  memory: 12704  grad_norm: 0.115789  loss: 0.256896  loss_kpt: 0.256896  acc_pose: 0.750272
09/15 13:35:22 - mmengine - INFO - Epoch(train)  [60][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:42:38  time: 0.779431  data_time: 0.460293  memory: 16273  loss: 0.377793  loss_kpt: 0.377793  acc_pose: 0.954311
09/15 13:35:23 - mmengine - INFO - Epoch(train)  [70][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:23:07  time: 0.393091  data_time: 0.158673  memory: 12704  grad_norm: 0.118551  loss: 0.248105  loss_kpt: 0.248105  acc_pose: 0.808403
09/15 13:35:39 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:35:39 - mmengine - INFO - Saving checkpoint at 70 epochs
09/15 13:35:57 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:35:57 - mmengine - INFO - Saving checkpoint at 60 epochs
09/15 13:36:01 - mmengine - INFO - Epoch(train)  [71][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:22:32  time: 0.410576  data_time: 0.175483  memory: 12704  grad_norm: 0.138261  loss: 0.252461  loss_kpt: 0.252461  acc_pose: 0.793626
09/15 13:36:21 - mmengine - INFO - Epoch(train)  [71][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:22:13  time: 0.398409  data_time: 0.163588  memory: 12704  grad_norm: 0.091998  loss: 0.246932  loss_kpt: 0.246932  acc_pose: 0.821511
09/15 13:36:39 - mmengine - INFO - Epoch(train)  [61][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:41:23  time: 0.811514  data_time: 0.494311  memory: 16273  loss: 0.379553  loss_kpt: 0.379553  acc_pose: 0.960495
09/15 13:36:40 - mmengine - INFO - Epoch(train)  [71][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:21:53  time: 0.392199  data_time: 0.155509  memory: 12704  grad_norm: 0.146330  loss: 0.254525  loss_kpt: 0.254525  acc_pose: 0.828570
09/15 13:37:00 - mmengine - INFO - Epoch(train)  [71][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:21:32  time: 0.389164  data_time: 0.155622  memory: 12704  grad_norm: 0.142730  loss: 0.252712  loss_kpt: 0.252712  acc_pose: 0.782628
09/15 13:37:18 - mmengine - INFO - Epoch(train)  [61][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:40:46  time: 0.795926  data_time: 0.475016  memory: 16273  loss: 0.378320  loss_kpt: 0.378320  acc_pose: 0.932796
09/15 13:37:20 - mmengine - INFO - Epoch(train)  [71][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:21:12  time: 0.394636  data_time: 0.160272  memory: 12704  grad_norm: 0.096680  loss: 0.249406  loss_kpt: 0.249406  acc_pose: 0.849526
09/15 13:37:36 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:37:54 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:37:56 - mmengine - INFO - Epoch(train)  [72][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:20:37  time: 0.404937  data_time: 0.170695  memory: 12704  grad_norm: 0.099497  loss: 0.253139  loss_kpt: 0.253139  acc_pose: 0.821906
09/15 13:38:15 - mmengine - INFO - Epoch(train)  [72][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:20:17  time: 0.386482  data_time: 0.152371  memory: 12704  grad_norm: 0.128578  loss: 0.246200  loss_kpt: 0.246200  acc_pose: 0.746029
09/15 13:38:34 - mmengine - INFO - Epoch(train)  [62][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:39:30  time: 0.803135  data_time: 0.486731  memory: 16273  loss: 0.378385  loss_kpt: 0.378385  acc_pose: 0.974390
09/15 13:38:35 - mmengine - INFO - Epoch(train)  [72][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:19:56  time: 0.389346  data_time: 0.153769  memory: 12704  grad_norm: 0.127496  loss: 0.244145  loss_kpt: 0.244145  acc_pose: 0.798472
09/15 13:38:55 - mmengine - INFO - Epoch(train)  [72][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:19:37  time: 0.401146  data_time: 0.165740  memory: 12704  grad_norm: 0.118548  loss: 0.253698  loss_kpt: 0.253698  acc_pose: 0.845238
09/15 13:39:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:39:13 - mmengine - INFO - Epoch(train)  [62][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:38:49  time: 0.780105  data_time: 0.461838  memory: 16273  loss: 0.376309  loss_kpt: 0.376309  acc_pose: 0.946454
09/15 13:39:14 - mmengine - INFO - Epoch(train)  [72][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:19:17  time: 0.394057  data_time: 0.160115  memory: 12704  grad_norm: 0.125579  loss: 0.252470  loss_kpt: 0.252470  acc_pose: 0.737031
09/15 13:39:30 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:39:48 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:39:50 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:39:51 - mmengine - INFO - Epoch(train)  [73][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:18:43  time: 0.414400  data_time: 0.179818  memory: 12704  grad_norm: 0.115266  loss: 0.254670  loss_kpt: 0.254670  acc_pose: 0.811119
09/15 13:40:11 - mmengine - INFO - Epoch(train)  [73][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:18:24  time: 0.398488  data_time: 0.163243  memory: 12704  grad_norm: 0.118268  loss: 0.252807  loss_kpt: 0.252807  acc_pose: 0.833808
09/15 13:40:28 - mmengine - INFO - Epoch(train)  [63][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:37:34  time: 0.801676  data_time: 0.485293  memory: 16273  loss: 0.376073  loss_kpt: 0.376073  acc_pose: 0.972251
09/15 13:40:31 - mmengine - INFO - Epoch(train)  [73][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:18:05  time: 0.398213  data_time: 0.164481  memory: 12704  grad_norm: 0.096803  loss: 0.248176  loss_kpt: 0.248176  acc_pose: 0.817740
09/15 13:40:50 - mmengine - INFO - Epoch(train)  [73][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:17:44  time: 0.387515  data_time: 0.151094  memory: 12704  grad_norm: 0.120356  loss: 0.246999  loss_kpt: 0.246999  acc_pose: 0.833446
09/15 13:41:07 - mmengine - INFO - Epoch(train)  [63][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:36:52  time: 0.771219  data_time: 0.451581  memory: 16273  loss: 0.378008  loss_kpt: 0.378008  acc_pose: 0.945944
09/15 13:41:10 - mmengine - INFO - Epoch(train)  [73][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:17:26  time: 0.407179  data_time: 0.173756  memory: 12704  grad_norm: 0.125873  loss: 0.252440  loss_kpt: 0.252440  acc_pose: 0.735689
09/15 13:41:26 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:41:43 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:41:47 - mmengine - INFO - Epoch(train)  [74][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:16:51  time: 0.409553  data_time: 0.175041  memory: 12704  grad_norm: 0.105288  loss: 0.251779  loss_kpt: 0.251779  acc_pose: 0.800545
09/15 13:42:07 - mmengine - INFO - Epoch(train)  [74][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:16:31  time: 0.394089  data_time: 0.159964  memory: 12704  grad_norm: 0.118889  loss: 0.249594  loss_kpt: 0.249594  acc_pose: 0.757934
09/15 13:42:22 - mmengine - INFO - Epoch(train)  [64][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:35:36  time: 0.787415  data_time: 0.469741  memory: 16273  loss: 0.377580  loss_kpt: 0.377580  acc_pose: 0.981870
09/15 13:42:26 - mmengine - INFO - Epoch(train)  [74][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:16:11  time: 0.393511  data_time: 0.159067  memory: 12704  grad_norm: 0.108842  loss: 0.248201  loss_kpt: 0.248201  acc_pose: 0.874701
09/15 13:42:46 - mmengine - INFO - Epoch(train)  [74][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:15:51  time: 0.389998  data_time: 0.155421  memory: 12704  grad_norm: 0.126108  loss: 0.246387  loss_kpt: 0.246387  acc_pose: 0.822786
09/15 13:43:02 - mmengine - INFO - Epoch(train)  [64][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:34:56  time: 0.786260  data_time: 0.471761  memory: 16273  loss: 0.380113  loss_kpt: 0.380113  acc_pose: 0.973176
09/15 13:43:05 - mmengine - INFO - Epoch(train)  [74][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:15:31  time: 0.389401  data_time: 0.155059  memory: 12704  grad_norm: 0.102334  loss: 0.249386  loss_kpt: 0.249386  acc_pose: 0.846148
09/15 13:43:21 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:43:37 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:43:41 - mmengine - INFO - Epoch(train)  [75][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:14:55  time: 0.399398  data_time: 0.165773  memory: 12704  grad_norm: 0.131483  loss: 0.250233  loss_kpt: 0.250233  acc_pose: 0.803622
09/15 13:44:01 - mmengine - INFO - Epoch(train)  [75][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:14:35  time: 0.393212  data_time: 0.160193  memory: 12704  grad_norm: 0.111794  loss: 0.252723  loss_kpt: 0.252723  acc_pose: 0.832407
09/15 13:44:17 - mmengine - INFO - Epoch(train)  [65][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:33:41  time: 0.803534  data_time: 0.484778  memory: 16273  loss: 0.377995  loss_kpt: 0.377995  acc_pose: 0.965748
09/15 13:44:21 - mmengine - INFO - Epoch(train)  [75][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:14:16  time: 0.399171  data_time: 0.164918  memory: 12704  grad_norm: 0.100694  loss: 0.248411  loss_kpt: 0.248411  acc_pose: 0.847333
09/15 13:44:40 - mmengine - INFO - Epoch(train)  [75][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:13:55  time: 0.391978  data_time: 0.157735  memory: 12704  grad_norm: 0.121317  loss: 0.248740  loss_kpt: 0.248740  acc_pose: 0.819388
09/15 13:44:57 - mmengine - INFO - Epoch(train)  [65][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:33:04  time: 0.806437  data_time: 0.486850  memory: 16273  loss: 0.375379  loss_kpt: 0.375379  acc_pose: 0.950773
09/15 13:45:00 - mmengine - INFO - Epoch(train)  [75][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:13:34  time: 0.385458  data_time: 0.150719  memory: 12704  grad_norm: 0.127876  loss: 0.245903  loss_kpt: 0.245903  acc_pose: 0.823834
09/15 13:45:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:45:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:45:36 - mmengine - INFO - Epoch(train)  [76][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:13:00  time: 0.408851  data_time: 0.175611  memory: 12704  grad_norm: 0.114557  loss: 0.252106  loss_kpt: 0.252106  acc_pose: 0.808823
09/15 13:45:56 - mmengine - INFO - Epoch(train)  [76][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:12:40  time: 0.392684  data_time: 0.155129  memory: 12704  grad_norm: 0.102167  loss: 0.251716  loss_kpt: 0.251716  acc_pose: 0.806779
09/15 13:46:13 - mmengine - INFO - Epoch(train)  [66][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:31:48  time: 0.795682  data_time: 0.479919  memory: 16273  loss: 0.376873  loss_kpt: 0.376873  acc_pose: 0.950490
09/15 13:46:15 - mmengine - INFO - Epoch(train)  [76][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:12:19  time: 0.385431  data_time: 0.151842  memory: 12704  grad_norm: 0.102029  loss: 0.248524  loss_kpt: 0.248524  acc_pose: 0.773747
09/15 13:46:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:46:35 - mmengine - INFO - Epoch(train)  [76][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:11:59  time: 0.393947  data_time: 0.160152  memory: 12704  grad_norm: 0.102400  loss: 0.245199  loss_kpt: 0.245199  acc_pose: 0.776532
09/15 13:46:52 - mmengine - INFO - Epoch(train)  [66][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:31:09  time: 0.785458  data_time: 0.469002  memory: 16273  loss: 0.376207  loss_kpt: 0.376207  acc_pose: 0.951034
09/15 13:46:55 - mmengine - INFO - Epoch(train)  [76][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:11:40  time: 0.395785  data_time: 0.159693  memory: 12704  grad_norm: 0.132764  loss: 0.250624  loss_kpt: 0.250624  acc_pose: 0.765272
09/15 13:47:10 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:47:28 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:47:31 - mmengine - INFO - Epoch(train)  [77][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:11:05  time: 0.408566  data_time: 0.174632  memory: 12704  grad_norm: 0.119218  loss: 0.248536  loss_kpt: 0.248536  acc_pose: 0.753478
09/15 13:47:50 - mmengine - INFO - Epoch(train)  [77][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:10:45  time: 0.391644  data_time: 0.156583  memory: 12704  grad_norm: 0.121823  loss: 0.248650  loss_kpt: 0.248650  acc_pose: 0.813970
09/15 13:48:09 - mmengine - INFO - Epoch(train)  [67][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:29:57  time: 0.806851  data_time: 0.486768  memory: 16273  loss: 0.374729  loss_kpt: 0.374729  acc_pose: 0.952592
09/15 13:48:10 - mmengine - INFO - Epoch(train)  [77][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:10:25  time: 0.396440  data_time: 0.161376  memory: 12704  grad_norm: 0.117441  loss: 0.246723  loss_kpt: 0.246723  acc_pose: 0.802933
09/15 13:48:30 - mmengine - INFO - Epoch(train)  [77][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:10:04  time: 0.385930  data_time: 0.151909  memory: 12704  grad_norm: 0.127804  loss: 0.248407  loss_kpt: 0.248407  acc_pose: 0.841447
09/15 13:48:47 - mmengine - INFO - Epoch(train)  [67][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:29:15  time: 0.774356  data_time: 0.458279  memory: 16273  loss: 0.375420  loss_kpt: 0.375420  acc_pose: 0.967193
09/15 13:48:49 - mmengine - INFO - Epoch(train)  [77][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:09:45  time: 0.397725  data_time: 0.162854  memory: 12704  grad_norm: 0.130943  loss: 0.251336  loss_kpt: 0.251336  acc_pose: 0.799913
09/15 13:49:05 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:49:23 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:49:26 - mmengine - INFO - Epoch(train)  [78][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:09:10  time: 0.407656  data_time: 0.173256  memory: 12704  grad_norm: 0.129898  loss: 0.250135  loss_kpt: 0.250135  acc_pose: 0.858693
09/15 13:49:45 - mmengine - INFO - Epoch(train)  [78][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:08:50  time: 0.392460  data_time: 0.155494  memory: 12704  grad_norm: 0.096795  loss: 0.247884  loss_kpt: 0.247884  acc_pose: 0.756971
09/15 13:50:03 - mmengine - INFO - Epoch(train)  [68][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:28:01  time: 0.810847  data_time: 0.494089  memory: 16273  loss: 0.379554  loss_kpt: 0.379554  acc_pose: 0.950683
09/15 13:50:05 - mmengine - INFO - Epoch(train)  [78][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:08:30  time: 0.397946  data_time: 0.163504  memory: 12704  grad_norm: 0.124742  loss: 0.249364  loss_kpt: 0.249364  acc_pose: 0.801098
09/15 13:50:25 - mmengine - INFO - Epoch(train)  [78][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:08:11  time: 0.398544  data_time: 0.164912  memory: 12704  grad_norm: 0.152850  loss: 0.252382  loss_kpt: 0.252382  acc_pose: 0.774542
09/15 13:50:43 - mmengine - INFO - Epoch(train)  [68][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:27:23  time: 0.795087  data_time: 0.478099  memory: 16273  loss: 0.372662  loss_kpt: 0.372662  acc_pose: 0.959028
09/15 13:50:45 - mmengine - INFO - Epoch(train)  [78][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:07:50  time: 0.388273  data_time: 0.153844  memory: 12704  grad_norm: 0.102025  loss: 0.251291  loss_kpt: 0.251291  acc_pose: 0.783158
09/15 13:51:01 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:51:19 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:51:21 - mmengine - INFO - Epoch(train)  [79][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:07:15  time: 0.399804  data_time: 0.167113  memory: 12704  grad_norm: 0.106443  loss: 0.245710  loss_kpt: 0.245710  acc_pose: 0.835475
09/15 13:51:40 - mmengine - INFO - Epoch(train)  [79][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:06:55  time: 0.397072  data_time: 0.163224  memory: 12704  grad_norm: 0.107158  loss: 0.246245  loss_kpt: 0.246245  acc_pose: 0.796138
09/15 13:51:59 - mmengine - INFO - Epoch(train)  [69][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:26:08  time: 0.802034  data_time: 0.486237  memory: 16273  loss: 0.375726  loss_kpt: 0.375726  acc_pose: 0.979538
09/15 13:52:00 - mmengine - INFO - Epoch(train)  [79][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:06:36  time: 0.397399  data_time: 0.163384  memory: 12704  grad_norm: 0.105698  loss: 0.249342  loss_kpt: 0.249342  acc_pose: 0.723720
09/15 13:52:15 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:52:19 - mmengine - INFO - Epoch(train)  [79][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:06:15  time: 0.383498  data_time: 0.149488  memory: 12704  grad_norm: 0.119051  loss: 0.248962  loss_kpt: 0.248962  acc_pose: 0.817417
09/15 13:52:38 - mmengine - INFO - Epoch(train)  [69][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:25:28  time: 0.787856  data_time: 0.470427  memory: 16273  loss: 0.377307  loss_kpt: 0.377307  acc_pose: 0.957634
09/15 13:52:39 - mmengine - INFO - Epoch(train)  [79][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:05:55  time: 0.390806  data_time: 0.156861  memory: 12704  grad_norm: 0.148919  loss: 0.253366  loss_kpt: 0.253366  acc_pose: 0.824129
09/15 13:52:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:53:00 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:53:14 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:53:16 - mmengine - INFO - Epoch(train)  [80][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:05:20  time: 0.416172  data_time: 0.182346  memory: 12704  grad_norm: 0.096895  loss: 0.247676  loss_kpt: 0.247676  acc_pose: 0.792588
09/15 13:53:35 - mmengine - INFO - Epoch(train)  [80][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:05:01  time: 0.393049  data_time: 0.159094  memory: 12704  grad_norm: 0.093533  loss: 0.249277  loss_kpt: 0.249277  acc_pose: 0.765761
09/15 13:53:55 - mmengine - INFO - Epoch(train)  [80][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:04:40  time: 0.390741  data_time: 0.156799  memory: 12704  grad_norm: 0.122722  loss: 0.248330  loss_kpt: 0.248330  acc_pose: 0.815567
09/15 13:53:55 - mmengine - INFO - Epoch(train)  [70][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:24:18  time: 0.826453  data_time: 0.509461  memory: 16273  loss: 0.373135  loss_kpt: 0.373135  acc_pose: 0.950501
09/15 13:54:14 - mmengine - INFO - Epoch(train)  [80][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:04:20  time: 0.390693  data_time: 0.155466  memory: 12704  grad_norm: 0.122533  loss: 0.252020  loss_kpt: 0.252020  acc_pose: 0.773947
09/15 13:54:34 - mmengine - INFO - Epoch(train)  [80][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:04:00  time: 0.390285  data_time: 0.156280  memory: 12704  grad_norm: 0.109821  loss: 0.243403  loss_kpt: 0.243403  acc_pose: 0.832806
09/15 13:54:34 - mmengine - INFO - Epoch(train)  [70][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:23:37  time: 0.775134  data_time: 0.459908  memory: 16273  loss: 0.377525  loss_kpt: 0.377525  acc_pose: 0.939193
09/15 13:54:50 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:54:50 - mmengine - INFO - Saving checkpoint at 80 epochs
09/15 13:55:09 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:55:09 - mmengine - INFO - Saving checkpoint at 70 epochs
09/15 13:55:11 - mmengine - INFO - Epoch(train)  [81][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:03:23  time: 0.397511  data_time: 0.164090  memory: 12704  grad_norm: 0.110322  loss: 0.247178  loss_kpt: 0.247178  acc_pose: 0.824793
09/15 13:55:30 - mmengine - INFO - Epoch(train)  [81][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:03:02  time: 0.382625  data_time: 0.149654  memory: 12704  grad_norm: 0.146787  loss: 0.249139  loss_kpt: 0.249139  acc_pose: 0.799951
09/15 13:55:50 - mmengine - INFO - Epoch(train)  [81][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:02:42  time: 0.391151  data_time: 0.156301  memory: 12704  grad_norm: 0.098820  loss: 0.247499  loss_kpt: 0.247499  acc_pose: 0.845761
09/15 13:55:51 - mmengine - INFO - Epoch(train)  [71][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:22:21  time: 0.809480  data_time: 0.490825  memory: 16273  loss: 0.373194  loss_kpt: 0.373194  acc_pose: 0.956676
09/15 13:56:10 - mmengine - INFO - Epoch(train)  [81][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:02:22  time: 0.397042  data_time: 0.163513  memory: 12704  grad_norm: 0.102926  loss: 0.246321  loss_kpt: 0.246321  acc_pose: 0.786357
09/15 13:56:30 - mmengine - INFO - Epoch(train)  [71][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:21:40  time: 0.774486  data_time: 0.458503  memory: 16273  loss: 0.377508  loss_kpt: 0.377508  acc_pose: 0.951998
09/15 13:56:30 - mmengine - INFO - Epoch(train)  [81][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:02:03  time: 0.400440  data_time: 0.166321  memory: 12704  grad_norm: 0.111189  loss: 0.246798  loss_kpt: 0.246798  acc_pose: 0.885944
09/15 13:56:46 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:57:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:57:06 - mmengine - INFO - Epoch(train)  [82][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:01:29  time: 0.411740  data_time: 0.177476  memory: 12704  grad_norm: 0.114435  loss: 0.245482  loss_kpt: 0.245482  acc_pose: 0.725729
09/15 13:57:26 - mmengine - INFO - Epoch(train)  [82][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:01:09  time: 0.390495  data_time: 0.156659  memory: 12704  grad_norm: 0.102899  loss: 0.246462  loss_kpt: 0.246462  acc_pose: 0.807063
09/15 13:57:45 - mmengine - INFO - Epoch(train)  [72][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:20:23  time: 0.798796  data_time: 0.483613  memory: 16273  loss: 0.370607  loss_kpt: 0.370607  acc_pose: 0.969629
09/15 13:57:46 - mmengine - INFO - Epoch(train)  [82][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:00:49  time: 0.396552  data_time: 0.162504  memory: 12704  grad_norm: 0.127067  loss: 0.249021  loss_kpt: 0.249021  acc_pose: 0.743948
09/15 13:58:05 - mmengine - INFO - Epoch(train)  [82][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:00:29  time: 0.392982  data_time: 0.158815  memory: 12704  grad_norm: 0.090676  loss: 0.244393  loss_kpt: 0.244393  acc_pose: 0.861189
09/15 13:58:24 - mmengine - INFO - Epoch(train)  [72][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:19:43  time: 0.787032  data_time: 0.471693  memory: 16273  loss: 0.376491  loss_kpt: 0.376491  acc_pose: 0.942435
09/15 13:58:25 - mmengine - INFO - Epoch(train)  [82][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 6:00:10  time: 0.397493  data_time: 0.163016  memory: 12704  grad_norm: 0.122258  loss: 0.246724  loss_kpt: 0.246724  acc_pose: 0.752875
09/15 13:58:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:59:00 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 13:59:01 - mmengine - INFO - Epoch(train)  [83][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:59:34  time: 0.404599  data_time: 0.170167  memory: 12704  grad_norm: 0.104111  loss: 0.247733  loss_kpt: 0.247733  acc_pose: 0.786358
09/15 13:59:20 - mmengine - INFO - Epoch(train)  [83][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:59:13  time: 0.385842  data_time: 0.151844  memory: 12704  grad_norm: 0.124607  loss: 0.246106  loss_kpt: 0.246106  acc_pose: 0.757425
09/15 13:59:35 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 13:59:40 - mmengine - INFO - Epoch(train)  [73][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:18:29  time: 0.807605  data_time: 0.491741  memory: 16273  loss: 0.376408  loss_kpt: 0.376408  acc_pose: 0.977409
09/15 13:59:40 - mmengine - INFO - Epoch(train)  [83][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:58:53  time: 0.392176  data_time: 0.158771  memory: 12704  grad_norm: 0.137315  loss: 0.245801  loss_kpt: 0.245801  acc_pose: 0.793668
09/15 14:00:00 - mmengine - INFO - Epoch(train)  [83][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:58:33  time: 0.394061  data_time: 0.159864  memory: 12704  grad_norm: 0.113727  loss: 0.248395  loss_kpt: 0.248395  acc_pose: 0.820818
09/15 14:00:19 - mmengine - INFO - Epoch(train)  [73][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:17:50  time: 0.784274  data_time: 0.465867  memory: 16273  loss: 0.372890  loss_kpt: 0.372890  acc_pose: 0.950343
09/15 14:00:20 - mmengine - INFO - Epoch(train)  [83][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:58:14  time: 0.395215  data_time: 0.161353  memory: 12704  grad_norm: 0.111313  loss: 0.244348  loss_kpt: 0.244348  acc_pose: 0.801969
09/15 14:00:35 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:00:55 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:00:56 - mmengine - INFO - Epoch(train)  [84][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:57:39  time: 0.407084  data_time: 0.173232  memory: 12704  grad_norm: 0.120138  loss: 0.249782  loss_kpt: 0.249782  acc_pose: 0.785169
09/15 14:01:16 - mmengine - INFO - Epoch(train)  [84][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:57:19  time: 0.397833  data_time: 0.163218  memory: 12704  grad_norm: 0.126681  loss: 0.246256  loss_kpt: 0.246256  acc_pose: 0.784883
09/15 14:01:35 - mmengine - INFO - Epoch(train)  [84][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:56:59  time: 0.390913  data_time: 0.157697  memory: 12704  grad_norm: 0.140183  loss: 0.246280  loss_kpt: 0.246280  acc_pose: 0.780599
09/15 14:01:36 - mmengine - INFO - Epoch(train)  [74][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:16:36  time: 0.804022  data_time: 0.484737  memory: 16273  loss: 0.377561  loss_kpt: 0.377561  acc_pose: 0.976712
09/15 14:01:55 - mmengine - INFO - Epoch(train)  [84][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:56:40  time: 0.399264  data_time: 0.164683  memory: 12704  grad_norm: 0.106462  loss: 0.247294  loss_kpt: 0.247294  acc_pose: 0.816754
09/15 14:02:15 - mmengine - INFO - Epoch(train)  [74][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:15:57  time: 0.791980  data_time: 0.474979  memory: 16273  loss: 0.372663  loss_kpt: 0.372663  acc_pose: 0.962651
09/15 14:02:15 - mmengine - INFO - Epoch(train)  [84][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:56:21  time: 0.405903  data_time: 0.171513  memory: 12704  grad_norm: 0.110169  loss: 0.245797  loss_kpt: 0.245797  acc_pose: 0.794934
09/15 14:02:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:02:51 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:02:52 - mmengine - INFO - Epoch(train)  [85][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:55:47  time: 0.407442  data_time: 0.170310  memory: 12704  grad_norm: 0.105620  loss: 0.243362  loss_kpt: 0.243362  acc_pose: 0.820100
09/15 14:03:12 - mmengine - INFO - Epoch(train)  [85][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:55:27  time: 0.394720  data_time: 0.161062  memory: 12704  grad_norm: 0.104446  loss: 0.243189  loss_kpt: 0.243189  acc_pose: 0.849033
09/15 14:03:30 - mmengine - INFO - Epoch(train)  [75][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:14:41  time: 0.792245  data_time: 0.473278  memory: 16273  loss: 0.376558  loss_kpt: 0.376558  acc_pose: 0.952157
09/15 14:03:31 - mmengine - INFO - Epoch(train)  [85][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:55:07  time: 0.391224  data_time: 0.157318  memory: 12704  grad_norm: 0.124566  loss: 0.249505  loss_kpt: 0.249505  acc_pose: 0.789729
09/15 14:03:51 - mmengine - INFO - Epoch(train)  [85][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:54:47  time: 0.393154  data_time: 0.157088  memory: 12704  grad_norm: 0.110104  loss: 0.247678  loss_kpt: 0.247678  acc_pose: 0.793340
09/15 14:04:10 - mmengine - INFO - Epoch(train)  [85][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:54:26  time: 0.388137  data_time: 0.154071  memory: 12704  grad_norm: 0.091351  loss: 0.244089  loss_kpt: 0.244089  acc_pose: 0.843572
09/15 14:04:10 - mmengine - INFO - Epoch(train)  [75][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:14:03  time: 0.800107  data_time: 0.480598  memory: 16273  loss: 0.380273  loss_kpt: 0.380273  acc_pose: 0.959207
09/15 14:04:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:04:45 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:04:47 - mmengine - INFO - Epoch(train)  [86][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:53:52  time: 0.401116  data_time: 0.167290  memory: 12704  grad_norm: 0.104179  loss: 0.246106  loss_kpt: 0.246106  acc_pose: 0.833852
09/15 14:05:07 - mmengine - INFO - Epoch(train)  [86][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:53:33  time: 0.406368  data_time: 0.170137  memory: 12704  grad_norm: 0.100000  loss: 0.244582  loss_kpt: 0.244582  acc_pose: 0.823448
09/15 14:05:25 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:05:25 - mmengine - INFO - Epoch(train)  [76][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:12:47  time: 0.810329  data_time: 0.491510  memory: 16273  loss: 0.382358  loss_kpt: 0.382358  acc_pose: 0.972531
09/15 14:05:27 - mmengine - INFO - Epoch(train)  [86][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:53:14  time: 0.395379  data_time: 0.161748  memory: 12704  grad_norm: 0.123997  loss: 0.250078  loss_kpt: 0.250078  acc_pose: 0.839075
09/15 14:05:46 - mmengine - INFO - Epoch(train)  [86][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:52:53  time: 0.388567  data_time: 0.153530  memory: 12704  grad_norm: 0.141251  loss: 0.248642  loss_kpt: 0.248642  acc_pose: 0.748281
09/15 14:06:04 - mmengine - INFO - Epoch(train)  [76][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:12:05  time: 0.770371  data_time: 0.454913  memory: 16273  loss: 0.373842  loss_kpt: 0.373842  acc_pose: 0.954052
09/15 14:06:06 - mmengine - INFO - Epoch(train)  [86][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:52:33  time: 0.393151  data_time: 0.158689  memory: 12704  grad_norm: 0.124731  loss: 0.247134  loss_kpt: 0.247134  acc_pose: 0.845423
09/15 14:06:12 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:06:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:06:40 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:06:43 - mmengine - INFO - Epoch(train)  [87][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:51:59  time: 0.412791  data_time: 0.178600  memory: 12704  grad_norm: 0.136812  loss: 0.244901  loss_kpt: 0.244901  acc_pose: 0.827583
09/15 14:07:02 - mmengine - INFO - Epoch(train)  [87][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:51:39  time: 0.389171  data_time: 0.154309  memory: 12704  grad_norm: 0.110676  loss: 0.247354  loss_kpt: 0.247354  acc_pose: 0.777496
09/15 14:07:20 - mmengine - INFO - Epoch(train)  [77][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:10:51  time: 0.807543  data_time: 0.491737  memory: 16273  loss: 0.375193  loss_kpt: 0.375193  acc_pose: 0.942145
09/15 14:07:22 - mmengine - INFO - Epoch(train)  [87][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:51:19  time: 0.398511  data_time: 0.164105  memory: 12704  grad_norm: 0.104016  loss: 0.242993  loss_kpt: 0.242993  acc_pose: 0.874622
09/15 14:07:42 - mmengine - INFO - Epoch(train)  [87][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:51:00  time: 0.395823  data_time: 0.162199  memory: 12704  grad_norm: 0.111594  loss: 0.248596  loss_kpt: 0.248596  acc_pose: 0.873116
09/15 14:07:59 - mmengine - INFO - Epoch(train)  [77][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:10:10  time: 0.769315  data_time: 0.453483  memory: 16273  loss: 0.371397  loss_kpt: 0.371397  acc_pose: 0.961468
09/15 14:08:02 - mmengine - INFO - Epoch(train)  [87][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:50:40  time: 0.400159  data_time: 0.166777  memory: 12704  grad_norm: 0.130242  loss: 0.247229  loss_kpt: 0.247229  acc_pose: 0.774789
09/15 14:08:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:08:34 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:08:38 - mmengine - INFO - Epoch(train)  [88][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:50:05  time: 0.400781  data_time: 0.166840  memory: 12704  grad_norm: 0.103731  loss: 0.244036  loss_kpt: 0.244036  acc_pose: 0.833682
09/15 14:08:57 - mmengine - INFO - Epoch(train)  [88][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:49:44  time: 0.387289  data_time: 0.151764  memory: 12704  grad_norm: 0.103398  loss: 0.242823  loss_kpt: 0.242823  acc_pose: 0.887870
09/15 14:09:14 - mmengine - INFO - Epoch(train)  [78][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:08:54  time: 0.797743  data_time: 0.481363  memory: 16273  loss: 0.371338  loss_kpt: 0.371338  acc_pose: 0.922347
09/15 14:09:17 - mmengine - INFO - Epoch(train)  [88][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:49:25  time: 0.399456  data_time: 0.165673  memory: 12704  grad_norm: 0.129348  loss: 0.247824  loss_kpt: 0.247824  acc_pose: 0.821552
09/15 14:09:37 - mmengine - INFO - Epoch(train)  [88][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:49:05  time: 0.392254  data_time: 0.159165  memory: 12704  grad_norm: 0.102982  loss: 0.247678  loss_kpt: 0.247678  acc_pose: 0.800299
09/15 14:09:53 - mmengine - INFO - Epoch(train)  [78][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:08:14  time: 0.777064  data_time: 0.460556  memory: 16273  loss: 0.371615  loss_kpt: 0.371615  acc_pose: 0.966240
09/15 14:09:57 - mmengine - INFO - Epoch(train)  [88][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:48:47  time: 0.407350  data_time: 0.173768  memory: 12704  grad_norm: 0.111391  loss: 0.243453  loss_kpt: 0.243453  acc_pose: 0.745199
09/15 14:10:13 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:10:28 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:10:33 - mmengine - INFO - Epoch(train)  [89][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:48:10  time: 0.403823  data_time: 0.169426  memory: 12704  grad_norm: 0.120898  loss: 0.242452  loss_kpt: 0.242452  acc_pose: 0.758727
09/15 14:10:53 - mmengine - INFO - Epoch(train)  [89][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:47:50  time: 0.398098  data_time: 0.163752  memory: 12704  grad_norm: 0.141699  loss: 0.245142  loss_kpt: 0.245142  acc_pose: 0.855981
09/15 14:11:08 - mmengine - INFO - Epoch(train)  [79][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:06:55  time: 0.787257  data_time: 0.468481  memory: 16273  loss: 0.370868  loss_kpt: 0.370868  acc_pose: 0.949790
09/15 14:11:12 - mmengine - INFO - Epoch(train)  [89][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:47:30  time: 0.391244  data_time: 0.155203  memory: 12704  grad_norm: 0.125989  loss: 0.246794  loss_kpt: 0.246794  acc_pose: 0.870207
09/15 14:11:33 - mmengine - INFO - Epoch(train)  [89][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:47:12  time: 0.405726  data_time: 0.172009  memory: 12704  grad_norm: 0.108233  loss: 0.245827  loss_kpt: 0.245827  acc_pose: 0.814625
09/15 14:11:47 - mmengine - INFO - Epoch(train)  [79][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:06:17  time: 0.795459  data_time: 0.480237  memory: 16273  loss: 0.375878  loss_kpt: 0.375878  acc_pose: 0.945465
09/15 14:11:53 - mmengine - INFO - Epoch(train)  [89][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:46:52  time: 0.398729  data_time: 0.164815  memory: 12704  grad_norm: 0.104448  loss: 0.242002  loss_kpt: 0.242002  acc_pose: 0.796920
09/15 14:12:08 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:12:23 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:12:28 - mmengine - INFO - Epoch(train)  [90][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:46:15  time: 0.406063  data_time: 0.168765  memory: 12704  grad_norm: 0.107192  loss: 0.247667  loss_kpt: 0.247667  acc_pose: 0.815653
09/15 14:12:48 - mmengine - INFO - Epoch(train)  [90][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:45:57  time: 0.406746  data_time: 0.172818  memory: 12704  grad_norm: 0.094835  loss: 0.244914  loss_kpt: 0.244914  acc_pose: 0.833522
09/15 14:12:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:13:03 - mmengine - INFO - Epoch(train)  [80][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:05:01  time: 0.799128  data_time: 0.482506  memory: 16273  loss: 0.373674  loss_kpt: 0.373674  acc_pose: 0.964863
09/15 14:13:08 - mmengine - INFO - Epoch(train)  [90][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:45:36  time: 0.386666  data_time: 0.152608  memory: 12704  grad_norm: 0.114116  loss: 0.249654  loss_kpt: 0.249654  acc_pose: 0.833521
09/15 14:13:27 - mmengine - INFO - Epoch(train)  [90][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:45:16  time: 0.391772  data_time: 0.157560  memory: 12704  grad_norm: 0.126262  loss: 0.245905  loss_kpt: 0.245905  acc_pose: 0.774430
09/15 14:13:42 - mmengine - INFO - Epoch(train)  [80][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:04:22  time: 0.787413  data_time: 0.469630  memory: 16273  loss: 0.374937  loss_kpt: 0.374937  acc_pose: 0.957964
09/15 14:13:47 - mmengine - INFO - Epoch(train)  [90][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:44:56  time: 0.392912  data_time: 0.158752  memory: 12704  grad_norm: 0.113811  loss: 0.242840  loss_kpt: 0.242840  acc_pose: 0.750137
09/15 14:14:03 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:14:03 - mmengine - INFO - Saving checkpoint at 90 epochs
09/15 14:14:18 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:14:18 - mmengine - INFO - Saving checkpoint at 80 epochs
09/15 14:14:25 - mmengine - INFO - Epoch(train)  [91][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:44:21  time: 0.407877  data_time: 0.174678  memory: 12704  grad_norm: 0.119745  loss: 0.245116  loss_kpt: 0.245116  acc_pose: 0.828189
09/15 14:14:45 - mmengine - INFO - Epoch(train)  [91][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:44:01  time: 0.398120  data_time: 0.163149  memory: 12704  grad_norm: 0.117162  loss: 0.244506  loss_kpt: 0.244506  acc_pose: 0.759038
09/15 14:14:59 - mmengine - INFO - Epoch(train)  [81][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:03:06  time: 0.789137  data_time: 0.470066  memory: 16273  loss: 0.375034  loss_kpt: 0.375034  acc_pose: 0.961947
09/15 14:15:04 - mmengine - INFO - Epoch(train)  [91][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:43:41  time: 0.389097  data_time: 0.155312  memory: 12704  grad_norm: 0.102872  loss: 0.247273  loss_kpt: 0.247273  acc_pose: 0.858480
09/15 14:15:24 - mmengine - INFO - Epoch(train)  [91][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:43:21  time: 0.394607  data_time: 0.160965  memory: 12704  grad_norm: 0.093755  loss: 0.242848  loss_kpt: 0.242848  acc_pose: 0.807603
09/15 14:15:38 - mmengine - INFO - Epoch(train)  [81][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:02:27  time: 0.787896  data_time: 0.468555  memory: 16273  loss: 0.373836  loss_kpt: 0.373836  acc_pose: 0.959944
09/15 14:15:44 - mmengine - INFO - Epoch(train)  [91][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:43:02  time: 0.397280  data_time: 0.160235  memory: 12704  grad_norm: 0.115577  loss: 0.246566  loss_kpt: 0.246566  acc_pose: 0.865543
09/15 14:15:59 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:16:14 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:16:20 - mmengine - INFO - Epoch(train)  [92][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:42:26  time: 0.402475  data_time: 0.168594  memory: 12704  grad_norm: 0.111550  loss: 0.241430  loss_kpt: 0.241430  acc_pose: 0.812221
09/15 14:16:39 - mmengine - INFO - Epoch(train)  [92][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:42:06  time: 0.395539  data_time: 0.158923  memory: 12704  grad_norm: 0.114670  loss: 0.247845  loss_kpt: 0.247845  acc_pose: 0.840713
09/15 14:16:54 - mmengine - INFO - Epoch(train)  [82][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:01:12  time: 0.801350  data_time: 0.484565  memory: 16273  loss: 0.371103  loss_kpt: 0.371103  acc_pose: 0.952430
09/15 14:16:59 - mmengine - INFO - Epoch(train)  [92][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:41:47  time: 0.395256  data_time: 0.162059  memory: 12704  grad_norm: 0.107359  loss: 0.243943  loss_kpt: 0.243943  acc_pose: 0.859264
09/15 14:17:19 - mmengine - INFO - Epoch(train)  [92][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:41:26  time: 0.389274  data_time: 0.156189  memory: 12704  grad_norm: 0.114277  loss: 0.247932  loss_kpt: 0.247932  acc_pose: 0.842001
09/15 14:17:33 - mmengine - INFO - Epoch(train)  [82][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 6:00:32  time: 0.781061  data_time: 0.462222  memory: 16273  loss: 0.372512  loss_kpt: 0.372512  acc_pose: 0.975706
09/15 14:17:38 - mmengine - INFO - Epoch(train)  [92][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:41:07  time: 0.396557  data_time: 0.162730  memory: 12704  grad_norm: 0.118921  loss: 0.247275  loss_kpt: 0.247275  acc_pose: 0.829056
09/15 14:17:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:18:09 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:18:15 - mmengine - INFO - Epoch(train)  [93][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:40:31  time: 0.397667  data_time: 0.163698  memory: 12704  grad_norm: 0.120499  loss: 0.245087  loss_kpt: 0.245087  acc_pose: 0.789444
09/15 14:18:31 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:18:34 - mmengine - INFO - Epoch(train)  [93][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:40:11  time: 0.394709  data_time: 0.158085  memory: 12704  grad_norm: 0.133217  loss: 0.245659  loss_kpt: 0.245659  acc_pose: 0.812390
09/15 14:18:49 - mmengine - INFO - Epoch(train)  [83][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:59:17  time: 0.801305  data_time: 0.485958  memory: 16273  loss: 0.376082  loss_kpt: 0.376082  acc_pose: 0.957857
09/15 14:18:53 - mmengine - INFO - Epoch(train)  [93][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:39:50  time: 0.380030  data_time: 0.145904  memory: 12704  grad_norm: 0.116584  loss: 0.241321  loss_kpt: 0.241321  acc_pose: 0.875332
09/15 14:19:13 - mmengine - INFO - Epoch(train)  [93][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:39:30  time: 0.391894  data_time: 0.158114  memory: 12704  grad_norm: 0.105276  loss: 0.246423  loss_kpt: 0.246423  acc_pose: 0.735541
09/15 14:19:24 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:19:28 - mmengine - INFO - Epoch(train)  [83][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:58:37  time: 0.786625  data_time: 0.469991  memory: 16273  loss: 0.376049  loss_kpt: 0.376049  acc_pose: 0.965620
09/15 14:19:33 - mmengine - INFO - Epoch(train)  [93][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:39:11  time: 0.398062  data_time: 0.161387  memory: 12704  grad_norm: 0.114280  loss: 0.244450  loss_kpt: 0.244450  acc_pose: 0.847953
09/15 14:19:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:20:04 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:20:10 - mmengine - INFO - Epoch(train)  [94][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:38:37  time: 0.406564  data_time: 0.172093  memory: 12704  grad_norm: 0.099118  loss: 0.242954  loss_kpt: 0.242954  acc_pose: 0.883415
09/15 14:20:29 - mmengine - INFO - Epoch(train)  [94][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:38:16  time: 0.388374  data_time: 0.154706  memory: 12704  grad_norm: 0.125936  loss: 0.246655  loss_kpt: 0.246655  acc_pose: 0.834270
09/15 14:20:45 - mmengine - INFO - Epoch(train)  [84][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:57:24  time: 0.808433  data_time: 0.491826  memory: 16273  loss: 0.371003  loss_kpt: 0.371003  acc_pose: 0.943968
09/15 14:20:49 - mmengine - INFO - Epoch(train)  [94][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:37:56  time: 0.392496  data_time: 0.157611  memory: 12704  grad_norm: 0.105512  loss: 0.244421  loss_kpt: 0.244421  acc_pose: 0.757574
09/15 14:21:08 - mmengine - INFO - Epoch(train)  [94][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:37:36  time: 0.387611  data_time: 0.153235  memory: 12704  grad_norm: 0.122455  loss: 0.243904  loss_kpt: 0.243904  acc_pose: 0.846723
09/15 14:21:24 - mmengine - INFO - Epoch(train)  [84][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:56:44  time: 0.777533  data_time: 0.461365  memory: 16273  loss: 0.372921  loss_kpt: 0.372921  acc_pose: 0.963851
09/15 14:21:28 - mmengine - INFO - Epoch(train)  [94][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:37:17  time: 0.406609  data_time: 0.172376  memory: 12704  grad_norm: 0.121595  loss: 0.243772  loss_kpt: 0.243772  acc_pose: 0.872462
09/15 14:21:44 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:21:59 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:22:04 - mmengine - INFO - Epoch(train)  [95][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:36:41  time: 0.403897  data_time: 0.169924  memory: 12704  grad_norm: 0.136245  loss: 0.246805  loss_kpt: 0.246805  acc_pose: 0.825578
09/15 14:22:24 - mmengine - INFO - Epoch(train)  [95][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:36:21  time: 0.391417  data_time: 0.157133  memory: 12704  grad_norm: 0.130634  loss: 0.245569  loss_kpt: 0.245569  acc_pose: 0.765698
09/15 14:22:40 - mmengine - INFO - Epoch(train)  [85][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:55:29  time: 0.801915  data_time: 0.487020  memory: 16273  loss: 0.373893  loss_kpt: 0.373893  acc_pose: 0.976375
09/15 14:22:44 - mmengine - INFO - Epoch(train)  [95][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:36:02  time: 0.397150  data_time: 0.164274  memory: 12704  grad_norm: 0.105081  loss: 0.243709  loss_kpt: 0.243709  acc_pose: 0.865855
09/15 14:23:03 - mmengine - INFO - Epoch(train)  [95][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:35:42  time: 0.390435  data_time: 0.157260  memory: 12704  grad_norm: 0.114040  loss: 0.239331  loss_kpt: 0.239331  acc_pose: 0.709057
09/15 14:23:19 - mmengine - INFO - Epoch(train)  [85][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:54:49  time: 0.780406  data_time: 0.464553  memory: 16273  loss: 0.377487  loss_kpt: 0.377487  acc_pose: 0.974485
09/15 14:23:23 - mmengine - INFO - Epoch(train)  [95][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:35:22  time: 0.398933  data_time: 0.165339  memory: 12704  grad_norm: 0.113036  loss: 0.244811  loss_kpt: 0.244811  acc_pose: 0.844434
09/15 14:23:39 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:23:55 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:24:00 - mmengine - INFO - Epoch(train)  [96][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:34:48  time: 0.413016  data_time: 0.178955  memory: 12704  grad_norm: 0.090163  loss: 0.243494  loss_kpt: 0.243494  acc_pose: 0.813602
09/15 14:24:19 - mmengine - INFO - Epoch(train)  [96][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:34:27  time: 0.384857  data_time: 0.151003  memory: 12704  grad_norm: 0.105631  loss: 0.244409  loss_kpt: 0.244409  acc_pose: 0.825737
09/15 14:24:34 - mmengine - INFO - Epoch(train)  [86][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:53:34  time: 0.792421  data_time: 0.476948  memory: 16273  loss: 0.371164  loss_kpt: 0.371164  acc_pose: 0.974829
09/15 14:24:40 - mmengine - INFO - Epoch(train)  [96][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:34:08  time: 0.408878  data_time: 0.174623  memory: 12704  grad_norm: 0.123284  loss: 0.245444  loss_kpt: 0.245444  acc_pose: 0.818821
09/15 14:24:59 - mmengine - INFO - Epoch(train)  [96][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:33:48  time: 0.384157  data_time: 0.151009  memory: 12704  grad_norm: 0.129329  loss: 0.244173  loss_kpt: 0.244173  acc_pose: 0.771290
09/15 14:25:14 - mmengine - INFO - Epoch(train)  [86][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:52:56  time: 0.801190  data_time: 0.485912  memory: 16273  loss: 0.373604  loss_kpt: 0.373604  acc_pose: 0.974588
09/15 14:25:19 - mmengine - INFO - Epoch(train)  [96][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:33:28  time: 0.396541  data_time: 0.163017  memory: 12704  grad_norm: 0.106451  loss: 0.243685  loss_kpt: 0.243685  acc_pose: 0.823970
09/15 14:25:35 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:25:50 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:25:55 - mmengine - INFO - Epoch(train)  [97][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:32:53  time: 0.413264  data_time: 0.178505  memory: 12704  grad_norm: 0.108896  loss: 0.242115  loss_kpt: 0.242115  acc_pose: 0.754313
09/15 14:26:01 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:26:15 - mmengine - INFO - Epoch(train)  [97][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:32:34  time: 0.396528  data_time: 0.162807  memory: 12704  grad_norm: 0.125597  loss: 0.244590  loss_kpt: 0.244590  acc_pose: 0.841727
09/15 14:26:30 - mmengine - INFO - Epoch(train)  [87][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:51:41  time: 0.810494  data_time: 0.495368  memory: 16273  loss: 0.370149  loss_kpt: 0.370149  acc_pose: 0.972527
09/15 14:26:35 - mmengine - INFO - Epoch(train)  [97][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:32:14  time: 0.397257  data_time: 0.162094  memory: 12704  grad_norm: 0.113374  loss: 0.241649  loss_kpt: 0.241649  acc_pose: 0.842734
09/15 14:26:54 - mmengine - INFO - Epoch(train)  [97][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:31:54  time: 0.384646  data_time: 0.147557  memory: 12704  grad_norm: 0.109900  loss: 0.248527  loss_kpt: 0.248527  acc_pose: 0.784509
09/15 14:27:10 - mmengine - INFO - Epoch(train)  [87][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:51:03  time: 0.798384  data_time: 0.481859  memory: 16273  loss: 0.370364  loss_kpt: 0.370364  acc_pose: 0.961224
09/15 14:27:14 - mmengine - INFO - Epoch(train)  [97][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:31:33  time: 0.389935  data_time: 0.156286  memory: 12704  grad_norm: 0.110880  loss: 0.244626  loss_kpt: 0.244626  acc_pose: 0.832371
09/15 14:27:29 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:27:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:27:50 - mmengine - INFO - Epoch(train)  [98][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:30:58  time: 0.407657  data_time: 0.173513  memory: 12704  grad_norm: 0.093255  loss: 0.242377  loss_kpt: 0.242377  acc_pose: 0.812139
09/15 14:28:10 - mmengine - INFO - Epoch(train)  [98][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:30:39  time: 0.402168  data_time: 0.168391  memory: 12704  grad_norm: 0.096262  loss: 0.238150  loss_kpt: 0.238150  acc_pose: 0.839561
09/15 14:28:25 - mmengine - INFO - Epoch(train)  [88][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:49:47  time: 0.788908  data_time: 0.474453  memory: 16273  loss: 0.369793  loss_kpt: 0.369793  acc_pose: 0.962699
09/15 14:28:30 - mmengine - INFO - Epoch(train)  [98][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:30:19  time: 0.397867  data_time: 0.160404  memory: 12704  grad_norm: 0.124352  loss: 0.246014  loss_kpt: 0.246014  acc_pose: 0.895873
09/15 14:28:49 - mmengine - INFO - Epoch(train)  [98][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:29:58  time: 0.381665  data_time: 0.146854  memory: 12704  grad_norm: 0.138877  loss: 0.244945  loss_kpt: 0.244945  acc_pose: 0.862082
09/15 14:29:05 - mmengine - INFO - Epoch(train)  [88][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:49:08  time: 0.793119  data_time: 0.477147  memory: 16273  loss: 0.371581  loss_kpt: 0.371581  acc_pose: 0.974358
09/15 14:29:08 - mmengine - INFO - Epoch(train)  [98][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:29:38  time: 0.388419  data_time: 0.155099  memory: 12704  grad_norm: 0.137770  loss: 0.246320  loss_kpt: 0.246320  acc_pose: 0.831042
09/15 14:29:24 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:29:40 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:29:45 - mmengine - INFO - Epoch(train)  [99][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:29:03  time: 0.408154  data_time: 0.170847  memory: 12704  grad_norm: 0.111307  loss: 0.242213  loss_kpt: 0.242213  acc_pose: 0.884806
09/15 14:30:04 - mmengine - INFO - Epoch(train)  [99][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:28:43  time: 0.388592  data_time: 0.154251  memory: 12704  grad_norm: 0.111200  loss: 0.240741  loss_kpt: 0.240741  acc_pose: 0.843481
09/15 14:30:21 - mmengine - INFO - Epoch(train)  [89][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:47:53  time: 0.804714  data_time: 0.489391  memory: 16273  loss: 0.371270  loss_kpt: 0.371270  acc_pose: 0.977785
09/15 14:30:24 - mmengine - INFO - Epoch(train)  [99][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:28:22  time: 0.387484  data_time: 0.150862  memory: 12704  grad_norm: 0.093621  loss: 0.244341  loss_kpt: 0.244341  acc_pose: 0.731166
09/15 14:30:44 - mmengine - INFO - Epoch(train)  [99][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:28:03  time: 0.398700  data_time: 0.164714  memory: 12704  grad_norm: 0.117952  loss: 0.243845  loss_kpt: 0.243845  acc_pose: 0.839689
09/15 14:31:00 - mmengine - INFO - Epoch(train)  [89][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:47:14  time: 0.793876  data_time: 0.476604  memory: 16273  loss: 0.372721  loss_kpt: 0.372721  acc_pose: 0.943940
09/15 14:31:03 - mmengine - INFO - Epoch(train)  [99][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:27:43  time: 0.395415  data_time: 0.161304  memory: 12704  grad_norm: 0.121544  loss: 0.246720  loss_kpt: 0.246720  acc_pose: 0.829610
09/15 14:31:19 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:31:36 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:31:40 - mmengine - INFO - Epoch(train) [100][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:27:08  time: 0.408420  data_time: 0.174425  memory: 12704  grad_norm: 0.123313  loss: 0.244240  loss_kpt: 0.244240  acc_pose: 0.861695
09/15 14:31:42 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:31:59 - mmengine - INFO - Epoch(train) [100][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:26:48  time: 0.389288  data_time: 0.155271  memory: 12704  grad_norm: 0.121367  loss: 0.245844  loss_kpt: 0.245844  acc_pose: 0.812834
09/15 14:32:16 - mmengine - INFO - Epoch(train)  [90][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:45:59  time: 0.807823  data_time: 0.488318  memory: 16273  loss: 0.372005  loss_kpt: 0.372005  acc_pose: 0.979318
09/15 14:32:19 - mmengine - INFO - Epoch(train) [100][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:26:28  time: 0.392501  data_time: 0.157558  memory: 12704  grad_norm: 0.105842  loss: 0.241775  loss_kpt: 0.241775  acc_pose: 0.800206
09/15 14:32:35 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:32:38 - mmengine - INFO - Epoch(train) [100][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:26:08  time: 0.390953  data_time: 0.154612  memory: 12704  grad_norm: 0.115657  loss: 0.241987  loss_kpt: 0.241987  acc_pose: 0.758688
09/15 14:32:55 - mmengine - INFO - Epoch(train)  [90][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:45:18  time: 0.771408  data_time: 0.454804  memory: 16273  loss: 0.373446  loss_kpt: 0.373446  acc_pose: 0.960224
09/15 14:32:58 - mmengine - INFO - Epoch(train) [100][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:25:48  time: 0.391913  data_time: 0.157550  memory: 12704  grad_norm: 0.115107  loss: 0.243872  loss_kpt: 0.243872  acc_pose: 0.822350
09/15 14:33:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:33:14 - mmengine - INFO - Saving checkpoint at 100 epochs
09/15 14:33:26 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.684
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.944
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.780
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.684
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.772
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.968
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.860
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.772
09/15 14:33:26 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 14:33:26 - mmengine - INFO - Evaluating AUC...
09/15 14:33:26 - mmengine - INFO - Evaluating NME...
09/15 14:33:26 - mmengine - INFO - Epoch(val) [100][38/38]    coco/AP: 0.683775  coco/AP .5: 0.943982  coco/AP .75: 0.779532  coco/AP (L): -1.000000  coco/AR: 0.683775  coco/AR .5: 0.771717  coco/AR .75: 0.968013  coco/AR (L): 0.860269  PCK: 0.895975  AUC: 0.535580  NME: 0.390041  data_time: 0.147818  time: 0.261401
09/15 14:33:26 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/3/best_coco_AP_epoch_50.pth is removed
09/15 14:33:27 - mmengine - INFO - The best checkpoint with 0.6838 coco/AP at 100 epoch is saved to best_coco_AP_epoch_100.pth.
09/15 14:33:31 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:33:31 - mmengine - INFO - Saving checkpoint at 90 epochs
09/15 14:33:50 - mmengine - INFO - Epoch(train) [101][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:25:12  time: 0.407543  data_time: 0.173654  memory: 12704  grad_norm: 0.110315  loss: 0.243793  loss_kpt: 0.243793  acc_pose: 0.900273
09/15 14:34:10 - mmengine - INFO - Epoch(train) [101][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:24:53  time: 0.396332  data_time: 0.162336  memory: 12704  grad_norm: 0.100968  loss: 0.244777  loss_kpt: 0.244777  acc_pose: 0.819578
09/15 14:34:12 - mmengine - INFO - Epoch(train)  [91][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:44:04  time: 0.802990  data_time: 0.483977  memory: 16273  loss: 0.371682  loss_kpt: 0.371682  acc_pose: 0.966257
09/15 14:34:29 - mmengine - INFO - Epoch(train) [101][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:24:33  time: 0.390250  data_time: 0.153874  memory: 12704  grad_norm: 0.110093  loss: 0.237077  loss_kpt: 0.237077  acc_pose: 0.837049
09/15 14:34:49 - mmengine - INFO - Epoch(train) [101][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:24:12  time: 0.389783  data_time: 0.155530  memory: 12704  grad_norm: 0.112746  loss: 0.246222  loss_kpt: 0.246222  acc_pose: 0.835380
09/15 14:34:51 - mmengine - INFO - Epoch(train)  [91][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:43:24  time: 0.784303  data_time: 0.467863  memory: 16273  loss: 0.372910  loss_kpt: 0.372910  acc_pose: 0.963729
09/15 14:35:09 - mmengine - INFO - Epoch(train) [101][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:23:53  time: 0.402579  data_time: 0.168801  memory: 12704  grad_norm: 0.119849  loss: 0.241309  loss_kpt: 0.241309  acc_pose: 0.850822
09/15 14:35:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:35:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:35:45 - mmengine - INFO - Epoch(train) [102][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:23:18  time: 0.403327  data_time: 0.166119  memory: 12704  grad_norm: 0.094173  loss: 0.245110  loss_kpt: 0.245110  acc_pose: 0.824165
09/15 14:36:06 - mmengine - INFO - Epoch(train) [102][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:23:00  time: 0.408527  data_time: 0.174904  memory: 12704  grad_norm: 0.122020  loss: 0.242009  loss_kpt: 0.242009  acc_pose: 0.839769
09/15 14:36:07 - mmengine - INFO - Epoch(train)  [92][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:42:08  time: 0.803806  data_time: 0.489434  memory: 16273  loss: 0.368669  loss_kpt: 0.368669  acc_pose: 0.962610
09/15 14:36:26 - mmengine - INFO - Epoch(train) [102][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:22:40  time: 0.396003  data_time: 0.162065  memory: 12704  grad_norm: 0.112605  loss: 0.241408  loss_kpt: 0.241408  acc_pose: 0.895505
09/15 14:36:45 - mmengine - INFO - Epoch(train) [102][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:22:20  time: 0.390572  data_time: 0.155561  memory: 12704  grad_norm: 0.109846  loss: 0.244809  loss_kpt: 0.244809  acc_pose: 0.787800
09/15 14:36:46 - mmengine - INFO - Epoch(train)  [92][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:41:29  time: 0.782083  data_time: 0.465781  memory: 16273  loss: 0.372353  loss_kpt: 0.372353  acc_pose: 0.964438
09/15 14:37:05 - mmengine - INFO - Epoch(train) [102][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:22:00  time: 0.391075  data_time: 0.155987  memory: 12704  grad_norm: 0.105976  loss: 0.246640  loss_kpt: 0.246640  acc_pose: 0.754946
09/15 14:37:20 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:37:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:37:41 - mmengine - INFO - Epoch(train) [103][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:21:24  time: 0.408123  data_time: 0.173726  memory: 12704  grad_norm: 0.115681  loss: 0.244938  loss_kpt: 0.244938  acc_pose: 0.744131
09/15 14:38:01 - mmengine - INFO - Epoch(train)  [93][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:40:12  time: 0.797955  data_time: 0.482199  memory: 16273  loss: 0.373446  loss_kpt: 0.373446  acc_pose: 0.960056
09/15 14:38:01 - mmengine - INFO - Epoch(train) [103][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:21:06  time: 0.411326  data_time: 0.175953  memory: 12704  grad_norm: 0.116563  loss: 0.241989  loss_kpt: 0.241989  acc_pose: 0.787819
09/15 14:38:21 - mmengine - INFO - Epoch(train) [103][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:20:46  time: 0.393641  data_time: 0.159679  memory: 12704  grad_norm: 0.106136  loss: 0.245738  loss_kpt: 0.245738  acc_pose: 0.776160
09/15 14:38:40 - mmengine - INFO - Epoch(train)  [93][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:39:32  time: 0.782447  data_time: 0.466832  memory: 16273  loss: 0.370897  loss_kpt: 0.370897  acc_pose: 0.941713
09/15 14:38:41 - mmengine - INFO - Epoch(train) [103][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:20:26  time: 0.391150  data_time: 0.154272  memory: 12704  grad_norm: 0.136874  loss: 0.245419  loss_kpt: 0.245419  acc_pose: 0.853476
09/15 14:39:00 - mmengine - INFO - Epoch(train) [103][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:20:06  time: 0.386246  data_time: 0.152210  memory: 12704  grad_norm: 0.123064  loss: 0.245093  loss_kpt: 0.245093  acc_pose: 0.850560
09/15 14:39:16 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:39:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:39:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:39:36 - mmengine - INFO - Epoch(train) [104][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:19:30  time: 0.404811  data_time: 0.169987  memory: 12704  grad_norm: 0.102547  loss: 0.241307  loss_kpt: 0.241307  acc_pose: 0.864172
09/15 14:39:55 - mmengine - INFO - Epoch(train) [104][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:19:10  time: 0.386143  data_time: 0.152074  memory: 12704  grad_norm: 0.124202  loss: 0.245923  loss_kpt: 0.245923  acc_pose: 0.811946
09/15 14:39:56 - mmengine - INFO - Epoch(train)  [94][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:38:16  time: 0.798871  data_time: 0.482508  memory: 16273  loss: 0.369701  loss_kpt: 0.369701  acc_pose: 0.947512
09/15 14:40:14 - mmengine - INFO - Epoch(train) [104][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:18:49  time: 0.379983  data_time: 0.146879  memory: 12704  grad_norm: 0.111825  loss: 0.240123  loss_kpt: 0.240123  acc_pose: 0.750222
09/15 14:40:34 - mmengine - INFO - Epoch(train) [104][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:18:29  time: 0.393939  data_time: 0.160881  memory: 12704  grad_norm: 0.086907  loss: 0.244025  loss_kpt: 0.244025  acc_pose: 0.801669
09/15 14:40:35 - mmengine - INFO - Epoch(train)  [94][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:37:37  time: 0.785053  data_time: 0.465012  memory: 16273  loss: 0.371332  loss_kpt: 0.371332  acc_pose: 0.962135
09/15 14:40:54 - mmengine - INFO - Epoch(train) [104][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:18:09  time: 0.390836  data_time: 0.155847  memory: 12704  grad_norm: 0.136084  loss: 0.246196  loss_kpt: 0.246196  acc_pose: 0.832175
09/15 14:41:10 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:41:10 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:41:30 - mmengine - INFO - Epoch(train) [105][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:17:33  time: 0.405759  data_time: 0.172333  memory: 12704  grad_norm: 0.120876  loss: 0.244508  loss_kpt: 0.244508  acc_pose: 0.872688
09/15 14:41:50 - mmengine - INFO - Epoch(train) [105][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:17:13  time: 0.392367  data_time: 0.158001  memory: 12704  grad_norm: 0.088168  loss: 0.243025  loss_kpt: 0.243025  acc_pose: 0.794610
09/15 14:41:50 - mmengine - INFO - Epoch(train)  [95][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:36:21  time: 0.796494  data_time: 0.479321  memory: 16273  loss: 0.374909  loss_kpt: 0.374909  acc_pose: 0.971982
09/15 14:42:09 - mmengine - INFO - Epoch(train) [105][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:16:53  time: 0.392751  data_time: 0.159290  memory: 12704  grad_norm: 0.105683  loss: 0.239186  loss_kpt: 0.239186  acc_pose: 0.887712
09/15 14:42:29 - mmengine - INFO - Epoch(train) [105][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:16:34  time: 0.392447  data_time: 0.154944  memory: 12704  grad_norm: 0.107208  loss: 0.244096  loss_kpt: 0.244096  acc_pose: 0.872470
09/15 14:42:30 - mmengine - INFO - Epoch(train)  [95][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:35:43  time: 0.797694  data_time: 0.479360  memory: 16273  loss: 0.369097  loss_kpt: 0.369097  acc_pose: 0.957254
09/15 14:42:48 - mmengine - INFO - Epoch(train) [105][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:16:14  time: 0.391794  data_time: 0.158031  memory: 12704  grad_norm: 0.104746  loss: 0.243929  loss_kpt: 0.243929  acc_pose: 0.846649
09/15 14:43:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:43:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:43:25 - mmengine - INFO - Epoch(train) [106][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:15:38  time: 0.408372  data_time: 0.174035  memory: 12704  grad_norm: 0.117150  loss: 0.243631  loss_kpt: 0.243631  acc_pose: 0.800477
09/15 14:43:45 - mmengine - INFO - Epoch(train) [106][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:15:19  time: 0.399633  data_time: 0.165617  memory: 12704  grad_norm: 0.126729  loss: 0.242439  loss_kpt: 0.242439  acc_pose: 0.829510
09/15 14:43:45 - mmengine - INFO - Epoch(train)  [96][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:34:26  time: 0.799665  data_time: 0.480571  memory: 16273  loss: 0.370716  loss_kpt: 0.370716  acc_pose: 0.953827
09/15 14:44:05 - mmengine - INFO - Epoch(train) [106][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:14:59  time: 0.395331  data_time: 0.161215  memory: 12704  grad_norm: 0.107863  loss: 0.241912  loss_kpt: 0.241912  acc_pose: 0.845418
09/15 14:44:24 - mmengine - INFO - Epoch(train) [106][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:14:39  time: 0.387148  data_time: 0.152860  memory: 12704  grad_norm: 0.121944  loss: 0.237587  loss_kpt: 0.237587  acc_pose: 0.768675
09/15 14:44:24 - mmengine - INFO - Epoch(train)  [96][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:33:47  time: 0.786409  data_time: 0.471354  memory: 16273  loss: 0.372585  loss_kpt: 0.372585  acc_pose: 0.971217
09/15 14:44:44 - mmengine - INFO - Epoch(train) [106][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:14:19  time: 0.394366  data_time: 0.157131  memory: 12704  grad_norm: 0.113200  loss: 0.246155  loss_kpt: 0.246155  acc_pose: 0.849468
09/15 14:44:48 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:45:00 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:45:01 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:45:20 - mmengine - INFO - Epoch(train) [107][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:13:44  time: 0.411524  data_time: 0.177086  memory: 12704  grad_norm: 0.114927  loss: 0.241038  loss_kpt: 0.241038  acc_pose: 0.771076
09/15 14:45:40 - mmengine - INFO - Epoch(train) [107][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:13:25  time: 0.396274  data_time: 0.162136  memory: 12704  grad_norm: 0.107554  loss: 0.238977  loss_kpt: 0.238977  acc_pose: 0.894676
09/15 14:45:41 - mmengine - INFO - Epoch(train)  [97][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:32:33  time: 0.807592  data_time: 0.491072  memory: 16273  loss: 0.370052  loss_kpt: 0.370052  acc_pose: 0.957045
09/15 14:46:00 - mmengine - INFO - Epoch(train) [107][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:13:04  time: 0.389698  data_time: 0.155789  memory: 12704  grad_norm: 0.102117  loss: 0.242552  loss_kpt: 0.242552  acc_pose: 0.854624
09/15 14:46:01 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:46:19 - mmengine - INFO - Epoch(train) [107][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:12:44  time: 0.387576  data_time: 0.154737  memory: 12704  grad_norm: 0.119430  loss: 0.245972  loss_kpt: 0.245972  acc_pose: 0.869337
09/15 14:46:20 - mmengine - INFO - Epoch(train)  [97][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:31:53  time: 0.778402  data_time: 0.461623  memory: 16273  loss: 0.371687  loss_kpt: 0.371687  acc_pose: 0.978729
09/15 14:46:38 - mmengine - INFO - Epoch(train) [107][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:12:24  time: 0.385224  data_time: 0.147995  memory: 12704  grad_norm: 0.108667  loss: 0.243119  loss_kpt: 0.243119  acc_pose: 0.816641
09/15 14:46:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:46:55 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:47:15 - mmengine - INFO - Epoch(train) [108][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:11:49  time: 0.406483  data_time: 0.172548  memory: 12704  grad_norm: 0.136636  loss: 0.243024  loss_kpt: 0.243024  acc_pose: 0.870570
09/15 14:47:34 - mmengine - INFO - Epoch(train) [108][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:11:28  time: 0.388254  data_time: 0.153813  memory: 12704  grad_norm: 0.124865  loss: 0.242059  loss_kpt: 0.242059  acc_pose: 0.766899
09/15 14:47:36 - mmengine - INFO - Epoch(train)  [98][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:30:38  time: 0.805167  data_time: 0.489105  memory: 16273  loss: 0.367370  loss_kpt: 0.367370  acc_pose: 0.963603
09/15 14:47:54 - mmengine - INFO - Epoch(train) [108][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:11:09  time: 0.398236  data_time: 0.164434  memory: 12704  grad_norm: 0.105451  loss: 0.245049  loss_kpt: 0.245049  acc_pose: 0.825415
09/15 14:48:14 - mmengine - INFO - Epoch(train) [108][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:10:49  time: 0.394287  data_time: 0.159954  memory: 12704  grad_norm: 0.108783  loss: 0.237986  loss_kpt: 0.237986  acc_pose: 0.814722
09/15 14:48:15 - mmengine - INFO - Epoch(train)  [98][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:29:58  time: 0.777459  data_time: 0.462118  memory: 16273  loss: 0.370634  loss_kpt: 0.370634  acc_pose: 0.962581
09/15 14:48:33 - mmengine - INFO - Epoch(train) [108][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:10:28  time: 0.376749  data_time: 0.142196  memory: 12704  grad_norm: 0.122478  loss: 0.243824  loss_kpt: 0.243824  acc_pose: 0.878929
09/15 14:48:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:48:50 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:49:09 - mmengine - INFO - Epoch(train) [109][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:09:53  time: 0.407627  data_time: 0.173506  memory: 12704  grad_norm: 0.136417  loss: 0.240493  loss_kpt: 0.240493  acc_pose: 0.772881
09/15 14:49:29 - mmengine - INFO - Epoch(train) [109][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:09:34  time: 0.394568  data_time: 0.161488  memory: 12704  grad_norm: 0.100855  loss: 0.243656  loss_kpt: 0.243656  acc_pose: 0.823114
09/15 14:49:30 - mmengine - INFO - Epoch(train)  [99][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:28:43  time: 0.803077  data_time: 0.484620  memory: 16273  loss: 0.365744  loss_kpt: 0.365744  acc_pose: 0.971721
09/15 14:49:49 - mmengine - INFO - Epoch(train) [109][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:09:14  time: 0.395623  data_time: 0.161618  memory: 12704  grad_norm: 0.103196  loss: 0.242741  loss_kpt: 0.242741  acc_pose: 0.816066
09/15 14:50:09 - mmengine - INFO - Epoch(train)  [99][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:28:02  time: 0.777047  data_time: 0.460899  memory: 16273  loss: 0.369828  loss_kpt: 0.369828  acc_pose: 0.945316
09/15 14:50:09 - mmengine - INFO - Epoch(train) [109][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:08:55  time: 0.408496  data_time: 0.174684  memory: 12704  grad_norm: 0.106388  loss: 0.240202  loss_kpt: 0.240202  acc_pose: 0.859117
09/15 14:50:29 - mmengine - INFO - Epoch(train) [109][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:08:36  time: 0.396863  data_time: 0.160375  memory: 12704  grad_norm: 0.114992  loss: 0.243785  loss_kpt: 0.243785  acc_pose: 0.758417
09/15 14:50:45 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:50:45 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:51:06 - mmengine - INFO - Epoch(train) [110][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:08:00  time: 0.413417  data_time: 0.180074  memory: 12704  grad_norm: 0.117642  loss: 0.241345  loss_kpt: 0.241345  acc_pose: 0.858528
09/15 14:51:25 - mmengine - INFO - Epoch(train) [100][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:26:48  time: 0.810792  data_time: 0.494270  memory: 16273  loss: 0.370665  loss_kpt: 0.370665  acc_pose: 0.964417
09/15 14:51:26 - mmengine - INFO - Epoch(train) [110][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:07:41  time: 0.402716  data_time: 0.168507  memory: 12704  grad_norm: 0.104446  loss: 0.241875  loss_kpt: 0.241875  acc_pose: 0.810290
09/15 14:51:46 - mmengine - INFO - Epoch(train) [110][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:07:22  time: 0.406056  data_time: 0.171105  memory: 12704  grad_norm: 0.110632  loss: 0.240692  loss_kpt: 0.240692  acc_pose: 0.835219
09/15 14:52:04 - mmengine - INFO - Epoch(train) [100][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:26:08  time: 0.776204  data_time: 0.456901  memory: 16273  loss: 0.369584  loss_kpt: 0.369584  acc_pose: 0.967393
09/15 14:52:05 - mmengine - INFO - Epoch(train) [110][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:07:02  time: 0.384629  data_time: 0.148501  memory: 12704  grad_norm: 0.114858  loss: 0.240534  loss_kpt: 0.240534  acc_pose: 0.856901
09/15 14:52:25 - mmengine - INFO - Epoch(train) [110][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:06:41  time: 0.383235  data_time: 0.149319  memory: 12704  grad_norm: 0.123580  loss: 0.241211  loss_kpt: 0.241211  acc_pose: 0.870594
09/15 14:52:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:52:40 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:52:40 - mmengine - INFO - Saving checkpoint at 100 epochs
09/15 14:52:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:52:41 - mmengine - INFO - Saving checkpoint at 110 epochs
09/15 14:52:52 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.803
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.976
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.897
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.803
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.863
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.987
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.936
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.863
09/15 14:52:52 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 14:52:52 - mmengine - INFO - Evaluating AUC...
09/15 14:52:52 - mmengine - INFO - Evaluating NME...
09/15 14:52:52 - mmengine - INFO - Epoch(val) [100][19/19]    coco/AP: 0.802984  coco/AP .5: 0.975693  coco/AP .75: 0.897223  coco/AP (L): -1.000000  coco/AR: 0.802984  coco/AR .5: 0.863384  coco/AR .75: 0.986532  coco/AR (L): 0.936027  PCK: 0.940419  AUC: 0.628450  NME: 0.281577  data_time: 0.364297  time: 0.518641
09/15 14:52:52 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/2/best_coco_AP_epoch_50.pth is removed
09/15 14:52:53 - mmengine - INFO - The best checkpoint with 0.8030 coco/AP at 100 epoch is saved to best_coco_AP_epoch_100.pth.
09/15 14:53:02 - mmengine - INFO - Epoch(train) [111][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:06:06  time: 0.399795  data_time: 0.165469  memory: 12704  grad_norm: 0.116319  loss: 0.239373  loss_kpt: 0.239373  acc_pose: 0.825110
09/15 14:53:22 - mmengine - INFO - Epoch(train) [111][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:05:46  time: 0.392796  data_time: 0.158542  memory: 12704  grad_norm: 0.119646  loss: 0.244722  loss_kpt: 0.244722  acc_pose: 0.862072
09/15 14:53:34 - mmengine - INFO - Epoch(train) [101][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:24:52  time: 0.798794  data_time: 0.482914  memory: 16273  loss: 0.370791  loss_kpt: 0.370791  acc_pose: 0.975300
09/15 14:53:41 - mmengine - INFO - Epoch(train) [111][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:05:26  time: 0.387075  data_time: 0.153455  memory: 12704  grad_norm: 0.090064  loss: 0.246553  loss_kpt: 0.246553  acc_pose: 0.793145
09/15 14:54:01 - mmengine - INFO - Epoch(train) [111][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:05:06  time: 0.399959  data_time: 0.165357  memory: 12704  grad_norm: 0.118595  loss: 0.237611  loss_kpt: 0.237611  acc_pose: 0.801575
09/15 14:54:13 - mmengine - INFO - Epoch(train) [101][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:24:12  time: 0.776485  data_time: 0.458410  memory: 16273  loss: 0.365642  loss_kpt: 0.365642  acc_pose: 0.949069
09/15 14:54:21 - mmengine - INFO - Epoch(train) [111][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:04:47  time: 0.397217  data_time: 0.160728  memory: 12704  grad_norm: 0.102835  loss: 0.237909  loss_kpt: 0.237909  acc_pose: 0.882383
09/15 14:54:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:54:49 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:54:57 - mmengine - INFO - Epoch(train) [112][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:04:11  time: 0.407133  data_time: 0.173368  memory: 12704  grad_norm: 0.130522  loss: 0.246660  loss_kpt: 0.246660  acc_pose: 0.786785
09/15 14:55:17 - mmengine - INFO - Epoch(train) [112][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:03:51  time: 0.397305  data_time: 0.162990  memory: 12704  grad_norm: 0.132141  loss: 0.242407  loss_kpt: 0.242407  acc_pose: 0.817182
09/15 14:55:30 - mmengine - INFO - Epoch(train) [102][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:22:58  time: 0.809789  data_time: 0.490775  memory: 16273  loss: 0.367684  loss_kpt: 0.367684  acc_pose: 0.947917
09/15 14:55:37 - mmengine - INFO - Epoch(train) [112][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:03:31  time: 0.390733  data_time: 0.157748  memory: 12704  grad_norm: 0.106381  loss: 0.244392  loss_kpt: 0.244392  acc_pose: 0.818250
09/15 14:55:57 - mmengine - INFO - Epoch(train) [112][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:03:12  time: 0.401653  data_time: 0.168202  memory: 12704  grad_norm: 0.101184  loss: 0.234576  loss_kpt: 0.234576  acc_pose: 0.797828
09/15 14:56:09 - mmengine - INFO - Epoch(train) [102][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:22:19  time: 0.789763  data_time: 0.473461  memory: 16273  loss: 0.371555  loss_kpt: 0.371555  acc_pose: 0.965830
09/15 14:56:17 - mmengine - INFO - Epoch(train) [112][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:02:52  time: 0.394208  data_time: 0.159855  memory: 12704  grad_norm: 0.121150  loss: 0.242677  loss_kpt: 0.242677  acc_pose: 0.829646
09/15 14:56:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:56:44 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:56:52 - mmengine - INFO - Epoch(train) [113][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:02:16  time: 0.397737  data_time: 0.163503  memory: 12704  grad_norm: 0.117613  loss: 0.242715  loss_kpt: 0.242715  acc_pose: 0.876415
09/15 14:57:12 - mmengine - INFO - Epoch(train) [113][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:01:56  time: 0.394864  data_time: 0.158436  memory: 12704  grad_norm: 0.113122  loss: 0.240231  loss_kpt: 0.240231  acc_pose: 0.756427
09/15 14:57:26 - mmengine - INFO - Epoch(train) [103][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:21:05  time: 0.825184  data_time: 0.510049  memory: 16273  loss: 0.366885  loss_kpt: 0.366885  acc_pose: 0.964875
09/15 14:57:32 - mmengine - INFO - Epoch(train) [113][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:01:36  time: 0.389446  data_time: 0.151768  memory: 12704  grad_norm: 0.116735  loss: 0.238780  loss_kpt: 0.238780  acc_pose: 0.732808
09/15 14:57:52 - mmengine - INFO - Epoch(train) [113][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:01:17  time: 0.403277  data_time: 0.168851  memory: 12704  grad_norm: 0.117226  loss: 0.242516  loss_kpt: 0.242516  acc_pose: 0.714294
09/15 14:58:05 - mmengine - INFO - Epoch(train) [103][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:20:26  time: 0.789591  data_time: 0.471997  memory: 16273  loss: 0.368558  loss_kpt: 0.368558  acc_pose: 0.975132
09/15 14:58:11 - mmengine - INFO - Epoch(train) [113][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:00:56  time: 0.380929  data_time: 0.147122  memory: 12704  grad_norm: 0.144452  loss: 0.245984  loss_kpt: 0.245984  acc_pose: 0.762478
09/15 14:58:11 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:58:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:58:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 14:58:47 - mmengine - INFO - Epoch(train) [114][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:00:21  time: 0.404793  data_time: 0.171074  memory: 12704  grad_norm: 0.106784  loss: 0.239860  loss_kpt: 0.239860  acc_pose: 0.874596
09/15 14:59:07 - mmengine - INFO - Epoch(train) [114][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 5:00:01  time: 0.394899  data_time: 0.160804  memory: 12704  grad_norm: 0.122291  loss: 0.243487  loss_kpt: 0.243487  acc_pose: 0.806297
09/15 14:59:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 14:59:21 - mmengine - INFO - Epoch(train) [104][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:19:10  time: 0.800530  data_time: 0.484347  memory: 16273  loss: 0.371359  loss_kpt: 0.371359  acc_pose: 0.979626
09/15 14:59:26 - mmengine - INFO - Epoch(train) [114][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:59:41  time: 0.387640  data_time: 0.153419  memory: 12704  grad_norm: 0.130536  loss: 0.245386  loss_kpt: 0.245386  acc_pose: 0.816157
09/15 14:59:47 - mmengine - INFO - Epoch(train) [114][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:59:22  time: 0.402138  data_time: 0.169052  memory: 12704  grad_norm: 0.125538  loss: 0.241300  loss_kpt: 0.241300  acc_pose: 0.887012
09/15 15:00:00 - mmengine - INFO - Epoch(train) [104][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:18:30  time: 0.779361  data_time: 0.462610  memory: 16273  loss: 0.366863  loss_kpt: 0.366863  acc_pose: 0.962005
09/15 15:00:06 - mmengine - INFO - Epoch(train) [114][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:59:02  time: 0.386853  data_time: 0.151674  memory: 12704  grad_norm: 0.099705  loss: 0.243752  loss_kpt: 0.243752  acc_pose: 0.818975
09/15 15:00:21 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:00:35 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:00:42 - mmengine - INFO - Epoch(train) [115][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:58:26  time: 0.412402  data_time: 0.177975  memory: 12704  grad_norm: 0.103476  loss: 0.242346  loss_kpt: 0.242346  acc_pose: 0.795821
09/15 15:01:01 - mmengine - INFO - Epoch(train) [115][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:58:06  time: 0.387794  data_time: 0.153777  memory: 12704  grad_norm: 0.104562  loss: 0.244439  loss_kpt: 0.244439  acc_pose: 0.829412
09/15 15:01:15 - mmengine - INFO - Epoch(train) [105][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:17:15  time: 0.805170  data_time: 0.488659  memory: 16273  loss: 0.368195  loss_kpt: 0.368195  acc_pose: 0.927614
09/15 15:01:21 - mmengine - INFO - Epoch(train) [115][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:57:46  time: 0.392822  data_time: 0.159116  memory: 12704  grad_norm: 0.102330  loss: 0.238837  loss_kpt: 0.238837  acc_pose: 0.879485
09/15 15:01:41 - mmengine - INFO - Epoch(train) [115][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:57:27  time: 0.406143  data_time: 0.171054  memory: 12704  grad_norm: 0.106292  loss: 0.245187  loss_kpt: 0.245187  acc_pose: 0.801194
09/15 15:01:55 - mmengine - INFO - Epoch(train) [105][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:16:35  time: 0.785843  data_time: 0.469816  memory: 16273  loss: 0.369080  loss_kpt: 0.369080  acc_pose: 0.964196
09/15 15:02:01 - mmengine - INFO - Epoch(train) [115][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:57:07  time: 0.393607  data_time: 0.159170  memory: 12704  grad_norm: 0.138604  loss: 0.243838  loss_kpt: 0.243838  acc_pose: 0.795073
09/15 15:02:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:02:30 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:02:37 - mmengine - INFO - Epoch(train) [116][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:56:31  time: 0.410540  data_time: 0.173263  memory: 12704  grad_norm: 0.128579  loss: 0.245236  loss_kpt: 0.245236  acc_pose: 0.876414
09/15 15:02:56 - mmengine - INFO - Epoch(train) [116][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:56:11  time: 0.387071  data_time: 0.151729  memory: 12704  grad_norm: 0.109029  loss: 0.239178  loss_kpt: 0.239178  acc_pose: 0.769344
09/15 15:03:11 - mmengine - INFO - Epoch(train) [106][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:15:20  time: 0.802899  data_time: 0.485987  memory: 16273  loss: 0.370344  loss_kpt: 0.370344  acc_pose: 0.963576
09/15 15:03:16 - mmengine - INFO - Epoch(train) [116][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:55:51  time: 0.387518  data_time: 0.153252  memory: 12704  grad_norm: 0.099213  loss: 0.244830  loss_kpt: 0.244830  acc_pose: 0.800004
09/15 15:03:35 - mmengine - INFO - Epoch(train) [116][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:55:31  time: 0.389666  data_time: 0.155831  memory: 12704  grad_norm: 0.097931  loss: 0.238526  loss_kpt: 0.238526  acc_pose: 0.846698
09/15 15:03:50 - mmengine - INFO - Epoch(train) [106][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:14:42  time: 0.797590  data_time: 0.481858  memory: 16273  loss: 0.368789  loss_kpt: 0.368789  acc_pose: 0.945966
09/15 15:03:55 - mmengine - INFO - Epoch(train) [116][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:55:11  time: 0.397536  data_time: 0.163396  memory: 12704  grad_norm: 0.097869  loss: 0.240753  loss_kpt: 0.240753  acc_pose: 0.827862
09/15 15:04:11 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:04:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:04:31 - mmengine - INFO - Epoch(train) [117][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:54:35  time: 0.403510  data_time: 0.169195  memory: 12704  grad_norm: 0.108479  loss: 0.240855  loss_kpt: 0.240855  acc_pose: 0.860602
09/15 15:04:51 - mmengine - INFO - Epoch(train) [117][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:54:15  time: 0.398175  data_time: 0.163931  memory: 12704  grad_norm: 0.097385  loss: 0.242917  loss_kpt: 0.242917  acc_pose: 0.874961
09/15 15:05:07 - mmengine - INFO - Epoch(train) [107][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:13:28  time: 0.807877  data_time: 0.485719  memory: 16273  loss: 0.366149  loss_kpt: 0.366149  acc_pose: 0.959656
09/15 15:05:11 - mmengine - INFO - Epoch(train) [117][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:53:56  time: 0.396376  data_time: 0.162653  memory: 12704  grad_norm: 0.110086  loss: 0.242238  loss_kpt: 0.242238  acc_pose: 0.846128
09/15 15:05:31 - mmengine - INFO - Epoch(train) [117][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:53:36  time: 0.399991  data_time: 0.162356  memory: 12704  grad_norm: 0.112053  loss: 0.244276  loss_kpt: 0.244276  acc_pose: 0.805714
09/15 15:05:46 - mmengine - INFO - Epoch(train) [107][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:12:48  time: 0.782344  data_time: 0.467131  memory: 16273  loss: 0.374849  loss_kpt: 0.374849  acc_pose: 0.974734
09/15 15:05:48 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:05:50 - mmengine - INFO - Epoch(train) [117][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:53:17  time: 0.392923  data_time: 0.158832  memory: 12704  grad_norm: 0.116031  loss: 0.237488  loss_kpt: 0.237488  acc_pose: 0.829990
09/15 15:06:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:06:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:06:26 - mmengine - INFO - Epoch(train) [118][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:52:40  time: 0.396158  data_time: 0.162551  memory: 12704  grad_norm: 0.116399  loss: 0.242619  loss_kpt: 0.242619  acc_pose: 0.881404
09/15 15:06:46 - mmengine - INFO - Epoch(train) [118][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:52:21  time: 0.392565  data_time: 0.159605  memory: 12704  grad_norm: 0.124623  loss: 0.237782  loss_kpt: 0.237782  acc_pose: 0.845156
09/15 15:07:01 - mmengine - INFO - Epoch(train) [108][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:11:32  time: 0.798418  data_time: 0.481246  memory: 16273  loss: 0.370008  loss_kpt: 0.370008  acc_pose: 0.937356
09/15 15:07:06 - mmengine - INFO - Epoch(train) [118][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:52:01  time: 0.402498  data_time: 0.167740  memory: 12704  grad_norm: 0.109717  loss: 0.242647  loss_kpt: 0.242647  acc_pose: 0.812670
09/15 15:07:26 - mmengine - INFO - Epoch(train) [118][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:51:42  time: 0.394751  data_time: 0.161168  memory: 12704  grad_norm: 0.133319  loss: 0.239744  loss_kpt: 0.239744  acc_pose: 0.784230
09/15 15:07:41 - mmengine - INFO - Epoch(train) [108][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:10:53  time: 0.792174  data_time: 0.473383  memory: 16273  loss: 0.365555  loss_kpt: 0.365555  acc_pose: 0.978437
09/15 15:07:45 - mmengine - INFO - Epoch(train) [118][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:51:21  time: 0.385492  data_time: 0.151943  memory: 12704  grad_norm: 0.087349  loss: 0.240076  loss_kpt: 0.240076  acc_pose: 0.880172
09/15 15:08:01 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:08:16 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:08:21 - mmengine - INFO - Epoch(train) [119][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:50:46  time: 0.406319  data_time: 0.169109  memory: 12704  grad_norm: 0.120640  loss: 0.237849  loss_kpt: 0.237849  acc_pose: 0.788778
09/15 15:08:41 - mmengine - INFO - Epoch(train) [119][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:50:25  time: 0.387168  data_time: 0.154136  memory: 12704  grad_norm: 0.125059  loss: 0.240205  loss_kpt: 0.240205  acc_pose: 0.806074
09/15 15:08:57 - mmengine - INFO - Epoch(train) [109][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:09:38  time: 0.810782  data_time: 0.494426  memory: 16273  loss: 0.370666  loss_kpt: 0.370666  acc_pose: 0.966012
09/15 15:09:00 - mmengine - INFO - Epoch(train) [119][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:50:05  time: 0.391922  data_time: 0.157446  memory: 12704  grad_norm: 0.110879  loss: 0.238706  loss_kpt: 0.238706  acc_pose: 0.850008
09/15 15:09:20 - mmengine - INFO - Epoch(train) [119][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:49:46  time: 0.400884  data_time: 0.167037  memory: 12704  grad_norm: 0.123409  loss: 0.244132  loss_kpt: 0.244132  acc_pose: 0.838069
09/15 15:09:37 - mmengine - INFO - Epoch(train) [109][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:08:59  time: 0.794874  data_time: 0.479793  memory: 16273  loss: 0.365671  loss_kpt: 0.365671  acc_pose: 0.973746
09/15 15:09:39 - mmengine - INFO - Epoch(train) [119][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:49:26  time: 0.383788  data_time: 0.150080  memory: 12704  grad_norm: 0.109448  loss: 0.243563  loss_kpt: 0.243563  acc_pose: 0.860633
09/15 15:09:56 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:10:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:10:16 - mmengine - INFO - Epoch(train) [120][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:48:51  time: 0.416700  data_time: 0.179815  memory: 12704  grad_norm: 0.094083  loss: 0.237601  loss_kpt: 0.237601  acc_pose: 0.855103
09/15 15:10:36 - mmengine - INFO - Epoch(train) [120][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:48:32  time: 0.399790  data_time: 0.163291  memory: 12704  grad_norm: 0.094031  loss: 0.238026  loss_kpt: 0.238026  acc_pose: 0.799825
09/15 15:10:53 - mmengine - INFO - Epoch(train) [110][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:07:44  time: 0.804688  data_time: 0.488192  memory: 16273  loss: 0.369730  loss_kpt: 0.369730  acc_pose: 0.978243
09/15 15:10:56 - mmengine - INFO - Epoch(train) [120][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:48:12  time: 0.397585  data_time: 0.163562  memory: 12704  grad_norm: 0.086080  loss: 0.241402  loss_kpt: 0.241402  acc_pose: 0.823217
09/15 15:11:16 - mmengine - INFO - Epoch(train) [120][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:47:52  time: 0.390719  data_time: 0.155611  memory: 12704  grad_norm: 0.089027  loss: 0.239323  loss_kpt: 0.239323  acc_pose: 0.847778
09/15 15:11:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:11:32 - mmengine - INFO - Epoch(train) [110][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:07:05  time: 0.783511  data_time: 0.467320  memory: 16273  loss: 0.365575  loss_kpt: 0.365575  acc_pose: 0.972378
09/15 15:11:35 - mmengine - INFO - Epoch(train) [120][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:47:32  time: 0.386865  data_time: 0.152712  memory: 12704  grad_norm: 0.113310  loss: 0.247587  loss_kpt: 0.247587  acc_pose: 0.774213
09/15 15:11:51 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:11:51 - mmengine - INFO - Saving checkpoint at 120 epochs
09/15 15:12:07 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:12:07 - mmengine - INFO - Saving checkpoint at 110 epochs
09/15 15:12:13 - mmengine - INFO - Epoch(train) [121][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:46:56  time: 0.406422  data_time: 0.172531  memory: 12704  grad_norm: 0.121040  loss: 0.242502  loss_kpt: 0.242502  acc_pose: 0.793371
09/15 15:12:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:12:33 - mmengine - INFO - Epoch(train) [121][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:46:37  time: 0.395498  data_time: 0.158232  memory: 12704  grad_norm: 0.137513  loss: 0.243490  loss_kpt: 0.243490  acc_pose: 0.816604
09/15 15:12:49 - mmengine - INFO - Epoch(train) [111][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:05:49  time: 0.798988  data_time: 0.481907  memory: 16273  loss: 0.366760  loss_kpt: 0.366760  acc_pose: 0.961702
09/15 15:12:53 - mmengine - INFO - Epoch(train) [121][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:46:17  time: 0.390080  data_time: 0.155451  memory: 12704  grad_norm: 0.138105  loss: 0.238498  loss_kpt: 0.238498  acc_pose: 0.808972
09/15 15:13:12 - mmengine - INFO - Epoch(train) [121][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:45:57  time: 0.390091  data_time: 0.155943  memory: 12704  grad_norm: 0.116354  loss: 0.243717  loss_kpt: 0.243717  acc_pose: 0.874229
09/15 15:13:28 - mmengine - INFO - Epoch(train) [111][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:05:09  time: 0.786633  data_time: 0.470961  memory: 16273  loss: 0.367144  loss_kpt: 0.367144  acc_pose: 0.946171
09/15 15:13:32 - mmengine - INFO - Epoch(train) [121][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:45:37  time: 0.396822  data_time: 0.161979  memory: 12704  grad_norm: 0.104320  loss: 0.241638  loss_kpt: 0.241638  acc_pose: 0.813881
09/15 15:13:48 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:14:03 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:14:09 - mmengine - INFO - Epoch(train) [122][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:45:02  time: 0.410822  data_time: 0.176553  memory: 12704  grad_norm: 0.121605  loss: 0.240945  loss_kpt: 0.240945  acc_pose: 0.790099
09/15 15:14:29 - mmengine - INFO - Epoch(train) [122][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:44:43  time: 0.405338  data_time: 0.168583  memory: 12704  grad_norm: 0.103070  loss: 0.239599  loss_kpt: 0.239599  acc_pose: 0.880402
09/15 15:14:43 - mmengine - INFO - Epoch(train) [112][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:03:53  time: 0.793501  data_time: 0.474376  memory: 16273  loss: 0.370526  loss_kpt: 0.370526  acc_pose: 0.948424
09/15 15:14:48 - mmengine - INFO - Epoch(train) [122][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:44:23  time: 0.390933  data_time: 0.155211  memory: 12704  grad_norm: 0.113955  loss: 0.242689  loss_kpt: 0.242689  acc_pose: 0.795077
09/15 15:15:08 - mmengine - INFO - Epoch(train) [122][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:44:03  time: 0.399389  data_time: 0.166100  memory: 12704  grad_norm: 0.099436  loss: 0.239520  loss_kpt: 0.239520  acc_pose: 0.793060
09/15 15:15:23 - mmengine - INFO - Epoch(train) [112][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:03:14  time: 0.796898  data_time: 0.480764  memory: 16273  loss: 0.363916  loss_kpt: 0.363916  acc_pose: 0.951285
09/15 15:15:28 - mmengine - INFO - Epoch(train) [122][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:43:44  time: 0.394379  data_time: 0.157542  memory: 12704  grad_norm: 0.113099  loss: 0.241004  loss_kpt: 0.241004  acc_pose: 0.857005
09/15 15:15:44 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:15:58 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:16:04 - mmengine - INFO - Epoch(train) [123][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:43:08  time: 0.405326  data_time: 0.171387  memory: 12704  grad_norm: 0.100967  loss: 0.236672  loss_kpt: 0.236672  acc_pose: 0.896546
09/15 15:16:24 - mmengine - INFO - Epoch(train) [123][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:42:48  time: 0.386807  data_time: 0.152728  memory: 12704  grad_norm: 0.153887  loss: 0.241550  loss_kpt: 0.241550  acc_pose: 0.797285
09/15 15:16:38 - mmengine - INFO - Epoch(train) [113][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:01:58  time: 0.797130  data_time: 0.478127  memory: 16273  loss: 0.367650  loss_kpt: 0.367650  acc_pose: 0.965811
09/15 15:16:44 - mmengine - INFO - Epoch(train) [123][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:42:28  time: 0.397252  data_time: 0.163512  memory: 12704  grad_norm: 0.114392  loss: 0.248182  loss_kpt: 0.248182  acc_pose: 0.771671
09/15 15:17:03 - mmengine - INFO - Epoch(train) [123][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:42:09  time: 0.397617  data_time: 0.160661  memory: 12704  grad_norm: 0.102110  loss: 0.236810  loss_kpt: 0.236810  acc_pose: 0.837579
09/15 15:17:17 - mmengine - INFO - Epoch(train) [113][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:01:19  time: 0.784708  data_time: 0.467253  memory: 16273  loss: 0.368087  loss_kpt: 0.368087  acc_pose: 0.974950
09/15 15:17:23 - mmengine - INFO - Epoch(train) [123][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:41:48  time: 0.382572  data_time: 0.148933  memory: 12704  grad_norm: 0.096349  loss: 0.242711  loss_kpt: 0.242711  acc_pose: 0.871636
09/15 15:17:38 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:17:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:17:59 - mmengine - INFO - Epoch(train) [124][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:41:13  time: 0.418020  data_time: 0.183708  memory: 12704  grad_norm: 0.100981  loss: 0.237611  loss_kpt: 0.237611  acc_pose: 0.804256
09/15 15:18:19 - mmengine - INFO - Epoch(train) [124][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:40:53  time: 0.388917  data_time: 0.155871  memory: 12704  grad_norm: 0.094487  loss: 0.239861  loss_kpt: 0.239861  acc_pose: 0.804221
09/15 15:18:32 - mmengine - INFO - Epoch(train) [114][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 5:00:02  time: 0.793120  data_time: 0.477466  memory: 16273  loss: 0.362321  loss_kpt: 0.362321  acc_pose: 0.971938
09/15 15:18:38 - mmengine - INFO - Epoch(train) [124][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:40:33  time: 0.383486  data_time: 0.149397  memory: 12704  grad_norm: 0.138199  loss: 0.244890  loss_kpt: 0.244890  acc_pose: 0.819174
09/15 15:18:58 - mmengine - INFO - Epoch(train) [124][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:40:13  time: 0.399034  data_time: 0.164781  memory: 12704  grad_norm: 0.123051  loss: 0.235811  loss_kpt: 0.235811  acc_pose: 0.796036
09/15 15:19:01 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:19:12 - mmengine - INFO - Epoch(train) [114][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:59:24  time: 0.803030  data_time: 0.484014  memory: 16273  loss: 0.370142  loss_kpt: 0.370142  acc_pose: 0.956310
09/15 15:19:18 - mmengine - INFO - Epoch(train) [124][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:39:54  time: 0.399769  data_time: 0.165286  memory: 12704  grad_norm: 0.119243  loss: 0.247211  loss_kpt: 0.247211  acc_pose: 0.889300
09/15 15:19:34 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:19:48 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:19:55 - mmengine - INFO - Epoch(train) [125][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:39:19  time: 0.415642  data_time: 0.181685  memory: 12704  grad_norm: 0.107087  loss: 0.238796  loss_kpt: 0.238796  acc_pose: 0.867256
09/15 15:20:14 - mmengine - INFO - Epoch(train) [125][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:38:59  time: 0.390697  data_time: 0.155776  memory: 12704  grad_norm: 0.115491  loss: 0.238667  loss_kpt: 0.238667  acc_pose: 0.859578
09/15 15:20:28 - mmengine - INFO - Epoch(train) [115][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:58:09  time: 0.805673  data_time: 0.488838  memory: 16273  loss: 0.368111  loss_kpt: 0.368111  acc_pose: 0.958232
09/15 15:20:33 - mmengine - INFO - Epoch(train) [125][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:38:38  time: 0.382088  data_time: 0.144823  memory: 12704  grad_norm: 0.123101  loss: 0.245940  loss_kpt: 0.245940  acc_pose: 0.865769
09/15 15:20:53 - mmengine - INFO - Epoch(train) [125][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:38:18  time: 0.394435  data_time: 0.160287  memory: 12704  grad_norm: 0.114217  loss: 0.238747  loss_kpt: 0.238747  acc_pose: 0.812025
09/15 15:21:07 - mmengine - INFO - Epoch(train) [115][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:57:29  time: 0.780814  data_time: 0.463982  memory: 16273  loss: 0.366667  loss_kpt: 0.366667  acc_pose: 0.953345
09/15 15:21:13 - mmengine - INFO - Epoch(train) [125][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:37:59  time: 0.397359  data_time: 0.164308  memory: 12704  grad_norm: 0.125413  loss: 0.242354  loss_kpt: 0.242354  acc_pose: 0.844326
09/15 15:21:29 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:21:42 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:21:49 - mmengine - INFO - Epoch(train) [126][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:37:24  time: 0.411601  data_time: 0.177121  memory: 12704  grad_norm: 0.093909  loss: 0.240188  loss_kpt: 0.240188  acc_pose: 0.783699
09/15 15:22:09 - mmengine - INFO - Epoch(train) [126][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:37:04  time: 0.398408  data_time: 0.163853  memory: 12704  grad_norm: 0.163571  loss: 0.238625  loss_kpt: 0.238625  acc_pose: 0.843896
09/15 15:22:23 - mmengine - INFO - Epoch(train) [116][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:56:14  time: 0.814834  data_time: 0.498973  memory: 16273  loss: 0.368506  loss_kpt: 0.368506  acc_pose: 0.975013
09/15 15:22:29 - mmengine - INFO - Epoch(train) [126][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:36:44  time: 0.393846  data_time: 0.157588  memory: 12704  grad_norm: 0.112562  loss: 0.240812  loss_kpt: 0.240812  acc_pose: 0.750839
09/15 15:22:48 - mmengine - INFO - Epoch(train) [126][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:36:24  time: 0.386467  data_time: 0.152665  memory: 12704  grad_norm: 0.139539  loss: 0.245233  loss_kpt: 0.245233  acc_pose: 0.861483
09/15 15:23:02 - mmengine - INFO - Epoch(train) [116][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:55:34  time: 0.785912  data_time: 0.469167  memory: 16273  loss: 0.362691  loss_kpt: 0.362691  acc_pose: 0.971590
09/15 15:23:09 - mmengine - INFO - Epoch(train) [126][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:36:05  time: 0.409447  data_time: 0.175602  memory: 12704  grad_norm: 0.094602  loss: 0.242158  loss_kpt: 0.242158  acc_pose: 0.911288
09/15 15:23:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:23:38 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:23:45 - mmengine - INFO - Epoch(train) [127][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:35:30  time: 0.410173  data_time: 0.175654  memory: 12704  grad_norm: 0.090828  loss: 0.237255  loss_kpt: 0.237255  acc_pose: 0.822202
09/15 15:24:05 - mmengine - INFO - Epoch(train) [127][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:35:10  time: 0.401751  data_time: 0.167521  memory: 12704  grad_norm: 0.097588  loss: 0.238718  loss_kpt: 0.238718  acc_pose: 0.870701
09/15 15:24:19 - mmengine - INFO - Epoch(train) [117][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:54:20  time: 0.815572  data_time: 0.499242  memory: 16273  loss: 0.366231  loss_kpt: 0.366231  acc_pose: 0.957685
09/15 15:24:25 - mmengine - INFO - Epoch(train) [127][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:34:51  time: 0.396916  data_time: 0.163307  memory: 12704  grad_norm: 0.086162  loss: 0.238050  loss_kpt: 0.238050  acc_pose: 0.841493
09/15 15:24:29 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:24:45 - mmengine - INFO - Epoch(train) [127][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:34:31  time: 0.396416  data_time: 0.159660  memory: 12704  grad_norm: 0.110784  loss: 0.238735  loss_kpt: 0.238735  acc_pose: 0.815626
09/15 15:24:58 - mmengine - INFO - Epoch(train) [117][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:53:41  time: 0.787991  data_time: 0.471173  memory: 16273  loss: 0.369058  loss_kpt: 0.369058  acc_pose: 0.940139
09/15 15:25:05 - mmengine - INFO - Epoch(train) [127][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:34:11  time: 0.396556  data_time: 0.163259  memory: 12704  grad_norm: 0.142194  loss: 0.241315  loss_kpt: 0.241315  acc_pose: 0.742407
09/15 15:25:20 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:25:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:25:38 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:25:40 - mmengine - INFO - Epoch(train) [128][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:33:35  time: 0.397451  data_time: 0.163899  memory: 12704  grad_norm: 0.100983  loss: 0.236052  loss_kpt: 0.236052  acc_pose: 0.858021
09/15 15:26:00 - mmengine - INFO - Epoch(train) [128][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:33:15  time: 0.396299  data_time: 0.162045  memory: 12704  grad_norm: 0.094904  loss: 0.237820  loss_kpt: 0.237820  acc_pose: 0.921267
09/15 15:26:13 - mmengine - INFO - Epoch(train) [118][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:52:24  time: 0.785099  data_time: 0.469444  memory: 16273  loss: 0.368364  loss_kpt: 0.368364  acc_pose: 0.949635
09/15 15:26:20 - mmengine - INFO - Epoch(train) [128][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:32:55  time: 0.389689  data_time: 0.153589  memory: 12704  grad_norm: 0.099083  loss: 0.238328  loss_kpt: 0.238328  acc_pose: 0.805350
09/15 15:26:39 - mmengine - INFO - Epoch(train) [128][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:32:35  time: 0.395419  data_time: 0.161927  memory: 12704  grad_norm: 0.120930  loss: 0.240612  loss_kpt: 0.240612  acc_pose: 0.896283
09/15 15:26:52 - mmengine - INFO - Epoch(train) [118][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:51:45  time: 0.797777  data_time: 0.477665  memory: 16273  loss: 0.367232  loss_kpt: 0.367232  acc_pose: 0.960911
09/15 15:26:59 - mmengine - INFO - Epoch(train) [128][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:32:16  time: 0.397619  data_time: 0.163473  memory: 12704  grad_norm: 0.112769  loss: 0.241842  loss_kpt: 0.241842  acc_pose: 0.858587
09/15 15:27:15 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:27:28 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:27:35 - mmengine - INFO - Epoch(train) [129][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:31:40  time: 0.399689  data_time: 0.165436  memory: 12704  grad_norm: 0.117578  loss: 0.239600  loss_kpt: 0.239600  acc_pose: 0.857179
09/15 15:27:55 - mmengine - INFO - Epoch(train) [129][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:31:20  time: 0.396489  data_time: 0.161293  memory: 12704  grad_norm: 0.118429  loss: 0.240154  loss_kpt: 0.240154  acc_pose: 0.795200
09/15 15:28:08 - mmengine - INFO - Epoch(train) [119][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:50:29  time: 0.793483  data_time: 0.475209  memory: 16273  loss: 0.365606  loss_kpt: 0.365606  acc_pose: 0.967850
09/15 15:28:14 - mmengine - INFO - Epoch(train) [129][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:31:00  time: 0.387632  data_time: 0.154460  memory: 12704  grad_norm: 0.084122  loss: 0.234334  loss_kpt: 0.234334  acc_pose: 0.882118
09/15 15:28:34 - mmengine - INFO - Epoch(train) [129][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:30:40  time: 0.398251  data_time: 0.164274  memory: 12704  grad_norm: 0.099628  loss: 0.241971  loss_kpt: 0.241971  acc_pose: 0.829915
09/15 15:28:47 - mmengine - INFO - Epoch(train) [119][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:49:50  time: 0.784626  data_time: 0.467757  memory: 16273  loss: 0.365809  loss_kpt: 0.365809  acc_pose: 0.961994
09/15 15:28:54 - mmengine - INFO - Epoch(train) [129][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:30:21  time: 0.394558  data_time: 0.161217  memory: 12704  grad_norm: 0.112374  loss: 0.244004  loss_kpt: 0.244004  acc_pose: 0.813151
09/15 15:29:10 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:29:24 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:29:31 - mmengine - INFO - Epoch(train) [130][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:29:45  time: 0.413768  data_time: 0.179362  memory: 12704  grad_norm: 0.150428  loss: 0.239140  loss_kpt: 0.239140  acc_pose: 0.870903
09/15 15:29:51 - mmengine - INFO - Epoch(train) [130][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:29:26  time: 0.404047  data_time: 0.170307  memory: 12704  grad_norm: 0.127620  loss: 0.240286  loss_kpt: 0.240286  acc_pose: 0.842440
09/15 15:30:05 - mmengine - INFO - Epoch(train) [120][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:48:37  time: 0.815063  data_time: 0.497453  memory: 16273  loss: 0.363664  loss_kpt: 0.363664  acc_pose: 0.944922
09/15 15:30:10 - mmengine - INFO - Epoch(train) [130][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:29:06  time: 0.385947  data_time: 0.151389  memory: 12704  grad_norm: 0.106290  loss: 0.243358  loss_kpt: 0.243358  acc_pose: 0.865441
09/15 15:30:30 - mmengine - INFO - Epoch(train) [130][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:28:46  time: 0.393809  data_time: 0.160012  memory: 12704  grad_norm: 0.099675  loss: 0.239688  loss_kpt: 0.239688  acc_pose: 0.832675
09/15 15:30:44 - mmengine - INFO - Epoch(train) [120][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:47:57  time: 0.786959  data_time: 0.471810  memory: 16273  loss: 0.364485  loss_kpt: 0.364485  acc_pose: 0.953552
09/15 15:30:49 - mmengine - INFO - Epoch(train) [130][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:28:26  time: 0.385996  data_time: 0.151578  memory: 12704  grad_norm: 0.105463  loss: 0.241064  loss_kpt: 0.241064  acc_pose: 0.830220
09/15 15:31:05 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:31:05 - mmengine - INFO - Saving checkpoint at 130 epochs
09/15 15:31:19 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:31:19 - mmengine - INFO - Saving checkpoint at 120 epochs
09/15 15:31:27 - mmengine - INFO - Epoch(train) [131][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:27:50  time: 0.401127  data_time: 0.167062  memory: 12704  grad_norm: 0.129696  loss: 0.242958  loss_kpt: 0.242958  acc_pose: 0.779534
09/15 15:31:47 - mmengine - INFO - Epoch(train) [131][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:27:31  time: 0.397873  data_time: 0.163811  memory: 12704  grad_norm: 0.109604  loss: 0.238274  loss_kpt: 0.238274  acc_pose: 0.881572
09/15 15:32:01 - mmengine - INFO - Epoch(train) [121][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:46:41  time: 0.806887  data_time: 0.488353  memory: 16273  loss: 0.364179  loss_kpt: 0.364179  acc_pose: 0.975251
09/15 15:32:07 - mmengine - INFO - Epoch(train) [131][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:27:11  time: 0.395039  data_time: 0.161541  memory: 12704  grad_norm: 0.104787  loss: 0.240010  loss_kpt: 0.240010  acc_pose: 0.812831
09/15 15:32:15 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:32:26 - mmengine - INFO - Epoch(train) [131][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:26:51  time: 0.390325  data_time: 0.153723  memory: 12704  grad_norm: 0.105945  loss: 0.239233  loss_kpt: 0.239233  acc_pose: 0.822264
09/15 15:32:39 - mmengine - INFO - Epoch(train) [121][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:46:01  time: 0.773269  data_time: 0.457438  memory: 16273  loss: 0.366790  loss_kpt: 0.366790  acc_pose: 0.971131
09/15 15:32:47 - mmengine - INFO - Epoch(train) [131][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:26:32  time: 0.410850  data_time: 0.176762  memory: 12704  grad_norm: 0.108911  loss: 0.240779  loss_kpt: 0.240779  acc_pose: 0.852302
09/15 15:33:03 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:33:16 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:33:23 - mmengine - INFO - Epoch(train) [132][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:25:57  time: 0.406427  data_time: 0.168538  memory: 12704  grad_norm: 0.085924  loss: 0.234757  loss_kpt: 0.234757  acc_pose: 0.873333
09/15 15:33:43 - mmengine - INFO - Epoch(train) [132][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:25:37  time: 0.393773  data_time: 0.159590  memory: 12704  grad_norm: 0.104145  loss: 0.243425  loss_kpt: 0.243425  acc_pose: 0.830535
09/15 15:33:56 - mmengine - INFO - Epoch(train) [122][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:44:47  time: 0.816437  data_time: 0.500883  memory: 16273  loss: 0.362969  loss_kpt: 0.362969  acc_pose: 0.973201
09/15 15:34:02 - mmengine - INFO - Epoch(train) [132][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:25:17  time: 0.385566  data_time: 0.150993  memory: 12704  grad_norm: 0.105136  loss: 0.239170  loss_kpt: 0.239170  acc_pose: 0.829725
09/15 15:34:22 - mmengine - INFO - Epoch(train) [132][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:24:57  time: 0.398023  data_time: 0.162793  memory: 12704  grad_norm: 0.097568  loss: 0.236686  loss_kpt: 0.236686  acc_pose: 0.853660
09/15 15:34:35 - mmengine - INFO - Epoch(train) [122][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:44:07  time: 0.769670  data_time: 0.452773  memory: 16273  loss: 0.365546  loss_kpt: 0.365546  acc_pose: 0.975549
09/15 15:34:43 - mmengine - INFO - Epoch(train) [132][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:24:38  time: 0.407087  data_time: 0.169868  memory: 12704  grad_norm: 0.107749  loss: 0.239787  loss_kpt: 0.239787  acc_pose: 0.852996
09/15 15:34:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:35:10 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:35:19 - mmengine - INFO - Epoch(train) [133][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:24:02  time: 0.407988  data_time: 0.173111  memory: 12704  grad_norm: 0.073975  loss: 0.241387  loss_kpt: 0.241387  acc_pose: 0.832796
09/15 15:35:39 - mmengine - INFO - Epoch(train) [133][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:23:43  time: 0.410393  data_time: 0.175754  memory: 12704  grad_norm: 0.130356  loss: 0.241966  loss_kpt: 0.241966  acc_pose: 0.828126
09/15 15:35:50 - mmengine - INFO - Epoch(train) [123][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:42:51  time: 0.801954  data_time: 0.483234  memory: 16273  loss: 0.364802  loss_kpt: 0.364802  acc_pose: 0.954705
09/15 15:35:59 - mmengine - INFO - Epoch(train) [133][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:23:23  time: 0.392854  data_time: 0.158661  memory: 12704  grad_norm: 0.118359  loss: 0.241479  loss_kpt: 0.241479  acc_pose: 0.861171
09/15 15:36:19 - mmengine - INFO - Epoch(train) [133][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:23:04  time: 0.401027  data_time: 0.165805  memory: 12704  grad_norm: 0.114600  loss: 0.240765  loss_kpt: 0.240765  acc_pose: 0.845214
09/15 15:36:30 - mmengine - INFO - Epoch(train) [123][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:42:12  time: 0.789377  data_time: 0.474398  memory: 16273  loss: 0.363352  loss_kpt: 0.363352  acc_pose: 0.966398
09/15 15:36:39 - mmengine - INFO - Epoch(train) [133][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:22:44  time: 0.393751  data_time: 0.160507  memory: 12704  grad_norm: 0.137673  loss: 0.242963  loss_kpt: 0.242963  acc_pose: 0.830496
09/15 15:36:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:37:06 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:37:15 - mmengine - INFO - Epoch(train) [134][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:22:08  time: 0.405915  data_time: 0.170430  memory: 12704  grad_norm: 0.097382  loss: 0.236151  loss_kpt: 0.236151  acc_pose: 0.857343
09/15 15:37:34 - mmengine - INFO - Epoch(train) [134][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:21:48  time: 0.393682  data_time: 0.159108  memory: 12704  grad_norm: 0.143445  loss: 0.238121  loss_kpt: 0.238121  acc_pose: 0.848641
09/15 15:37:39 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:37:46 - mmengine - INFO - Epoch(train) [124][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:40:57  time: 0.799712  data_time: 0.481138  memory: 16273  loss: 0.360944  loss_kpt: 0.360944  acc_pose: 0.966980
09/15 15:37:54 - mmengine - INFO - Epoch(train) [134][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:21:28  time: 0.388902  data_time: 0.153998  memory: 12704  grad_norm: 0.099669  loss: 0.238185  loss_kpt: 0.238185  acc_pose: 0.807406
09/15 15:38:13 - mmengine - INFO - Epoch(train) [134][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:21:08  time: 0.387087  data_time: 0.152386  memory: 12704  grad_norm: 0.120799  loss: 0.242314  loss_kpt: 0.242314  acc_pose: 0.856018
09/15 15:38:25 - mmengine - INFO - Epoch(train) [124][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:40:17  time: 0.780543  data_time: 0.459104  memory: 16273  loss: 0.367726  loss_kpt: 0.367726  acc_pose: 0.945978
09/15 15:38:33 - mmengine - INFO - Epoch(train) [134][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:20:48  time: 0.396071  data_time: 0.161935  memory: 12704  grad_norm: 0.105399  loss: 0.239786  loss_kpt: 0.239786  acc_pose: 0.837291
09/15 15:38:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:38:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:39:01 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:39:09 - mmengine - INFO - Epoch(train) [135][ 50/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:20:12  time: 0.397323  data_time: 0.162953  memory: 12704  grad_norm: 0.115827  loss: 0.244726  loss_kpt: 0.244726  acc_pose: 0.825955
09/15 15:39:28 - mmengine - INFO - Epoch(train) [135][100/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:19:52  time: 0.392171  data_time: 0.158472  memory: 12704  grad_norm: 0.118702  loss: 0.237101  loss_kpt: 0.237101  acc_pose: 0.780580
09/15 15:39:41 - mmengine - INFO - Epoch(train) [125][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:39:02  time: 0.802079  data_time: 0.486084  memory: 16273  loss: 0.365489  loss_kpt: 0.365489  acc_pose: 0.982313
09/15 15:39:48 - mmengine - INFO - Epoch(train) [135][150/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:19:33  time: 0.394102  data_time: 0.159845  memory: 12704  grad_norm: 0.094701  loss: 0.235860  loss_kpt: 0.235860  acc_pose: 0.908350
09/15 15:40:08 - mmengine - INFO - Epoch(train) [135][200/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:19:13  time: 0.396726  data_time: 0.162592  memory: 12704  grad_norm: 0.113449  loss: 0.243205  loss_kpt: 0.243205  acc_pose: 0.885954
09/15 15:40:20 - mmengine - INFO - Epoch(train) [125][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:38:22  time: 0.784989  data_time: 0.467904  memory: 16273  loss: 0.368188  loss_kpt: 0.368188  acc_pose: 0.967749
09/15 15:40:28 - mmengine - INFO - Epoch(train) [135][250/291]  base_lr: 4.000000e-03 lr: 4.000000e-03  eta: 4:18:53  time: 0.398087  data_time: 0.161807  memory: 12704  grad_norm: 0.113200  loss: 0.236377  loss_kpt: 0.236377  acc_pose: 0.808561
09/15 15:40:43 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:40:56 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:41:04 - mmengine - INFO - Epoch(train) [136][ 50/291]  base_lr: 3.999985e-03 lr: 3.999985e-03  eta: 4:18:18  time: 0.413249  data_time: 0.179294  memory: 12704  grad_norm: 0.104676  loss: 0.240891  loss_kpt: 0.240891  acc_pose: 0.829651
09/15 15:41:24 - mmengine - INFO - Epoch(train) [136][100/291]  base_lr: 3.999940e-03 lr: 3.999940e-03  eta: 4:17:58  time: 0.392865  data_time: 0.158868  memory: 12704  grad_norm: 0.108862  loss: 0.240137  loss_kpt: 0.240137  acc_pose: 0.802516
09/15 15:41:36 - mmengine - INFO - Epoch(train) [126][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:37:07  time: 0.805968  data_time: 0.488506  memory: 16273  loss: 0.362766  loss_kpt: 0.362766  acc_pose: 0.953646
09/15 15:41:44 - mmengine - INFO - Epoch(train) [136][150/291]  base_lr: 3.999865e-03 lr: 3.999865e-03  eta: 4:17:38  time: 0.401242  data_time: 0.165398  memory: 12704  grad_norm: 0.103931  loss: 0.236072  loss_kpt: 0.236072  acc_pose: 0.847914
09/15 15:42:04 - mmengine - INFO - Epoch(train) [136][200/291]  base_lr: 3.999759e-03 lr: 3.999759e-03  eta: 4:17:19  time: 0.398832  data_time: 0.165907  memory: 12704  grad_norm: 0.125386  loss: 0.240602  loss_kpt: 0.240602  acc_pose: 0.829755
09/15 15:42:16 - mmengine - INFO - Epoch(train) [126][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:36:28  time: 0.788122  data_time: 0.471297  memory: 16273  loss: 0.366036  loss_kpt: 0.366036  acc_pose: 0.961002
09/15 15:42:23 - mmengine - INFO - Epoch(train) [136][250/291]  base_lr: 3.999623e-03 lr: 3.999623e-03  eta: 4:16:59  time: 0.385569  data_time: 0.151922  memory: 12704  grad_norm: 0.126035  loss: 0.239362  loss_kpt: 0.239362  acc_pose: 0.846889
09/15 15:42:39 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:42:51 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:43:00 - mmengine - INFO - Epoch(train) [137][ 50/291]  base_lr: 3.999298e-03 lr: 3.999298e-03  eta: 4:16:23  time: 0.412448  data_time: 0.177208  memory: 12704  grad_norm: 0.121297  loss: 0.235188  loss_kpt: 0.235188  acc_pose: 0.803222
09/15 15:43:20 - mmengine - INFO - Epoch(train) [137][100/291]  base_lr: 3.999076e-03 lr: 3.999076e-03  eta: 4:16:04  time: 0.395696  data_time: 0.161024  memory: 12704  grad_norm: 0.127131  loss: 0.238577  loss_kpt: 0.238577  acc_pose: 0.848956
09/15 15:43:32 - mmengine - INFO - Epoch(train) [127][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:35:13  time: 0.805372  data_time: 0.488788  memory: 16273  loss: 0.366141  loss_kpt: 0.366141  acc_pose: 0.961197
09/15 15:43:39 - mmengine - INFO - Epoch(train) [137][150/291]  base_lr: 3.998824e-03 lr: 3.998824e-03  eta: 4:15:44  time: 0.397149  data_time: 0.162463  memory: 12704  grad_norm: 0.106428  loss: 0.240573  loss_kpt: 0.240573  acc_pose: 0.832455
09/15 15:43:59 - mmengine - INFO - Epoch(train) [137][200/291]  base_lr: 3.998542e-03 lr: 3.998542e-03  eta: 4:15:24  time: 0.398178  data_time: 0.163667  memory: 12704  grad_norm: 0.110080  loss: 0.238490  loss_kpt: 0.238490  acc_pose: 0.858395
09/15 15:44:11 - mmengine - INFO - Epoch(train) [127][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:34:34  time: 0.786065  data_time: 0.468661  memory: 16273  loss: 0.364342  loss_kpt: 0.364342  acc_pose: 0.975133
09/15 15:44:19 - mmengine - INFO - Epoch(train) [137][250/291]  base_lr: 3.998229e-03 lr: 3.998229e-03  eta: 4:15:04  time: 0.387532  data_time: 0.154076  memory: 12704  grad_norm: 0.112923  loss: 0.243057  loss_kpt: 0.243057  acc_pose: 0.774744
09/15 15:44:34 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:44:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:44:54 - mmengine - INFO - Epoch(train) [138][ 50/291]  base_lr: 3.997582e-03 lr: 3.997582e-03  eta: 4:14:28  time: 0.399496  data_time: 0.165344  memory: 12704  grad_norm: 0.093727  loss: 0.236507  loss_kpt: 0.236507  acc_pose: 0.856271
09/15 15:45:14 - mmengine - INFO - Epoch(train) [138][100/291]  base_lr: 3.997183e-03 lr: 3.997183e-03  eta: 4:14:08  time: 0.398847  data_time: 0.164636  memory: 12704  grad_norm: 0.110148  loss: 0.237822  loss_kpt: 0.237822  acc_pose: 0.874938
09/15 15:45:26 - mmengine - INFO - Epoch(train) [128][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:33:17  time: 0.795426  data_time: 0.478866  memory: 16273  loss: 0.362397  loss_kpt: 0.362397  acc_pose: 0.957778
09/15 15:45:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:45:34 - mmengine - INFO - Epoch(train) [138][150/291]  base_lr: 3.996755e-03 lr: 3.996755e-03  eta: 4:13:48  time: 0.388790  data_time: 0.154992  memory: 12704  grad_norm: 0.096459  loss: 0.237888  loss_kpt: 0.237888  acc_pose: 0.787221
09/15 15:45:54 - mmengine - INFO - Epoch(train) [138][200/291]  base_lr: 3.996295e-03 lr: 3.996295e-03  eta: 4:13:29  time: 0.408356  data_time: 0.171325  memory: 12704  grad_norm: 0.099634  loss: 0.233603  loss_kpt: 0.233603  acc_pose: 0.872599
09/15 15:46:05 - mmengine - INFO - Epoch(train) [128][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:32:38  time: 0.781380  data_time: 0.461781  memory: 16273  loss: 0.370526  loss_kpt: 0.370526  acc_pose: 0.977046
09/15 15:46:14 - mmengine - INFO - Epoch(train) [138][250/291]  base_lr: 3.995806e-03 lr: 3.995806e-03  eta: 4:13:09  time: 0.389629  data_time: 0.155948  memory: 12704  grad_norm: 0.103869  loss: 0.244718  loss_kpt: 0.244718  acc_pose: 0.800764
09/15 15:46:29 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:46:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:46:50 - mmengine - INFO - Epoch(train) [139][ 50/291]  base_lr: 3.994838e-03 lr: 3.994838e-03  eta: 4:12:33  time: 0.403342  data_time: 0.168418  memory: 12704  grad_norm: 0.133992  loss: 0.238283  loss_kpt: 0.238283  acc_pose: 0.871998
09/15 15:47:10 - mmengine - INFO - Epoch(train) [139][100/291]  base_lr: 3.994263e-03 lr: 3.994263e-03  eta: 4:12:14  time: 0.399969  data_time: 0.165402  memory: 12704  grad_norm: 0.089683  loss: 0.242198  loss_kpt: 0.242198  acc_pose: 0.836949
09/15 15:47:21 - mmengine - INFO - Epoch(train) [129][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:31:22  time: 0.794596  data_time: 0.479794  memory: 16273  loss: 0.362635  loss_kpt: 0.362635  acc_pose: 0.955914
09/15 15:47:29 - mmengine - INFO - Epoch(train) [139][150/291]  base_lr: 3.993658e-03 lr: 3.993658e-03  eta: 4:11:54  time: 0.396651  data_time: 0.161752  memory: 12704  grad_norm: 0.121604  loss: 0.238923  loss_kpt: 0.238923  acc_pose: 0.787319
09/15 15:47:49 - mmengine - INFO - Epoch(train) [139][200/291]  base_lr: 3.993023e-03 lr: 3.993023e-03  eta: 4:11:34  time: 0.393079  data_time: 0.158642  memory: 12704  grad_norm: 0.105282  loss: 0.236859  loss_kpt: 0.236859  acc_pose: 0.848821
09/15 15:48:00 - mmengine - INFO - Epoch(train) [129][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:30:43  time: 0.786845  data_time: 0.464179  memory: 16273  loss: 0.362296  loss_kpt: 0.362296  acc_pose: 0.980548
09/15 15:48:09 - mmengine - INFO - Epoch(train) [139][250/291]  base_lr: 3.992357e-03 lr: 3.992357e-03  eta: 4:11:15  time: 0.405889  data_time: 0.171699  memory: 12704  grad_norm: 0.130533  loss: 0.241205  loss_kpt: 0.241205  acc_pose: 0.872749
09/15 15:48:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:48:37 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:48:46 - mmengine - INFO - Epoch(train) [140][ 50/291]  base_lr: 3.991068e-03 lr: 3.991068e-03  eta: 4:10:39  time: 0.410829  data_time: 0.176477  memory: 12704  grad_norm: 0.116183  loss: 0.238883  loss_kpt: 0.238883  acc_pose: 0.788107
09/15 15:49:05 - mmengine - INFO - Epoch(train) [140][100/291]  base_lr: 3.990317e-03 lr: 3.990317e-03  eta: 4:10:19  time: 0.387910  data_time: 0.153784  memory: 12704  grad_norm: 0.098305  loss: 0.245930  loss_kpt: 0.245930  acc_pose: 0.802210
09/15 15:49:17 - mmengine - INFO - Epoch(train) [130][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:29:29  time: 0.811098  data_time: 0.495684  memory: 16273  loss: 0.363689  loss_kpt: 0.363689  acc_pose: 0.964348
09/15 15:49:25 - mmengine - INFO - Epoch(train) [140][150/291]  base_lr: 3.989536e-03 lr: 3.989536e-03  eta: 4:10:00  time: 0.396888  data_time: 0.163227  memory: 12704  grad_norm: 0.130465  loss: 0.239559  loss_kpt: 0.239559  acc_pose: 0.791179
09/15 15:49:44 - mmengine - INFO - Epoch(train) [140][200/291]  base_lr: 3.988725e-03 lr: 3.988725e-03  eta: 4:09:40  time: 0.385689  data_time: 0.152840  memory: 12704  grad_norm: 0.102993  loss: 0.234566  loss_kpt: 0.234566  acc_pose: 0.786756
09/15 15:49:56 - mmengine - INFO - Epoch(train) [130][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:28:49  time: 0.778281  data_time: 0.461051  memory: 16273  loss: 0.366586  loss_kpt: 0.366586  acc_pose: 0.968127
09/15 15:50:04 - mmengine - INFO - Epoch(train) [140][250/291]  base_lr: 3.987883e-03 lr: 3.987883e-03  eta: 4:09:20  time: 0.390504  data_time: 0.156569  memory: 12704  grad_norm: 0.097697  loss: 0.234211  loss_kpt: 0.234211  acc_pose: 0.782993
09/15 15:50:20 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:50:20 - mmengine - INFO - Saving checkpoint at 140 epochs
09/15 15:50:32 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:50:32 - mmengine - INFO - Saving checkpoint at 130 epochs
09/15 15:50:42 - mmengine - INFO - Epoch(train) [141][ 50/291]  base_lr: 3.986274e-03 lr: 3.986274e-03  eta: 4:08:44  time: 0.407306  data_time: 0.173298  memory: 12704  grad_norm: 0.102536  loss: 0.240028  loss_kpt: 0.240028  acc_pose: 0.877221
09/15 15:50:49 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:51:01 - mmengine - INFO - Epoch(train) [141][100/291]  base_lr: 3.985347e-03 lr: 3.985347e-03  eta: 4:08:24  time: 0.393880  data_time: 0.160535  memory: 12704  grad_norm: 0.124062  loss: 0.242253  loss_kpt: 0.242253  acc_pose: 0.816597
09/15 15:51:13 - mmengine - INFO - Epoch(train) [131][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:27:34  time: 0.808955  data_time: 0.491989  memory: 16273  loss: 0.366584  loss_kpt: 0.366584  acc_pose: 0.964737
09/15 15:51:22 - mmengine - INFO - Epoch(train) [141][150/291]  base_lr: 3.984391e-03 lr: 3.984391e-03  eta: 4:08:05  time: 0.405444  data_time: 0.171393  memory: 12704  grad_norm: 0.102302  loss: 0.237104  loss_kpt: 0.237104  acc_pose: 0.852373
09/15 15:51:41 - mmengine - INFO - Epoch(train) [141][200/291]  base_lr: 3.983404e-03 lr: 3.983404e-03  eta: 4:07:45  time: 0.389657  data_time: 0.155725  memory: 12704  grad_norm: 0.099249  loss: 0.238401  loss_kpt: 0.238401  acc_pose: 0.786220
09/15 15:51:52 - mmengine - INFO - Epoch(train) [131][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:26:54  time: 0.782726  data_time: 0.466712  memory: 16273  loss: 0.362366  loss_kpt: 0.362366  acc_pose: 0.973638
09/15 15:52:01 - mmengine - INFO - Epoch(train) [141][250/291]  base_lr: 3.982387e-03 lr: 3.982387e-03  eta: 4:07:25  time: 0.387859  data_time: 0.154589  memory: 12704  grad_norm: 0.119083  loss: 0.237630  loss_kpt: 0.237630  acc_pose: 0.902828
09/15 15:52:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:52:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:52:28 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:52:37 - mmengine - INFO - Epoch(train) [142][ 50/291]  base_lr: 3.980459e-03 lr: 3.980459e-03  eta: 4:06:49  time: 0.405422  data_time: 0.171166  memory: 12704  grad_norm: 0.085082  loss: 0.239507  loss_kpt: 0.239507  acc_pose: 0.834821
09/15 15:52:56 - mmengine - INFO - Epoch(train) [142][100/291]  base_lr: 3.979357e-03 lr: 3.979357e-03  eta: 4:06:29  time: 0.386839  data_time: 0.153434  memory: 12704  grad_norm: 0.089004  loss: 0.239206  loss_kpt: 0.239206  acc_pose: 0.844319
09/15 15:53:09 - mmengine - INFO - Epoch(train) [132][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:25:40  time: 0.810199  data_time: 0.491965  memory: 16273  loss: 0.366982  loss_kpt: 0.366982  acc_pose: 0.938444
09/15 15:53:16 - mmengine - INFO - Epoch(train) [142][150/291]  base_lr: 3.978225e-03 lr: 3.978225e-03  eta: 4:06:09  time: 0.393022  data_time: 0.156796  memory: 12704  grad_norm: 0.088919  loss: 0.238068  loss_kpt: 0.238068  acc_pose: 0.826688
09/15 15:53:35 - mmengine - INFO - Epoch(train) [142][200/291]  base_lr: 3.977063e-03 lr: 3.977063e-03  eta: 4:05:49  time: 0.393080  data_time: 0.157726  memory: 12704  grad_norm: 0.112263  loss: 0.236482  loss_kpt: 0.236482  acc_pose: 0.894085
09/15 15:53:48 - mmengine - INFO - Epoch(train) [132][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:25:00  time: 0.779632  data_time: 0.463355  memory: 16273  loss: 0.359397  loss_kpt: 0.359397  acc_pose: 0.957176
09/15 15:53:55 - mmengine - INFO - Epoch(train) [142][250/291]  base_lr: 3.975871e-03 lr: 3.975871e-03  eta: 4:05:30  time: 0.401579  data_time: 0.166613  memory: 12704  grad_norm: 0.134088  loss: 0.237818  loss_kpt: 0.237818  acc_pose: 0.863833
09/15 15:54:12 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:54:24 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:54:32 - mmengine - INFO - Epoch(train) [143][ 50/291]  base_lr: 3.973625e-03 lr: 3.973625e-03  eta: 4:04:55  time: 0.416275  data_time: 0.181330  memory: 12704  grad_norm: 0.109623  loss: 0.240443  loss_kpt: 0.240443  acc_pose: 0.810713
09/15 15:54:52 - mmengine - INFO - Epoch(train) [143][100/291]  base_lr: 3.972349e-03 lr: 3.972349e-03  eta: 4:04:34  time: 0.386933  data_time: 0.153023  memory: 12704  grad_norm: 0.122850  loss: 0.242115  loss_kpt: 0.242115  acc_pose: 0.859692
09/15 15:55:04 - mmengine - INFO - Epoch(train) [133][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:23:45  time: 0.805653  data_time: 0.490176  memory: 16273  loss: 0.365390  loss_kpt: 0.365390  acc_pose: 0.984362
09/15 15:55:11 - mmengine - INFO - Epoch(train) [143][150/291]  base_lr: 3.971042e-03 lr: 3.971042e-03  eta: 4:04:14  time: 0.378132  data_time: 0.144387  memory: 12704  grad_norm: 0.102840  loss: 0.237559  loss_kpt: 0.237559  acc_pose: 0.824604
09/15 15:55:31 - mmengine - INFO - Epoch(train) [143][200/291]  base_lr: 3.969706e-03 lr: 3.969706e-03  eta: 4:03:54  time: 0.400544  data_time: 0.165796  memory: 12704  grad_norm: 0.098897  loss: 0.235867  loss_kpt: 0.235867  acc_pose: 0.788882
09/15 15:55:43 - mmengine - INFO - Epoch(train) [133][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:23:05  time: 0.782369  data_time: 0.463289  memory: 16273  loss: 0.365915  loss_kpt: 0.365915  acc_pose: 0.946686
09/15 15:55:50 - mmengine - INFO - Epoch(train) [143][250/291]  base_lr: 3.968340e-03 lr: 3.968340e-03  eta: 4:03:34  time: 0.386870  data_time: 0.153523  memory: 12704  grad_norm: 0.109485  loss: 0.237566  loss_kpt: 0.237566  acc_pose: 0.865290
09/15 15:56:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:56:18 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:56:26 - mmengine - INFO - Epoch(train) [144][ 50/291]  base_lr: 3.965777e-03 lr: 3.965777e-03  eta: 4:02:58  time: 0.404125  data_time: 0.168799  memory: 12704  grad_norm: 0.113509  loss: 0.240273  loss_kpt: 0.240273  acc_pose: 0.910438
09/15 15:56:46 - mmengine - INFO - Epoch(train) [144][100/291]  base_lr: 3.964327e-03 lr: 3.964327e-03  eta: 4:02:39  time: 0.404165  data_time: 0.168959  memory: 12704  grad_norm: 0.126815  loss: 0.237750  loss_kpt: 0.237750  acc_pose: 0.831197
09/15 15:56:59 - mmengine - INFO - Epoch(train) [134][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:21:49  time: 0.805797  data_time: 0.489941  memory: 16273  loss: 0.361926  loss_kpt: 0.361926  acc_pose: 0.974630
09/15 15:57:06 - mmengine - INFO - Epoch(train) [144][150/291]  base_lr: 3.962846e-03 lr: 3.962846e-03  eta: 4:02:19  time: 0.396567  data_time: 0.161424  memory: 12704  grad_norm: 0.088352  loss: 0.239330  loss_kpt: 0.239330  acc_pose: 0.814658
09/15 15:57:26 - mmengine - INFO - Epoch(train) [144][200/291]  base_lr: 3.961336e-03 lr: 3.961336e-03  eta: 4:01:59  time: 0.388503  data_time: 0.154137  memory: 12704  grad_norm: 0.098972  loss: 0.238766  loss_kpt: 0.238766  acc_pose: 0.778020
09/15 15:57:37 - mmengine - INFO - Epoch(train) [134][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:21:09  time: 0.774832  data_time: 0.457712  memory: 16273  loss: 0.362906  loss_kpt: 0.362906  acc_pose: 0.964853
09/15 15:57:46 - mmengine - INFO - Epoch(train) [144][250/291]  base_lr: 3.959797e-03 lr: 3.959797e-03  eta: 4:01:40  time: 0.398067  data_time: 0.164263  memory: 12704  grad_norm: 0.088134  loss: 0.237776  loss_kpt: 0.237776  acc_pose: 0.843541
09/15 15:58:01 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:58:13 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 15:58:21 - mmengine - INFO - Epoch(train) [145][ 50/291]  base_lr: 3.956918e-03 lr: 3.956918e-03  eta: 4:01:04  time: 0.396055  data_time: 0.159854  memory: 12704  grad_norm: 0.114028  loss: 0.240231  loss_kpt: 0.240231  acc_pose: 0.832428
09/15 15:58:39 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 15:58:41 - mmengine - INFO - Epoch(train) [145][100/291]  base_lr: 3.955295e-03 lr: 3.955295e-03  eta: 4:00:44  time: 0.393810  data_time: 0.160640  memory: 12704  grad_norm: 0.094524  loss: 0.237204  loss_kpt: 0.237204  acc_pose: 0.832422
09/15 15:58:53 - mmengine - INFO - Epoch(train) [135][ 50/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:19:54  time: 0.803285  data_time: 0.485081  memory: 16273  loss: 0.363224  loss_kpt: 0.363224  acc_pose: 0.965685
09/15 15:59:01 - mmengine - INFO - Epoch(train) [145][150/291]  base_lr: 3.953642e-03 lr: 3.953642e-03  eta: 4:00:24  time: 0.399269  data_time: 0.165196  memory: 12704  grad_norm: 0.104526  loss: 0.237601  loss_kpt: 0.237601  acc_pose: 0.900732
09/15 15:59:21 - mmengine - INFO - Epoch(train) [145][200/291]  base_lr: 3.951959e-03 lr: 3.951959e-03  eta: 4:00:05  time: 0.396160  data_time: 0.162340  memory: 12704  grad_norm: 0.107974  loss: 0.234845  loss_kpt: 0.234845  acc_pose: 0.822757
09/15 15:59:32 - mmengine - INFO - Epoch(train) [135][100/146]  base_lr: 5.000000e-04 lr: 5.000000e-04  eta: 4:19:15  time: 0.789276  data_time: 0.472801  memory: 16273  loss: 0.363481  loss_kpt: 0.363481  acc_pose: 0.956740
09/15 15:59:40 - mmengine - INFO - Epoch(train) [145][250/291]  base_lr: 3.950247e-03 lr: 3.950247e-03  eta: 3:59:45  time: 0.394551  data_time: 0.157450  memory: 12704  grad_norm: 0.112207  loss: 0.241679  loss_kpt: 0.241679  acc_pose: 0.845529
09/15 15:59:56 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:00:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:00:16 - mmengine - INFO - Epoch(train) [146][ 50/291]  base_lr: 3.947054e-03 lr: 3.947054e-03  eta: 3:59:09  time: 0.401587  data_time: 0.167341  memory: 12704  grad_norm: 0.112393  loss: 0.241799  loss_kpt: 0.241799  acc_pose: 0.870872
09/15 16:00:36 - mmengine - INFO - Epoch(train) [146][100/291]  base_lr: 3.945258e-03 lr: 3.945258e-03  eta: 3:58:49  time: 0.388403  data_time: 0.155340  memory: 12704  grad_norm: 0.105756  loss: 0.237621  loss_kpt: 0.237621  acc_pose: 0.858983
09/15 16:00:48 - mmengine - INFO - Epoch(train) [136][ 50/146]  base_lr: 4.999928e-04 lr: 4.999928e-04  eta: 4:17:59  time: 0.800165  data_time: 0.483114  memory: 16273  loss: 0.370427  loss_kpt: 0.370427  acc_pose: 0.975204
09/15 16:00:56 - mmengine - INFO - Epoch(train) [146][150/291]  base_lr: 3.943433e-03 lr: 3.943433e-03  eta: 3:58:29  time: 0.405193  data_time: 0.170968  memory: 12704  grad_norm: 0.119367  loss: 0.242361  loss_kpt: 0.242361  acc_pose: 0.890643
09/15 16:01:16 - mmengine - INFO - Epoch(train) [146][200/291]  base_lr: 3.941578e-03 lr: 3.941578e-03  eta: 3:58:10  time: 0.398528  data_time: 0.161540  memory: 12704  grad_norm: 0.094996  loss: 0.239872  loss_kpt: 0.239872  acc_pose: 0.779372
09/15 16:01:27 - mmengine - INFO - Epoch(train) [136][100/146]  base_lr: 4.999704e-04 lr: 4.999704e-04  eta: 4:17:20  time: 0.789689  data_time: 0.472060  memory: 16273  loss: 0.363089  loss_kpt: 0.363089  acc_pose: 0.971001
09/15 16:01:36 - mmengine - INFO - Epoch(train) [146][250/291]  base_lr: 3.939694e-03 lr: 3.939694e-03  eta: 3:57:50  time: 0.408697  data_time: 0.174815  memory: 12704  grad_norm: 0.113163  loss: 0.233717  loss_kpt: 0.233717  acc_pose: 0.823733
09/15 16:01:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:02:03 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:02:12 - mmengine - INFO - Epoch(train) [147][ 50/291]  base_lr: 3.936190e-03 lr: 3.936190e-03  eta: 3:57:15  time: 0.408507  data_time: 0.174124  memory: 12704  grad_norm: 0.094745  loss: 0.234816  loss_kpt: 0.234816  acc_pose: 0.791322
09/15 16:02:33 - mmengine - INFO - Epoch(train) [147][100/291]  base_lr: 3.934223e-03 lr: 3.934223e-03  eta: 3:56:56  time: 0.413580  data_time: 0.180000  memory: 12704  grad_norm: 0.093913  loss: 0.237353  loss_kpt: 0.237353  acc_pose: 0.863232
09/15 16:02:44 - mmengine - INFO - Epoch(train) [137][ 50/146]  base_lr: 4.998853e-04 lr: 4.998853e-04  eta: 4:16:05  time: 0.810242  data_time: 0.493577  memory: 16273  loss: 0.362862  loss_kpt: 0.362862  acc_pose: 0.958418
09/15 16:02:52 - mmengine - INFO - Epoch(train) [147][150/291]  base_lr: 3.932226e-03 lr: 3.932226e-03  eta: 3:56:36  time: 0.384293  data_time: 0.146641  memory: 12704  grad_norm: 0.102101  loss: 0.236469  loss_kpt: 0.236469  acc_pose: 0.848342
09/15 16:03:11 - mmengine - INFO - Epoch(train) [147][200/291]  base_lr: 3.930201e-03 lr: 3.930201e-03  eta: 3:56:15  time: 0.383497  data_time: 0.149713  memory: 12704  grad_norm: 0.108661  loss: 0.242924  loss_kpt: 0.242924  acc_pose: 0.823659
09/15 16:03:23 - mmengine - INFO - Epoch(train) [137][100/146]  base_lr: 4.998189e-04 lr: 4.998189e-04  eta: 4:15:25  time: 0.786269  data_time: 0.467284  memory: 16273  loss: 0.364324  loss_kpt: 0.364324  acc_pose: 0.968067
09/15 16:03:31 - mmengine - INFO - Epoch(train) [147][250/291]  base_lr: 3.928146e-03 lr: 3.928146e-03  eta: 3:55:55  time: 0.389431  data_time: 0.152434  memory: 12704  grad_norm: 0.150270  loss: 0.235914  loss_kpt: 0.235914  acc_pose: 0.823650
09/15 16:03:47 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:03:57 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:03:58 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:04:06 - mmengine - INFO - Epoch(train) [148][ 50/291]  base_lr: 3.924331e-03 lr: 3.924331e-03  eta: 3:55:19  time: 0.396570  data_time: 0.163220  memory: 12704  grad_norm: 0.126010  loss: 0.235501  loss_kpt: 0.235501  acc_pose: 0.876297
09/15 16:04:26 - mmengine - INFO - Epoch(train) [148][100/291]  base_lr: 3.922194e-03 lr: 3.922194e-03  eta: 3:54:59  time: 0.396119  data_time: 0.162320  memory: 12704  grad_norm: 0.090463  loss: 0.238850  loss_kpt: 0.238850  acc_pose: 0.828250
09/15 16:04:37 - mmengine - INFO - Epoch(train) [138][ 50/146]  base_lr: 4.996493e-04 lr: 4.996493e-04  eta: 4:14:09  time: 0.789378  data_time: 0.470409  memory: 16273  loss: 0.363949  loss_kpt: 0.363949  acc_pose: 0.967428
09/15 16:04:46 - mmengine - INFO - Epoch(train) [148][150/291]  base_lr: 3.920027e-03 lr: 3.920027e-03  eta: 3:54:39  time: 0.392739  data_time: 0.159186  memory: 12704  grad_norm: 0.126131  loss: 0.236407  loss_kpt: 0.236407  acc_pose: 0.859841
09/15 16:05:05 - mmengine - INFO - Epoch(train) [148][200/291]  base_lr: 3.917832e-03 lr: 3.917832e-03  eta: 3:54:19  time: 0.386233  data_time: 0.152899  memory: 12704  grad_norm: 0.099985  loss: 0.242772  loss_kpt: 0.242772  acc_pose: 0.830509
09/15 16:05:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:05:17 - mmengine - INFO - Epoch(train) [138][100/146]  base_lr: 4.995389e-04 lr: 4.995389e-04  eta: 4:13:30  time: 0.800396  data_time: 0.483606  memory: 16273  loss: 0.365206  loss_kpt: 0.365206  acc_pose: 0.961402
09/15 16:05:25 - mmengine - INFO - Epoch(train) [148][250/291]  base_lr: 3.915608e-03 lr: 3.915608e-03  eta: 3:54:00  time: 0.405455  data_time: 0.171243  memory: 12704  grad_norm: 0.095142  loss: 0.238445  loss_kpt: 0.238445  acc_pose: 0.871762
09/15 16:05:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:05:53 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:06:01 - mmengine - INFO - Epoch(train) [149][ 50/291]  base_lr: 3.911484e-03 lr: 3.911484e-03  eta: 3:53:24  time: 0.398294  data_time: 0.163883  memory: 12704  grad_norm: 0.107898  loss: 0.236887  loss_kpt: 0.236887  acc_pose: 0.806744
09/15 16:06:21 - mmengine - INFO - Epoch(train) [149][100/291]  base_lr: 3.909178e-03 lr: 3.909178e-03  eta: 3:53:04  time: 0.387863  data_time: 0.153273  memory: 12704  grad_norm: 0.097703  loss: 0.237961  loss_kpt: 0.237961  acc_pose: 0.842071
09/15 16:06:33 - mmengine - INFO - Epoch(train) [139][ 50/146]  base_lr: 4.992848e-04 lr: 4.992848e-04  eta: 4:12:14  time: 0.802669  data_time: 0.486288  memory: 16273  loss: 0.366731  loss_kpt: 0.366731  acc_pose: 0.964891
09/15 16:06:40 - mmengine - INFO - Epoch(train) [149][150/291]  base_lr: 3.906843e-03 lr: 3.906843e-03  eta: 3:52:44  time: 0.389890  data_time: 0.156456  memory: 12704  grad_norm: 0.103082  loss: 0.237296  loss_kpt: 0.237296  acc_pose: 0.869899
09/15 16:07:00 - mmengine - INFO - Epoch(train) [149][200/291]  base_lr: 3.904479e-03 lr: 3.904479e-03  eta: 3:52:24  time: 0.397790  data_time: 0.164237  memory: 12704  grad_norm: 0.108941  loss: 0.237358  loss_kpt: 0.237358  acc_pose: 0.844765
09/15 16:07:12 - mmengine - INFO - Epoch(train) [139][100/146]  base_lr: 4.991306e-04 lr: 4.991306e-04  eta: 4:11:35  time: 0.789009  data_time: 0.467697  memory: 16273  loss: 0.364064  loss_kpt: 0.364064  acc_pose: 0.948866
09/15 16:07:20 - mmengine - INFO - Epoch(train) [149][250/291]  base_lr: 3.902086e-03 lr: 3.902086e-03  eta: 3:52:05  time: 0.399172  data_time: 0.164939  memory: 12704  grad_norm: 0.125824  loss: 0.237351  loss_kpt: 0.237351  acc_pose: 0.892615
09/15 16:07:36 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:07:47 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:07:57 - mmengine - INFO - Epoch(train) [150][ 50/291]  base_lr: 3.897657e-03 lr: 3.897657e-03  eta: 3:51:29  time: 0.422789  data_time: 0.188573  memory: 12704  grad_norm: 0.094523  loss: 0.236987  loss_kpt: 0.236987  acc_pose: 0.842105
09/15 16:08:16 - mmengine - INFO - Epoch(train) [150][100/291]  base_lr: 3.895183e-03 lr: 3.895183e-03  eta: 3:51:09  time: 0.390354  data_time: 0.156440  memory: 12704  grad_norm: 0.106398  loss: 0.234671  loss_kpt: 0.234671  acc_pose: 0.758498
09/15 16:08:28 - mmengine - INFO - Epoch(train) [140][ 50/146]  base_lr: 4.987922e-04 lr: 4.987922e-04  eta: 4:10:19  time: 0.818103  data_time: 0.501356  memory: 16273  loss: 0.366237  loss_kpt: 0.366237  acc_pose: 0.954410
09/15 16:08:36 - mmengine - INFO - Epoch(train) [150][150/291]  base_lr: 3.892680e-03 lr: 3.892680e-03  eta: 3:50:50  time: 0.390661  data_time: 0.157893  memory: 12704  grad_norm: 0.095119  loss: 0.237345  loss_kpt: 0.237345  acc_pose: 0.831763
09/15 16:08:56 - mmengine - INFO - Epoch(train) [150][200/291]  base_lr: 3.890149e-03 lr: 3.890149e-03  eta: 3:50:30  time: 0.401903  data_time: 0.167964  memory: 12704  grad_norm: 0.120897  loss: 0.239752  loss_kpt: 0.239752  acc_pose: 0.809214
09/15 16:09:07 - mmengine - INFO - Epoch(train) [140][100/146]  base_lr: 4.985940e-04 lr: 4.985940e-04  eta: 4:09:39  time: 0.777550  data_time: 0.461973  memory: 16273  loss: 0.362745  loss_kpt: 0.362745  acc_pose: 0.972298
09/15 16:09:15 - mmengine - INFO - Epoch(train) [150][250/291]  base_lr: 3.887589e-03 lr: 3.887589e-03  eta: 3:50:10  time: 0.382279  data_time: 0.148074  memory: 12704  grad_norm: 0.128633  loss: 0.236382  loss_kpt: 0.236382  acc_pose: 0.868306
09/15 16:09:31 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:09:31 - mmengine - INFO - Saving checkpoint at 150 epochs
09/15 16:09:42 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:09:42 - mmengine - INFO - Saving checkpoint at 140 epochs
09/15 16:09:44 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.718
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.958
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.814
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.718
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.800
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.976
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.888
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.800
09/15 16:09:44 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 16:09:44 - mmengine - INFO - Evaluating AUC...
09/15 16:09:44 - mmengine - INFO - Evaluating NME...
09/15 16:09:44 - mmengine - INFO - Epoch(val) [150][38/38]    coco/AP: 0.718193  coco/AP .5: 0.958115  coco/AP .75: 0.814386  coco/AP (L): -1.000000  coco/AR: 0.718193  coco/AR .5: 0.800000  coco/AR .75: 0.976431  coco/AR (L): 0.888047  PCK: 0.911203  AUC: 0.563640  NME: 0.350077  data_time: 0.154717  time: 0.264115
09/15 16:09:44 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/3/best_coco_AP_epoch_100.pth is removed
09/15 16:09:45 - mmengine - INFO - The best checkpoint with 0.7182 coco/AP at 150 epoch is saved to best_coco_AP_epoch_150.pth.
09/15 16:10:08 - mmengine - INFO - Epoch(train) [151][ 50/291]  base_lr: 3.882856e-03 lr: 3.882856e-03  eta: 3:49:34  time: 0.415354  data_time: 0.181028  memory: 12704  grad_norm: 0.106245  loss: 0.239879  loss_kpt: 0.239879  acc_pose: 0.811108
09/15 16:10:24 - mmengine - INFO - Epoch(train) [141][ 50/146]  base_lr: 4.981716e-04 lr: 4.981716e-04  eta: 4:08:24  time: 0.812401  data_time: 0.496416  memory: 16273  loss: 0.367874  loss_kpt: 0.367874  acc_pose: 0.980364
09/15 16:10:28 - mmengine - INFO - Epoch(train) [151][100/291]  base_lr: 3.880215e-03 lr: 3.880215e-03  eta: 3:49:15  time: 0.394531  data_time: 0.160653  memory: 12704  grad_norm: 0.112563  loss: 0.237146  loss_kpt: 0.237146  acc_pose: 0.783831
09/15 16:10:47 - mmengine - INFO - Epoch(train) [151][150/291]  base_lr: 3.877546e-03 lr: 3.877546e-03  eta: 3:48:55  time: 0.398156  data_time: 0.164435  memory: 12704  grad_norm: 0.101149  loss: 0.239549  loss_kpt: 0.239549  acc_pose: 0.830848
09/15 16:11:04 - mmengine - INFO - Epoch(train) [141][100/146]  base_lr: 4.979297e-04 lr: 4.979297e-04  eta: 4:07:45  time: 0.790852  data_time: 0.473631  memory: 16273  loss: 0.363360  loss_kpt: 0.363360  acc_pose: 0.940788
09/15 16:11:07 - mmengine - INFO - Epoch(train) [151][200/291]  base_lr: 3.874849e-03 lr: 3.874849e-03  eta: 3:48:35  time: 0.393733  data_time: 0.159374  memory: 12704  grad_norm: 0.096923  loss: 0.239009  loss_kpt: 0.239009  acc_pose: 0.824306
09/15 16:11:26 - mmengine - INFO - Epoch(train) [151][250/291]  base_lr: 3.872123e-03 lr: 3.872123e-03  eta: 3:48:15  time: 0.383145  data_time: 0.149487  memory: 12704  grad_norm: 0.103777  loss: 0.235044  loss_kpt: 0.235044  acc_pose: 0.899603
09/15 16:11:40 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:11:42 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:12:03 - mmengine - INFO - Epoch(train) [152][ 50/291]  base_lr: 3.867089e-03 lr: 3.867089e-03  eta: 3:47:39  time: 0.413762  data_time: 0.179172  memory: 12704  grad_norm: 0.105802  loss: 0.234387  loss_kpt: 0.234387  acc_pose: 0.888518
09/15 16:12:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:12:20 - mmengine - INFO - Epoch(train) [142][ 50/146]  base_lr: 4.974233e-04 lr: 4.974233e-04  eta: 4:06:30  time: 0.798413  data_time: 0.482047  memory: 16273  loss: 0.361723  loss_kpt: 0.361723  acc_pose: 0.965440
09/15 16:12:22 - mmengine - INFO - Epoch(train) [152][100/291]  base_lr: 3.864284e-03 lr: 3.864284e-03  eta: 3:47:19  time: 0.387386  data_time: 0.151020  memory: 12704  grad_norm: 0.087236  loss: 0.239267  loss_kpt: 0.239267  acc_pose: 0.860362
09/15 16:12:42 - mmengine - INFO - Epoch(train) [152][150/291]  base_lr: 3.861450e-03 lr: 3.861450e-03  eta: 3:47:00  time: 0.393584  data_time: 0.159717  memory: 12704  grad_norm: 0.105321  loss: 0.239204  loss_kpt: 0.239204  acc_pose: 0.845142
09/15 16:12:59 - mmengine - INFO - Epoch(train) [142][100/146]  base_lr: 4.971378e-04 lr: 4.971378e-04  eta: 4:05:50  time: 0.782557  data_time: 0.463146  memory: 16273  loss: 0.362611  loss_kpt: 0.362611  acc_pose: 0.976911
09/15 16:13:01 - mmengine - INFO - Epoch(train) [152][200/291]  base_lr: 3.858588e-03 lr: 3.858588e-03  eta: 3:46:40  time: 0.390708  data_time: 0.155697  memory: 12704  grad_norm: 0.097624  loss: 0.239244  loss_kpt: 0.239244  acc_pose: 0.798359
09/15 16:13:21 - mmengine - INFO - Epoch(train) [152][250/291]  base_lr: 3.855698e-03 lr: 3.855698e-03  eta: 3:46:20  time: 0.393922  data_time: 0.160191  memory: 12704  grad_norm: 0.100053  loss: 0.233964  loss_kpt: 0.233964  acc_pose: 0.840716
09/15 16:13:34 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:13:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:13:57 - mmengine - INFO - Epoch(train) [153][ 50/291]  base_lr: 3.850366e-03 lr: 3.850366e-03  eta: 3:45:44  time: 0.416053  data_time: 0.181806  memory: 12704  grad_norm: 0.096759  loss: 0.237754  loss_kpt: 0.237754  acc_pose: 0.813859
09/15 16:14:15 - mmengine - INFO - Epoch(train) [143][ 50/146]  base_lr: 4.965479e-04 lr: 4.965479e-04  eta: 4:04:35  time: 0.807054  data_time: 0.488418  memory: 16273  loss: 0.366644  loss_kpt: 0.366644  acc_pose: 0.958636
09/15 16:14:17 - mmengine - INFO - Epoch(train) [153][100/291]  base_lr: 3.847397e-03 lr: 3.847397e-03  eta: 3:45:24  time: 0.384394  data_time: 0.150311  memory: 12704  grad_norm: 0.109547  loss: 0.237431  loss_kpt: 0.237431  acc_pose: 0.760503
09/15 16:14:37 - mmengine - INFO - Epoch(train) [153][150/291]  base_lr: 3.844400e-03 lr: 3.844400e-03  eta: 3:45:05  time: 0.398404  data_time: 0.164355  memory: 12704  grad_norm: 0.108070  loss: 0.237795  loss_kpt: 0.237795  acc_pose: 0.860449
09/15 16:14:54 - mmengine - INFO - Epoch(train) [143][100/146]  base_lr: 4.962189e-04 lr: 4.962189e-04  eta: 4:03:55  time: 0.780268  data_time: 0.460225  memory: 16273  loss: 0.363621  loss_kpt: 0.363621  acc_pose: 0.976494
09/15 16:14:56 - mmengine - INFO - Epoch(train) [153][200/291]  base_lr: 3.841375e-03 lr: 3.841375e-03  eta: 3:44:44  time: 0.384137  data_time: 0.150524  memory: 12704  grad_norm: 0.090166  loss: 0.238099  loss_kpt: 0.238099  acc_pose: 0.849030
09/15 16:15:16 - mmengine - INFO - Epoch(train) [153][250/291]  base_lr: 3.838322e-03 lr: 3.838322e-03  eta: 3:44:25  time: 0.399973  data_time: 0.166011  memory: 12704  grad_norm: 0.124191  loss: 0.234393  loss_kpt: 0.234393  acc_pose: 0.830445
09/15 16:15:28 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:15:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:15:52 - mmengine - INFO - Epoch(train) [154][ 50/291]  base_lr: 3.832695e-03 lr: 3.832695e-03  eta: 3:43:49  time: 0.407573  data_time: 0.173460  memory: 12704  grad_norm: 0.117593  loss: 0.236595  loss_kpt: 0.236595  acc_pose: 0.817522
09/15 16:16:09 - mmengine - INFO - Epoch(train) [144][ 50/146]  base_lr: 4.955457e-04 lr: 4.955457e-04  eta: 4:02:39  time: 0.804162  data_time: 0.487652  memory: 16273  loss: 0.359533  loss_kpt: 0.359533  acc_pose: 0.983593
09/15 16:16:12 - mmengine - INFO - Epoch(train) [154][100/291]  base_lr: 3.829564e-03 lr: 3.829564e-03  eta: 3:43:29  time: 0.393671  data_time: 0.159428  memory: 12704  grad_norm: 0.094703  loss: 0.232681  loss_kpt: 0.232681  acc_pose: 0.880586
09/15 16:16:31 - mmengine - INFO - Epoch(train) [154][150/291]  base_lr: 3.826405e-03 lr: 3.826405e-03  eta: 3:43:09  time: 0.387133  data_time: 0.152540  memory: 12704  grad_norm: 0.102534  loss: 0.238185  loss_kpt: 0.238185  acc_pose: 0.825596
09/15 16:16:48 - mmengine - INFO - Epoch(train) [144][100/146]  base_lr: 4.951734e-04 lr: 4.951734e-04  eta: 4:02:00  time: 0.792478  data_time: 0.473240  memory: 16273  loss: 0.364104  loss_kpt: 0.364104  acc_pose: 0.981765
09/15 16:16:51 - mmengine - INFO - Epoch(train) [154][200/291]  base_lr: 3.823219e-03 lr: 3.823219e-03  eta: 3:42:50  time: 0.403997  data_time: 0.170145  memory: 12704  grad_norm: 0.114547  loss: 0.238670  loss_kpt: 0.238670  acc_pose: 0.811392
09/15 16:17:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:17:11 - mmengine - INFO - Epoch(train) [154][250/291]  base_lr: 3.820005e-03 lr: 3.820005e-03  eta: 3:42:30  time: 0.398426  data_time: 0.163943  memory: 12704  grad_norm: 0.091260  loss: 0.238850  loss_kpt: 0.238850  acc_pose: 0.882114
09/15 16:17:23 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:17:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:17:47 - mmengine - INFO - Epoch(train) [155][ 50/291]  base_lr: 3.814085e-03 lr: 3.814085e-03  eta: 3:41:54  time: 0.404543  data_time: 0.171662  memory: 12704  grad_norm: 0.138858  loss: 0.237990  loss_kpt: 0.237990  acc_pose: 0.848987
09/15 16:18:04 - mmengine - INFO - Epoch(train) [145][ 50/146]  base_lr: 4.944173e-04 lr: 4.944173e-04  eta: 4:00:44  time: 0.808821  data_time: 0.492921  memory: 16273  loss: 0.367238  loss_kpt: 0.367238  acc_pose: 0.953976
09/15 16:18:06 - mmengine - INFO - Epoch(train) [155][100/291]  base_lr: 3.810794e-03 lr: 3.810794e-03  eta: 3:41:34  time: 0.386386  data_time: 0.148575  memory: 12704  grad_norm: 0.101736  loss: 0.242755  loss_kpt: 0.242755  acc_pose: 0.873646
09/15 16:18:26 - mmengine - INFO - Epoch(train) [155][150/291]  base_lr: 3.807475e-03 lr: 3.807475e-03  eta: 3:41:14  time: 0.397775  data_time: 0.164117  memory: 12704  grad_norm: 0.100309  loss: 0.239128  loss_kpt: 0.239128  acc_pose: 0.833794
09/15 16:18:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:18:43 - mmengine - INFO - Epoch(train) [145][100/146]  base_lr: 4.940020e-04 lr: 4.940020e-04  eta: 4:00:05  time: 0.783418  data_time: 0.464396  memory: 16273  loss: 0.364014  loss_kpt: 0.364014  acc_pose: 0.968621
09/15 16:18:46 - mmengine - INFO - Epoch(train) [155][200/291]  base_lr: 3.804130e-03 lr: 3.804130e-03  eta: 3:40:55  time: 0.394946  data_time: 0.161155  memory: 12704  grad_norm: 0.090552  loss: 0.233104  loss_kpt: 0.233104  acc_pose: 0.818071
09/15 16:19:06 - mmengine - INFO - Epoch(train) [155][250/291]  base_lr: 3.800756e-03 lr: 3.800756e-03  eta: 3:40:35  time: 0.387818  data_time: 0.149675  memory: 12704  grad_norm: 0.113655  loss: 0.238984  loss_kpt: 0.238984  acc_pose: 0.789862
09/15 16:19:18 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:19:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:19:42 - mmengine - INFO - Epoch(train) [156][ 50/291]  base_lr: 3.794548e-03 lr: 3.794548e-03  eta: 3:39:59  time: 0.413028  data_time: 0.178979  memory: 12704  grad_norm: 0.115225  loss: 0.239148  loss_kpt: 0.239148  acc_pose: 0.800654
09/15 16:19:58 - mmengine - INFO - Epoch(train) [146][ 50/146]  base_lr: 4.931633e-04 lr: 4.931633e-04  eta: 3:58:49  time: 0.797249  data_time: 0.481075  memory: 16273  loss: 0.365279  loss_kpt: 0.365279  acc_pose: 0.956351
09/15 16:20:02 - mmengine - INFO - Epoch(train) [156][100/291]  base_lr: 3.791098e-03 lr: 3.791098e-03  eta: 3:39:39  time: 0.393225  data_time: 0.158741  memory: 12704  grad_norm: 0.094604  loss: 0.237035  loss_kpt: 0.237035  acc_pose: 0.816163
09/15 16:20:21 - mmengine - INFO - Epoch(train) [156][150/291]  base_lr: 3.787621e-03 lr: 3.787621e-03  eta: 3:39:19  time: 0.386294  data_time: 0.151780  memory: 12704  grad_norm: 0.090496  loss: 0.233628  loss_kpt: 0.233628  acc_pose: 0.870169
09/15 16:20:37 - mmengine - INFO - Epoch(train) [146][100/146]  base_lr: 4.927051e-04 lr: 4.927051e-04  eta: 3:58:09  time: 0.789830  data_time: 0.473830  memory: 16273  loss: 0.367508  loss_kpt: 0.367508  acc_pose: 0.969645
09/15 16:20:40 - mmengine - INFO - Epoch(train) [156][200/291]  base_lr: 3.784118e-03 lr: 3.784118e-03  eta: 3:38:59  time: 0.385439  data_time: 0.151752  memory: 12704  grad_norm: 0.116060  loss: 0.236652  loss_kpt: 0.236652  acc_pose: 0.821583
09/15 16:21:00 - mmengine - INFO - Epoch(train) [156][250/291]  base_lr: 3.780587e-03 lr: 3.780587e-03  eta: 3:38:39  time: 0.386919  data_time: 0.150882  memory: 12704  grad_norm: 0.108891  loss: 0.236626  loss_kpt: 0.236626  acc_pose: 0.792578
09/15 16:21:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:21:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:21:36 - mmengine - INFO - Epoch(train) [157][ 50/291]  base_lr: 3.774092e-03 lr: 3.774092e-03  eta: 3:38:03  time: 0.396771  data_time: 0.162674  memory: 12704  grad_norm: 0.091932  loss: 0.235269  loss_kpt: 0.235269  acc_pose: 0.839163
09/15 16:21:54 - mmengine - INFO - Epoch(train) [147][ 50/146]  base_lr: 4.917845e-04 lr: 4.917845e-04  eta: 3:56:55  time: 0.828527  data_time: 0.513176  memory: 16273  loss: 0.363100  loss_kpt: 0.363100  acc_pose: 0.960268
09/15 16:21:55 - mmengine - INFO - Epoch(train) [157][100/291]  base_lr: 3.770486e-03 lr: 3.770486e-03  eta: 3:37:43  time: 0.392025  data_time: 0.158635  memory: 12704  grad_norm: 0.114133  loss: 0.234781  loss_kpt: 0.234781  acc_pose: 0.819428
09/15 16:22:15 - mmengine - INFO - Epoch(train) [157][150/291]  base_lr: 3.766853e-03 lr: 3.766853e-03  eta: 3:37:24  time: 0.395498  data_time: 0.161370  memory: 12704  grad_norm: 0.098725  loss: 0.235422  loss_kpt: 0.235422  acc_pose: 0.854373
09/15 16:22:32 - mmengine - INFO - Epoch(train) [147][100/146]  base_lr: 4.912837e-04 lr: 4.912837e-04  eta: 3:56:14  time: 0.770858  data_time: 0.451359  memory: 16273  loss: 0.364394  loss_kpt: 0.364394  acc_pose: 0.957139
09/15 16:22:35 - mmengine - INFO - Epoch(train) [157][200/291]  base_lr: 3.763193e-03 lr: 3.763193e-03  eta: 3:37:04  time: 0.395592  data_time: 0.162130  memory: 12704  grad_norm: 0.117806  loss: 0.238895  loss_kpt: 0.238895  acc_pose: 0.882768
09/15 16:22:54 - mmengine - INFO - Epoch(train) [157][250/291]  base_lr: 3.759507e-03 lr: 3.759507e-03  eta: 3:36:44  time: 0.391707  data_time: 0.157451  memory: 12704  grad_norm: 0.120319  loss: 0.239951  loss_kpt: 0.239951  acc_pose: 0.754390
09/15 16:23:07 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:23:11 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:23:32 - mmengine - INFO - Epoch(train) [158][ 50/291]  base_lr: 3.752730e-03 lr: 3.752730e-03  eta: 3:36:09  time: 0.421582  data_time: 0.187430  memory: 12704  grad_norm: 0.105730  loss: 0.230384  loss_kpt: 0.230384  acc_pose: 0.836812
09/15 16:23:47 - mmengine - INFO - Epoch(train) [148][ 50/146]  base_lr: 4.902814e-04 lr: 4.902814e-04  eta: 3:54:58  time: 0.793184  data_time: 0.474629  memory: 16273  loss: 0.356328  loss_kpt: 0.356328  acc_pose: 0.980272
09/15 16:23:51 - mmengine - INFO - Epoch(train) [158][100/291]  base_lr: 3.748970e-03 lr: 3.748970e-03  eta: 3:35:49  time: 0.389689  data_time: 0.155870  memory: 12704  grad_norm: 0.099476  loss: 0.235477  loss_kpt: 0.235477  acc_pose: 0.891224
09/15 16:24:12 - mmengine - INFO - Epoch(train) [158][150/291]  base_lr: 3.745182e-03 lr: 3.745182e-03  eta: 3:35:30  time: 0.405748  data_time: 0.172275  memory: 12704  grad_norm: 0.094221  loss: 0.233375  loss_kpt: 0.233375  acc_pose: 0.909243
09/15 16:24:26 - mmengine - INFO - Epoch(train) [148][100/146]  base_lr: 4.897383e-04 lr: 4.897383e-04  eta: 3:54:18  time: 0.785850  data_time: 0.469584  memory: 16273  loss: 0.360549  loss_kpt: 0.360549  acc_pose: 0.978625
09/15 16:24:31 - mmengine - INFO - Epoch(train) [158][200/291]  base_lr: 3.741369e-03 lr: 3.741369e-03  eta: 3:35:10  time: 0.389164  data_time: 0.155367  memory: 12704  grad_norm: 0.087626  loss: 0.234323  loss_kpt: 0.234323  acc_pose: 0.795009
09/15 16:24:50 - mmengine - INFO - Epoch(train) [158][250/291]  base_lr: 3.737529e-03 lr: 3.737529e-03  eta: 3:34:50  time: 0.381903  data_time: 0.147721  memory: 12704  grad_norm: 0.102590  loss: 0.238866  loss_kpt: 0.238866  acc_pose: 0.811406
09/15 16:25:03 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:25:07 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:25:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:25:27 - mmengine - INFO - Epoch(train) [159][ 50/291]  base_lr: 3.730474e-03 lr: 3.730474e-03  eta: 3:34:14  time: 0.404499  data_time: 0.170268  memory: 12704  grad_norm: 0.118679  loss: 0.240090  loss_kpt: 0.240090  acc_pose: 0.750209
09/15 16:25:42 - mmengine - INFO - Epoch(train) [149][ 50/146]  base_lr: 4.886550e-04 lr: 4.886550e-04  eta: 3:53:03  time: 0.785413  data_time: 0.467757  memory: 16273  loss: 0.361574  loss_kpt: 0.361574  acc_pose: 0.958742
09/15 16:25:47 - mmengine - INFO - Epoch(train) [159][100/291]  base_lr: 3.726560e-03 lr: 3.726560e-03  eta: 3:33:54  time: 0.394657  data_time: 0.160290  memory: 12704  grad_norm: 0.102452  loss: 0.238440  loss_kpt: 0.238440  acc_pose: 0.826757
09/15 16:26:06 - mmengine - INFO - Epoch(train) [159][150/291]  base_lr: 3.722621e-03 lr: 3.722621e-03  eta: 3:33:35  time: 0.396365  data_time: 0.161404  memory: 12704  grad_norm: 0.086447  loss: 0.233808  loss_kpt: 0.233808  acc_pose: 0.839004
09/15 16:26:22 - mmengine - INFO - Epoch(train) [149][100/146]  base_lr: 4.880698e-04 lr: 4.880698e-04  eta: 3:52:24  time: 0.802193  data_time: 0.485371  memory: 16273  loss: 0.364431  loss_kpt: 0.364431  acc_pose: 0.956024
09/15 16:26:26 - mmengine - INFO - Epoch(train) [159][200/291]  base_lr: 3.718655e-03 lr: 3.718655e-03  eta: 3:33:15  time: 0.394129  data_time: 0.159742  memory: 12704  grad_norm: 0.081877  loss: 0.234419  loss_kpt: 0.234419  acc_pose: 0.774857
09/15 16:26:46 - mmengine - INFO - Epoch(train) [159][250/291]  base_lr: 3.714664e-03 lr: 3.714664e-03  eta: 3:32:55  time: 0.392103  data_time: 0.158031  memory: 12704  grad_norm: 0.092374  loss: 0.231045  loss_kpt: 0.231045  acc_pose: 0.897695
09/15 16:26:57 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:27:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:27:22 - mmengine - INFO - Epoch(train) [160][ 50/291]  base_lr: 3.707334e-03 lr: 3.707334e-03  eta: 3:32:19  time: 0.399609  data_time: 0.165063  memory: 12704  grad_norm: 0.107239  loss: 0.235764  loss_kpt: 0.235764  acc_pose: 0.843714
09/15 16:27:38 - mmengine - INFO - Epoch(train) [150][ 50/146]  base_lr: 4.869062e-04 lr: 4.869062e-04  eta: 3:51:09  time: 0.809490  data_time: 0.492292  memory: 16273  loss: 0.361546  loss_kpt: 0.361546  acc_pose: 0.951405
09/15 16:27:41 - mmengine - INFO - Epoch(train) [160][100/291]  base_lr: 3.703270e-03 lr: 3.703270e-03  eta: 3:31:59  time: 0.392551  data_time: 0.158418  memory: 12704  grad_norm: 0.108322  loss: 0.235182  loss_kpt: 0.235182  acc_pose: 0.840643
09/15 16:28:02 - mmengine - INFO - Epoch(train) [160][150/291]  base_lr: 3.699180e-03 lr: 3.699180e-03  eta: 3:31:40  time: 0.406833  data_time: 0.173600  memory: 12704  grad_norm: 0.093069  loss: 0.234446  loss_kpt: 0.234446  acc_pose: 0.838843
09/15 16:28:17 - mmengine - INFO - Epoch(train) [150][100/146]  base_lr: 4.862793e-04 lr: 4.862793e-04  eta: 3:50:29  time: 0.781220  data_time: 0.460535  memory: 16273  loss: 0.363285  loss_kpt: 0.363285  acc_pose: 0.972576
09/15 16:28:22 - mmengine - INFO - Epoch(train) [160][200/291]  base_lr: 3.695065e-03 lr: 3.695065e-03  eta: 3:31:20  time: 0.405512  data_time: 0.170327  memory: 12704  grad_norm: 0.078513  loss: 0.233616  loss_kpt: 0.233616  acc_pose: 0.885926
09/15 16:28:42 - mmengine - INFO - Epoch(train) [160][250/291]  base_lr: 3.690925e-03 lr: 3.690925e-03  eta: 3:31:01  time: 0.397773  data_time: 0.163662  memory: 12704  grad_norm: 0.091480  loss: 0.236269  loss_kpt: 0.236269  acc_pose: 0.833102
09/15 16:28:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:28:52 - mmengine - INFO - Saving checkpoint at 150 epochs
09/15 16:28:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:28:58 - mmengine - INFO - Saving checkpoint at 160 epochs
09/15 16:29:04 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.42s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.804
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.976
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.900
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.804
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.863
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.987
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.939
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.863
09/15 16:29:04 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 16:29:04 - mmengine - INFO - Evaluating AUC...
09/15 16:29:04 - mmengine - INFO - Evaluating NME...
09/15 16:29:04 - mmengine - INFO - Epoch(val) [150][19/19]    coco/AP: 0.804183  coco/AP .5: 0.975501  coco/AP .75: 0.899986  coco/AP (L): -1.000000  coco/AR: 0.804183  coco/AR .5: 0.863131  coco/AR .75: 0.986532  coco/AR (L): 0.938552  PCK: 0.939523  AUC: 0.628237  NME: 0.281559  data_time: 0.357619  time: 0.512830
09/15 16:29:05 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/2/best_coco_AP_epoch_100.pth is removed
09/15 16:29:05 - mmengine - INFO - The best checkpoint with 0.8042 coco/AP at 150 epoch is saved to best_coco_AP_epoch_150.pth.
09/15 16:29:20 - mmengine - INFO - Epoch(train) [161][ 50/291]  base_lr: 3.683323e-03 lr: 3.683323e-03  eta: 3:30:25  time: 0.408684  data_time: 0.174171  memory: 12704  grad_norm: 0.093922  loss: 0.234680  loss_kpt: 0.234680  acc_pose: 0.905918
09/15 16:29:39 - mmengine - INFO - Epoch(train) [161][100/291]  base_lr: 3.679111e-03 lr: 3.679111e-03  eta: 3:30:05  time: 0.385529  data_time: 0.149536  memory: 12704  grad_norm: 0.104481  loss: 0.238995  loss_kpt: 0.238995  acc_pose: 0.805228
09/15 16:29:48 - mmengine - INFO - Epoch(train) [151][ 50/146]  base_lr: 4.850358e-04 lr: 4.850358e-04  eta: 3:49:14  time: 0.821975  data_time: 0.505585  memory: 16273  loss: 0.360147  loss_kpt: 0.360147  acc_pose: 0.957769
09/15 16:29:59 - mmengine - INFO - Epoch(train) [161][150/291]  base_lr: 3.674874e-03 lr: 3.674874e-03  eta: 3:29:46  time: 0.400110  data_time: 0.166311  memory: 12704  grad_norm: 0.075461  loss: 0.230665  loss_kpt: 0.230665  acc_pose: 0.823835
09/15 16:30:19 - mmengine - INFO - Epoch(train) [161][200/291]  base_lr: 3.670611e-03 lr: 3.670611e-03  eta: 3:29:26  time: 0.385397  data_time: 0.151034  memory: 12704  grad_norm: 0.096091  loss: 0.237732  loss_kpt: 0.237732  acc_pose: 0.797711
09/15 16:30:26 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:30:26 - mmengine - INFO - Epoch(train) [151][100/146]  base_lr: 4.843675e-04 lr: 4.843675e-04  eta: 3:48:35  time: 0.774366  data_time: 0.454727  memory: 16273  loss: 0.362863  loss_kpt: 0.362863  acc_pose: 0.961214
09/15 16:30:38 - mmengine - INFO - Epoch(train) [161][250/291]  base_lr: 3.666324e-03 lr: 3.666324e-03  eta: 3:29:06  time: 0.392748  data_time: 0.158268  memory: 12704  grad_norm: 0.107338  loss: 0.232998  loss_kpt: 0.232998  acc_pose: 0.872841
09/15 16:30:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:31:01 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:31:15 - mmengine - INFO - Epoch(train) [162][ 50/291]  base_lr: 3.658456e-03 lr: 3.658456e-03  eta: 3:28:30  time: 0.401813  data_time: 0.168341  memory: 12704  grad_norm: 0.102081  loss: 0.233302  loss_kpt: 0.233302  acc_pose: 0.843474
09/15 16:31:34 - mmengine - INFO - Epoch(train) [162][100/291]  base_lr: 3.654098e-03 lr: 3.654098e-03  eta: 3:28:10  time: 0.380868  data_time: 0.146928  memory: 12704  grad_norm: 0.090495  loss: 0.235337  loss_kpt: 0.235337  acc_pose: 0.816440
09/15 16:31:42 - mmengine - INFO - Epoch(train) [152][ 50/146]  base_lr: 4.830449e-04 lr: 4.830449e-04  eta: 3:47:19  time: 0.811152  data_time: 0.494814  memory: 16273  loss: 0.361950  loss_kpt: 0.361950  acc_pose: 0.972342
09/15 16:31:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:31:54 - mmengine - INFO - Epoch(train) [162][150/291]  base_lr: 3.649715e-03 lr: 3.649715e-03  eta: 3:27:51  time: 0.402989  data_time: 0.169550  memory: 12704  grad_norm: 0.111467  loss: 0.235624  loss_kpt: 0.235624  acc_pose: 0.875083
09/15 16:32:14 - mmengine - INFO - Epoch(train) [162][200/291]  base_lr: 3.645307e-03 lr: 3.645307e-03  eta: 3:27:31  time: 0.389921  data_time: 0.154485  memory: 12704  grad_norm: 0.078083  loss: 0.238611  loss_kpt: 0.238611  acc_pose: 0.895612
09/15 16:32:22 - mmengine - INFO - Epoch(train) [152][100/146]  base_lr: 4.823356e-04 lr: 4.823356e-04  eta: 3:46:40  time: 0.791361  data_time: 0.475565  memory: 16273  loss: 0.364444  loss_kpt: 0.364444  acc_pose: 0.983615
09/15 16:32:33 - mmengine - INFO - Epoch(train) [162][250/291]  base_lr: 3.640875e-03 lr: 3.640875e-03  eta: 3:27:11  time: 0.391396  data_time: 0.157221  memory: 12704  grad_norm: 0.130372  loss: 0.238774  loss_kpt: 0.238774  acc_pose: 0.850814
09/15 16:32:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:32:57 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:33:10 - mmengine - INFO - Epoch(train) [163][ 50/291]  base_lr: 3.632744e-03 lr: 3.632744e-03  eta: 3:26:35  time: 0.405722  data_time: 0.171570  memory: 12704  grad_norm: 0.117070  loss: 0.235679  loss_kpt: 0.235679  acc_pose: 0.801963
09/15 16:33:30 - mmengine - INFO - Epoch(train) [163][100/291]  base_lr: 3.628243e-03 lr: 3.628243e-03  eta: 3:26:15  time: 0.396642  data_time: 0.162536  memory: 12704  grad_norm: 0.089635  loss: 0.234500  loss_kpt: 0.234500  acc_pose: 0.818458
09/15 16:33:38 - mmengine - INFO - Epoch(train) [153][ 50/146]  base_lr: 4.809346e-04 lr: 4.809346e-04  eta: 3:45:25  time: 0.819194  data_time: 0.500070  memory: 16273  loss: 0.359873  loss_kpt: 0.359873  acc_pose: 0.977804
09/15 16:33:49 - mmengine - INFO - Epoch(train) [163][150/291]  base_lr: 3.623716e-03 lr: 3.623716e-03  eta: 3:25:56  time: 0.397863  data_time: 0.163803  memory: 12704  grad_norm: 0.094126  loss: 0.232382  loss_kpt: 0.232382  acc_pose: 0.844738
09/15 16:34:09 - mmengine - INFO - Epoch(train) [163][200/291]  base_lr: 3.619166e-03 lr: 3.619166e-03  eta: 3:25:36  time: 0.386173  data_time: 0.151245  memory: 12704  grad_norm: 0.102494  loss: 0.239141  loss_kpt: 0.239141  acc_pose: 0.869182
09/15 16:34:17 - mmengine - INFO - Epoch(train) [153][100/146]  base_lr: 4.801846e-04 lr: 4.801846e-04  eta: 3:44:45  time: 0.772069  data_time: 0.456045  memory: 16273  loss: 0.361124  loss_kpt: 0.361124  acc_pose: 0.972915
09/15 16:34:29 - mmengine - INFO - Epoch(train) [163][250/291]  base_lr: 3.614591e-03 lr: 3.614591e-03  eta: 3:25:16  time: 0.399649  data_time: 0.165420  memory: 12704  grad_norm: 0.093975  loss: 0.232012  loss_kpt: 0.232012  acc_pose: 0.823746
09/15 16:34:44 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:34:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:35:04 - mmengine - INFO - Epoch(train) [164][ 50/291]  base_lr: 3.606203e-03 lr: 3.606203e-03  eta: 3:24:40  time: 0.401059  data_time: 0.166180  memory: 12704  grad_norm: 0.101309  loss: 0.234093  loss_kpt: 0.234093  acc_pose: 0.853141
09/15 16:35:24 - mmengine - INFO - Epoch(train) [164][100/291]  base_lr: 3.601560e-03 lr: 3.601560e-03  eta: 3:24:20  time: 0.401323  data_time: 0.167168  memory: 12704  grad_norm: 0.088526  loss: 0.235812  loss_kpt: 0.235812  acc_pose: 0.851391
09/15 16:35:32 - mmengine - INFO - Epoch(train) [154][ 50/146]  base_lr: 4.787060e-04 lr: 4.787060e-04  eta: 3:43:29  time: 0.810305  data_time: 0.494573  memory: 16273  loss: 0.362535  loss_kpt: 0.362535  acc_pose: 0.965660
09/15 16:35:44 - mmengine - INFO - Epoch(train) [164][150/291]  base_lr: 3.596893e-03 lr: 3.596893e-03  eta: 3:24:01  time: 0.395082  data_time: 0.160249  memory: 12704  grad_norm: 0.102827  loss: 0.235715  loss_kpt: 0.235715  acc_pose: 0.801770
09/15 16:36:04 - mmengine - INFO - Epoch(train) [164][200/291]  base_lr: 3.592202e-03 lr: 3.592202e-03  eta: 3:23:41  time: 0.403488  data_time: 0.169504  memory: 12704  grad_norm: 0.107218  loss: 0.235687  loss_kpt: 0.235687  acc_pose: 0.879797
09/15 16:36:11 - mmengine - INFO - Epoch(train) [154][100/146]  base_lr: 4.779158e-04 lr: 4.779158e-04  eta: 3:42:50  time: 0.778295  data_time: 0.462458  memory: 16273  loss: 0.365290  loss_kpt: 0.365290  acc_pose: 0.945553
09/15 16:36:25 - mmengine - INFO - Epoch(train) [164][250/291]  base_lr: 3.587487e-03 lr: 3.587487e-03  eta: 3:23:22  time: 0.402016  data_time: 0.167209  memory: 12704  grad_norm: 0.107455  loss: 0.232134  loss_kpt: 0.232134  acc_pose: 0.725389
09/15 16:36:40 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:36:47 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:37:00 - mmengine - INFO - Epoch(train) [165][ 50/291]  base_lr: 3.578846e-03 lr: 3.578846e-03  eta: 3:22:46  time: 0.397769  data_time: 0.163333  memory: 12704  grad_norm: 0.099590  loss: 0.236054  loss_kpt: 0.236054  acc_pose: 0.860214
09/15 16:37:20 - mmengine - INFO - Epoch(train) [165][100/291]  base_lr: 3.574064e-03 lr: 3.574064e-03  eta: 3:22:26  time: 0.397221  data_time: 0.163106  memory: 12704  grad_norm: 0.094720  loss: 0.233980  loss_kpt: 0.233980  acc_pose: 0.853749
09/15 16:37:27 - mmengine - INFO - Epoch(train) [155][ 50/146]  base_lr: 4.763603e-04 lr: 4.763603e-04  eta: 3:41:34  time: 0.789528  data_time: 0.473499  memory: 16273  loss: 0.358900  loss_kpt: 0.358900  acc_pose: 0.969041
09/15 16:37:40 - mmengine - INFO - Epoch(train) [165][150/291]  base_lr: 3.569259e-03 lr: 3.569259e-03  eta: 3:22:06  time: 0.396562  data_time: 0.163008  memory: 12704  grad_norm: 0.098408  loss: 0.235346  loss_kpt: 0.235346  acc_pose: 0.846524
09/15 16:38:00 - mmengine - INFO - Epoch(train) [165][200/291]  base_lr: 3.564430e-03 lr: 3.564430e-03  eta: 3:21:47  time: 0.408939  data_time: 0.174223  memory: 12704  grad_norm: 0.092512  loss: 0.236439  loss_kpt: 0.236439  acc_pose: 0.874082
09/15 16:38:07 - mmengine - INFO - Epoch(train) [155][100/146]  base_lr: 4.755303e-04 lr: 4.755303e-04  eta: 3:40:55  time: 0.803509  data_time: 0.484902  memory: 16273  loss: 0.356699  loss_kpt: 0.356699  acc_pose: 0.963698
09/15 16:38:20 - mmengine - INFO - Epoch(train) [165][250/291]  base_lr: 3.559578e-03 lr: 3.559578e-03  eta: 3:21:27  time: 0.387355  data_time: 0.153335  memory: 12704  grad_norm: 0.086268  loss: 0.232427  loss_kpt: 0.232427  acc_pose: 0.921614
09/15 16:38:30 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:38:36 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:38:43 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:38:56 - mmengine - INFO - Epoch(train) [166][ 50/291]  base_lr: 3.550688e-03 lr: 3.550688e-03  eta: 3:20:51  time: 0.402835  data_time: 0.165497  memory: 12704  grad_norm: 0.084722  loss: 0.234467  loss_kpt: 0.234467  acc_pose: 0.822238
09/15 16:39:16 - mmengine - INFO - Epoch(train) [166][100/291]  base_lr: 3.545770e-03 lr: 3.545770e-03  eta: 3:20:31  time: 0.397519  data_time: 0.162696  memory: 12704  grad_norm: 0.096121  loss: 0.232295  loss_kpt: 0.232295  acc_pose: 0.828685
09/15 16:39:23 - mmengine - INFO - Epoch(train) [156][ 50/146]  base_lr: 4.738988e-04 lr: 4.738988e-04  eta: 3:39:40  time: 0.811542  data_time: 0.490289  memory: 16273  loss: 0.361451  loss_kpt: 0.361451  acc_pose: 0.967612
09/15 16:39:36 - mmengine - INFO - Epoch(train) [166][150/291]  base_lr: 3.540829e-03 lr: 3.540829e-03  eta: 3:20:12  time: 0.401596  data_time: 0.167768  memory: 12704  grad_norm: 0.095223  loss: 0.233026  loss_kpt: 0.233026  acc_pose: 0.792293
09/15 16:39:55 - mmengine - INFO - Epoch(train) [166][200/291]  base_lr: 3.535865e-03 lr: 3.535865e-03  eta: 3:19:52  time: 0.387407  data_time: 0.151861  memory: 12704  grad_norm: 0.105146  loss: 0.238429  loss_kpt: 0.238429  acc_pose: 0.819321
09/15 16:40:01 - mmengine - INFO - Epoch(train) [156][100/146]  base_lr: 4.730294e-04 lr: 4.730294e-04  eta: 3:39:00  time: 0.764675  data_time: 0.443168  memory: 16273  loss: 0.359645  loss_kpt: 0.359645  acc_pose: 0.982009
09/15 16:40:15 - mmengine - INFO - Epoch(train) [166][250/291]  base_lr: 3.530879e-03 lr: 3.530879e-03  eta: 3:19:32  time: 0.394210  data_time: 0.160660  memory: 12704  grad_norm: 0.086389  loss: 0.236510  loss_kpt: 0.236510  acc_pose: 0.825565
09/15 16:40:31 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:40:37 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:40:52 - mmengine - INFO - Epoch(train) [167][ 50/291]  base_lr: 3.521744e-03 lr: 3.521744e-03  eta: 3:18:57  time: 0.423014  data_time: 0.187966  memory: 12704  grad_norm: 0.085639  loss: 0.232240  loss_kpt: 0.232240  acc_pose: 0.838937
09/15 16:41:11 - mmengine - INFO - Epoch(train) [167][100/291]  base_lr: 3.516693e-03 lr: 3.516693e-03  eta: 3:18:37  time: 0.389416  data_time: 0.152347  memory: 12704  grad_norm: 0.129310  loss: 0.240007  loss_kpt: 0.240007  acc_pose: 0.806963
09/15 16:41:17 - mmengine - INFO - Epoch(train) [157][ 50/146]  base_lr: 4.713228e-04 lr: 4.713228e-04  eta: 3:37:45  time: 0.808038  data_time: 0.491231  memory: 16273  loss: 0.358436  loss_kpt: 0.358436  acc_pose: 0.962433
09/15 16:41:31 - mmengine - INFO - Epoch(train) [167][150/291]  base_lr: 3.511619e-03 lr: 3.511619e-03  eta: 3:18:17  time: 0.395372  data_time: 0.161175  memory: 12704  grad_norm: 0.090098  loss: 0.230983  loss_kpt: 0.230983  acc_pose: 0.824815
09/15 16:41:50 - mmengine - INFO - Epoch(train) [167][200/291]  base_lr: 3.506523e-03 lr: 3.506523e-03  eta: 3:17:57  time: 0.389048  data_time: 0.155763  memory: 12704  grad_norm: 0.090901  loss: 0.232639  loss_kpt: 0.232639  acc_pose: 0.822230
09/15 16:41:57 - mmengine - INFO - Epoch(train) [157][100/146]  base_lr: 4.704146e-04 lr: 4.704146e-04  eta: 3:37:05  time: 0.796124  data_time: 0.477368  memory: 16273  loss: 0.357841  loss_kpt: 0.357841  acc_pose: 0.974285
09/15 16:42:10 - mmengine - INFO - Epoch(train) [167][250/291]  base_lr: 3.501404e-03 lr: 3.501404e-03  eta: 3:17:37  time: 0.391812  data_time: 0.157912  memory: 12704  grad_norm: 0.082762  loss: 0.232854  loss_kpt: 0.232854  acc_pose: 0.835120
09/15 16:42:26 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:42:32 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:42:46 - mmengine - INFO - Epoch(train) [168][ 50/291]  base_lr: 3.492031e-03 lr: 3.492031e-03  eta: 3:17:01  time: 0.407144  data_time: 0.173586  memory: 12704  grad_norm: 0.090621  loss: 0.232871  loss_kpt: 0.232871  acc_pose: 0.937423
09/15 16:43:06 - mmengine - INFO - Epoch(train) [168][100/291]  base_lr: 3.486849e-03 lr: 3.486849e-03  eta: 3:16:42  time: 0.390538  data_time: 0.156163  memory: 12704  grad_norm: 0.069267  loss: 0.230058  loss_kpt: 0.230058  acc_pose: 0.861856
09/15 16:43:13 - mmengine - INFO - Epoch(train) [158][ 50/146]  base_lr: 4.686338e-04 lr: 4.686338e-04  eta: 3:35:50  time: 0.814559  data_time: 0.495583  memory: 16273  loss: 0.356279  loss_kpt: 0.356279  acc_pose: 0.966085
09/15 16:43:26 - mmengine - INFO - Epoch(train) [168][150/291]  base_lr: 3.481645e-03 lr: 3.481645e-03  eta: 3:16:22  time: 0.391906  data_time: 0.154947  memory: 12704  grad_norm: 0.072000  loss: 0.236873  loss_kpt: 0.236873  acc_pose: 0.902187
09/15 16:43:35 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:43:46 - mmengine - INFO - Epoch(train) [168][200/291]  base_lr: 3.476419e-03 lr: 3.476419e-03  eta: 3:16:02  time: 0.400316  data_time: 0.165617  memory: 12704  grad_norm: 0.081917  loss: 0.231077  loss_kpt: 0.231077  acc_pose: 0.867307
09/15 16:43:52 - mmengine - INFO - Epoch(train) [158][100/146]  base_lr: 4.676871e-04 lr: 4.676871e-04  eta: 3:35:10  time: 0.776013  data_time: 0.456132  memory: 16273  loss: 0.356652  loss_kpt: 0.356652  acc_pose: 0.952999
09/15 16:44:05 - mmengine - INFO - Epoch(train) [168][250/291]  base_lr: 3.471171e-03 lr: 3.471171e-03  eta: 3:15:42  time: 0.391109  data_time: 0.156386  memory: 12704  grad_norm: 0.092685  loss: 0.230051  loss_kpt: 0.230051  acc_pose: 0.837167
09/15 16:44:21 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:44:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:44:41 - mmengine - INFO - Epoch(train) [169][ 50/291]  base_lr: 3.461563e-03 lr: 3.461563e-03  eta: 3:15:06  time: 0.403611  data_time: 0.170630  memory: 12704  grad_norm: 0.067556  loss: 0.234690  loss_kpt: 0.234690  acc_pose: 0.870690
09/15 16:45:01 - mmengine - INFO - Epoch(train) [169][100/291]  base_lr: 3.456254e-03 lr: 3.456254e-03  eta: 3:14:47  time: 0.391812  data_time: 0.158159  memory: 12704  grad_norm: 0.089515  loss: 0.230989  loss_kpt: 0.230989  acc_pose: 0.847691
09/15 16:45:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:45:07 - mmengine - INFO - Epoch(train) [159][ 50/146]  base_lr: 4.658331e-04 lr: 4.658331e-04  eta: 3:33:54  time: 0.796242  data_time: 0.479052  memory: 16273  loss: 0.359069  loss_kpt: 0.359069  acc_pose: 0.960260
09/15 16:45:21 - mmengine - INFO - Epoch(train) [169][150/291]  base_lr: 3.450922e-03 lr: 3.450922e-03  eta: 3:14:27  time: 0.403674  data_time: 0.168660  memory: 12704  grad_norm: 0.103691  loss: 0.230864  loss_kpt: 0.230864  acc_pose: 0.870677
09/15 16:45:41 - mmengine - INFO - Epoch(train) [169][200/291]  base_lr: 3.445569e-03 lr: 3.445569e-03  eta: 3:14:07  time: 0.391163  data_time: 0.158352  memory: 12704  grad_norm: 0.090733  loss: 0.235496  loss_kpt: 0.235496  acc_pose: 0.858422
09/15 16:45:46 - mmengine - INFO - Epoch(train) [159][100/146]  base_lr: 4.648486e-04 lr: 4.648486e-04  eta: 3:33:15  time: 0.786664  data_time: 0.471279  memory: 16273  loss: 0.358670  loss_kpt: 0.358670  acc_pose: 0.968601
09/15 16:46:00 - mmengine - INFO - Epoch(train) [169][250/291]  base_lr: 3.440195e-03 lr: 3.440195e-03  eta: 3:13:47  time: 0.387309  data_time: 0.151918  memory: 12704  grad_norm: 0.088663  loss: 0.234428  loss_kpt: 0.234428  acc_pose: 0.843578
09/15 16:46:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:46:22 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:46:37 - mmengine - INFO - Epoch(train) [170][ 50/291]  base_lr: 3.430359e-03 lr: 3.430359e-03  eta: 3:13:12  time: 0.408765  data_time: 0.174677  memory: 12704  grad_norm: 0.098387  loss: 0.233285  loss_kpt: 0.233285  acc_pose: 0.848955
09/15 16:46:56 - mmengine - INFO - Epoch(train) [170][100/291]  base_lr: 3.424924e-03 lr: 3.424924e-03  eta: 3:12:52  time: 0.394520  data_time: 0.160522  memory: 12704  grad_norm: 0.094319  loss: 0.237728  loss_kpt: 0.237728  acc_pose: 0.901199
09/15 16:47:02 - mmengine - INFO - Epoch(train) [160][ 50/146]  base_lr: 4.629223e-04 lr: 4.629223e-04  eta: 3:31:59  time: 0.801223  data_time: 0.485238  memory: 16273  loss: 0.360185  loss_kpt: 0.360185  acc_pose: 0.957475
09/15 16:47:16 - mmengine - INFO - Epoch(train) [170][150/291]  base_lr: 3.419468e-03 lr: 3.419468e-03  eta: 3:12:32  time: 0.395156  data_time: 0.161311  memory: 12704  grad_norm: 0.082781  loss: 0.232139  loss_kpt: 0.232139  acc_pose: 0.881339
09/15 16:47:36 - mmengine - INFO - Epoch(train) [170][200/291]  base_lr: 3.413991e-03 lr: 3.413991e-03  eta: 3:12:13  time: 0.403907  data_time: 0.170077  memory: 12704  grad_norm: 0.104574  loss: 0.236056  loss_kpt: 0.236056  acc_pose: 0.857447
09/15 16:47:42 - mmengine - INFO - Epoch(train) [160][100/146]  base_lr: 4.619005e-04 lr: 4.619005e-04  eta: 3:31:20  time: 0.797233  data_time: 0.480998  memory: 16273  loss: 0.358743  loss_kpt: 0.358743  acc_pose: 0.960776
09/15 16:47:55 - mmengine - INFO - Epoch(train) [170][250/291]  base_lr: 3.408494e-03 lr: 3.408494e-03  eta: 3:11:52  time: 0.380442  data_time: 0.142990  memory: 12704  grad_norm: 0.083918  loss: 0.229559  loss_kpt: 0.229559  acc_pose: 0.816471
09/15 16:48:11 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:48:11 - mmengine - INFO - Saving checkpoint at 170 epochs
09/15 16:48:18 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:48:18 - mmengine - INFO - Saving checkpoint at 160 epochs
09/15 16:48:33 - mmengine - INFO - Epoch(train) [171][ 50/291]  base_lr: 3.398434e-03 lr: 3.398434e-03  eta: 3:11:16  time: 0.397547  data_time: 0.164055  memory: 12704  grad_norm: 0.088060  loss: 0.232277  loss_kpt: 0.232277  acc_pose: 0.843916
09/15 16:48:53 - mmengine - INFO - Epoch(train) [171][100/291]  base_lr: 3.392877e-03 lr: 3.392877e-03  eta: 3:10:57  time: 0.392381  data_time: 0.158603  memory: 12704  grad_norm: 0.100252  loss: 0.231663  loss_kpt: 0.231663  acc_pose: 0.870984
09/15 16:48:59 - mmengine - INFO - Epoch(train) [161][ 50/146]  base_lr: 4.599030e-04 lr: 4.599030e-04  eta: 3:30:05  time: 0.798887  data_time: 0.481632  memory: 16273  loss: 0.359644  loss_kpt: 0.359644  acc_pose: 0.971004
09/15 16:49:12 - mmengine - INFO - Epoch(train) [171][150/291]  base_lr: 3.387300e-03 lr: 3.387300e-03  eta: 3:10:37  time: 0.392350  data_time: 0.158346  memory: 12704  grad_norm: 0.114507  loss: 0.232836  loss_kpt: 0.232836  acc_pose: 0.817554
09/15 16:49:32 - mmengine - INFO - Epoch(train) [171][200/291]  base_lr: 3.381702e-03 lr: 3.381702e-03  eta: 3:10:17  time: 0.391010  data_time: 0.157613  memory: 12704  grad_norm: 0.078310  loss: 0.231571  loss_kpt: 0.231571  acc_pose: 0.827377
09/15 16:49:39 - mmengine - INFO - Epoch(train) [161][100/146]  base_lr: 4.588444e-04 lr: 4.588444e-04  eta: 3:29:26  time: 0.789428  data_time: 0.472436  memory: 16273  loss: 0.357813  loss_kpt: 0.357813  acc_pose: 0.959027
09/15 16:49:51 - mmengine - INFO - Epoch(train) [171][250/291]  base_lr: 3.376083e-03 lr: 3.376083e-03  eta: 3:09:57  time: 0.393120  data_time: 0.158288  memory: 12704  grad_norm: 0.086576  loss: 0.234508  loss_kpt: 0.234508  acc_pose: 0.869110
09/15 16:50:08 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:50:15 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:50:28 - mmengine - INFO - Epoch(train) [172][ 50/291]  base_lr: 3.365806e-03 lr: 3.365806e-03  eta: 3:09:21  time: 0.403453  data_time: 0.166017  memory: 12704  grad_norm: 0.096323  loss: 0.234471  loss_kpt: 0.234471  acc_pose: 0.861500
09/15 16:50:47 - mmengine - INFO - Epoch(train) [172][100/291]  base_lr: 3.360130e-03 lr: 3.360130e-03  eta: 3:09:01  time: 0.385734  data_time: 0.151436  memory: 12704  grad_norm: 0.077119  loss: 0.233085  loss_kpt: 0.233085  acc_pose: 0.841114
09/15 16:50:54 - mmengine - INFO - Epoch(train) [162][ 50/146]  base_lr: 4.567768e-04 lr: 4.567768e-04  eta: 3:28:10  time: 0.793318  data_time: 0.478240  memory: 16273  loss: 0.356162  loss_kpt: 0.356162  acc_pose: 0.971391
09/15 16:51:07 - mmengine - INFO - Epoch(train) [172][150/291]  base_lr: 3.354434e-03 lr: 3.354434e-03  eta: 3:08:42  time: 0.399277  data_time: 0.165178  memory: 12704  grad_norm: 0.089536  loss: 0.233073  loss_kpt: 0.233073  acc_pose: 0.823601
09/15 16:51:27 - mmengine - INFO - Epoch(train) [172][200/291]  base_lr: 3.348718e-03 lr: 3.348718e-03  eta: 3:08:22  time: 0.405225  data_time: 0.170962  memory: 12704  grad_norm: 0.083519  loss: 0.231708  loss_kpt: 0.231708  acc_pose: 0.801650
09/15 16:51:34 - mmengine - INFO - Epoch(train) [162][100/146]  base_lr: 4.556819e-04 lr: 4.556819e-04  eta: 3:27:31  time: 0.796054  data_time: 0.477307  memory: 16273  loss: 0.356718  loss_kpt: 0.356718  acc_pose: 0.970720
09/15 16:51:42 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:51:47 - mmengine - INFO - Epoch(train) [172][250/291]  base_lr: 3.342982e-03 lr: 3.342982e-03  eta: 3:08:02  time: 0.392517  data_time: 0.159202  memory: 12704  grad_norm: 0.076609  loss: 0.229632  loss_kpt: 0.229632  acc_pose: 0.814334
09/15 16:52:03 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:52:10 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:52:23 - mmengine - INFO - Epoch(train) [173][ 50/291]  base_lr: 3.332492e-03 lr: 3.332492e-03  eta: 3:07:26  time: 0.394864  data_time: 0.157868  memory: 12704  grad_norm: 0.090254  loss: 0.233508  loss_kpt: 0.233508  acc_pose: 0.916878
09/15 16:52:43 - mmengine - INFO - Epoch(train) [173][100/291]  base_lr: 3.326700e-03 lr: 3.326700e-03  eta: 3:07:07  time: 0.392831  data_time: 0.158274  memory: 12704  grad_norm: 0.110362  loss: 0.230951  loss_kpt: 0.230951  acc_pose: 0.920454
09/15 16:52:50 - mmengine - INFO - Epoch(train) [163][ 50/146]  base_lr: 4.535454e-04 lr: 4.535454e-04  eta: 3:26:16  time: 0.803373  data_time: 0.483448  memory: 16273  loss: 0.354201  loss_kpt: 0.354201  acc_pose: 0.965500
09/15 16:53:02 - mmengine - INFO - Epoch(train) [173][150/291]  base_lr: 3.320889e-03 lr: 3.320889e-03  eta: 3:06:47  time: 0.390753  data_time: 0.157389  memory: 12704  grad_norm: 0.079070  loss: 0.231188  loss_kpt: 0.231188  acc_pose: 0.922475
09/15 16:53:22 - mmengine - INFO - Epoch(train) [173][200/291]  base_lr: 3.315058e-03 lr: 3.315058e-03  eta: 3:06:27  time: 0.391825  data_time: 0.157369  memory: 12704  grad_norm: 0.092287  loss: 0.228730  loss_kpt: 0.228730  acc_pose: 0.879134
09/15 16:53:29 - mmengine - INFO - Epoch(train) [163][100/146]  base_lr: 4.524149e-04 lr: 4.524149e-04  eta: 3:25:36  time: 0.786260  data_time: 0.469450  memory: 16273  loss: 0.357357  loss_kpt: 0.357357  acc_pose: 0.966119
09/15 16:53:42 - mmengine - INFO - Epoch(train) [173][250/291]  base_lr: 3.309208e-03 lr: 3.309208e-03  eta: 3:06:07  time: 0.396365  data_time: 0.162672  memory: 12704  grad_norm: 0.115095  loss: 0.234787  loss_kpt: 0.234787  acc_pose: 0.839239
09/15 16:53:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:54:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:54:18 - mmengine - INFO - Epoch(train) [174][ 50/291]  base_lr: 3.298511e-03 lr: 3.298511e-03  eta: 3:05:31  time: 0.395700  data_time: 0.161887  memory: 12704  grad_norm: 0.077711  loss: 0.234978  loss_kpt: 0.234978  acc_pose: 0.826653
09/15 16:54:37 - mmengine - INFO - Epoch(train) [174][100/291]  base_lr: 3.292606e-03 lr: 3.292606e-03  eta: 3:05:11  time: 0.392349  data_time: 0.158394  memory: 12704  grad_norm: 0.093423  loss: 0.230606  loss_kpt: 0.230606  acc_pose: 0.912733
09/15 16:54:45 - mmengine - INFO - Epoch(train) [164][ 50/146]  base_lr: 4.502105e-04 lr: 4.502105e-04  eta: 3:24:21  time: 0.804461  data_time: 0.488688  memory: 16273  loss: 0.358472  loss_kpt: 0.358472  acc_pose: 0.975966
09/15 16:54:57 - mmengine - INFO - Epoch(train) [174][150/291]  base_lr: 3.286683e-03 lr: 3.286683e-03  eta: 3:04:52  time: 0.396586  data_time: 0.162266  memory: 12704  grad_norm: 0.093959  loss: 0.231974  loss_kpt: 0.231974  acc_pose: 0.865223
09/15 16:55:17 - mmengine - INFO - Epoch(train) [174][200/291]  base_lr: 3.280740e-03 lr: 3.280740e-03  eta: 3:04:32  time: 0.399031  data_time: 0.162421  memory: 12704  grad_norm: 0.088560  loss: 0.231327  loss_kpt: 0.231327  acc_pose: 0.836305
09/15 16:55:25 - mmengine - INFO - Epoch(train) [164][100/146]  base_lr: 4.490450e-04 lr: 4.490450e-04  eta: 3:23:42  time: 0.798640  data_time: 0.481063  memory: 16273  loss: 0.358384  loss_kpt: 0.358384  acc_pose: 0.977675
09/15 16:55:37 - mmengine - INFO - Epoch(train) [174][250/291]  base_lr: 3.274779e-03 lr: 3.274779e-03  eta: 3:04:12  time: 0.393232  data_time: 0.158122  memory: 12704  grad_norm: 0.117181  loss: 0.236747  loss_kpt: 0.236747  acc_pose: 0.844337
09/15 16:55:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:56:01 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:56:13 - mmengine - INFO - Epoch(train) [175][ 50/291]  base_lr: 3.263881e-03 lr: 3.263881e-03  eta: 3:03:36  time: 0.411404  data_time: 0.174369  memory: 12704  grad_norm: 0.089467  loss: 0.233657  loss_kpt: 0.233657  acc_pose: 0.895139
09/15 16:56:33 - mmengine - INFO - Epoch(train) [175][100/291]  base_lr: 3.257867e-03 lr: 3.257867e-03  eta: 3:03:17  time: 0.397452  data_time: 0.163466  memory: 12704  grad_norm: 0.080981  loss: 0.228262  loss_kpt: 0.228262  acc_pose: 0.887879
09/15 16:56:41 - mmengine - INFO - Epoch(train) [165][ 50/146]  base_lr: 4.467740e-04 lr: 4.467740e-04  eta: 3:22:26  time: 0.799673  data_time: 0.483227  memory: 16273  loss: 0.357379  loss_kpt: 0.357379  acc_pose: 0.982925
09/15 16:56:45 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:56:52 - mmengine - INFO - Epoch(train) [175][150/291]  base_lr: 3.251834e-03 lr: 3.251834e-03  eta: 3:02:57  time: 0.384682  data_time: 0.150974  memory: 12704  grad_norm: 0.080752  loss: 0.229863  loss_kpt: 0.229863  acc_pose: 0.843726
09/15 16:57:12 - mmengine - INFO - Epoch(train) [175][200/291]  base_lr: 3.245783e-03 lr: 3.245783e-03  eta: 3:02:37  time: 0.395471  data_time: 0.161534  memory: 12704  grad_norm: 0.091189  loss: 0.231459  loss_kpt: 0.231459  acc_pose: 0.863589
09/15 16:57:20 - mmengine - INFO - Epoch(train) [165][100/146]  base_lr: 4.455741e-04 lr: 4.455741e-04  eta: 3:21:47  time: 0.796107  data_time: 0.479700  memory: 16273  loss: 0.356370  loss_kpt: 0.356370  acc_pose: 0.972848
09/15 16:57:31 - mmengine - INFO - Epoch(train) [175][250/291]  base_lr: 3.239714e-03 lr: 3.239714e-03  eta: 3:02:17  time: 0.391293  data_time: 0.155021  memory: 12704  grad_norm: 0.109241  loss: 0.235315  loss_kpt: 0.235315  acc_pose: 0.817789
09/15 16:57:47 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:57:56 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 16:58:07 - mmengine - INFO - Epoch(train) [176][ 50/291]  base_lr: 3.228621e-03 lr: 3.228621e-03  eta: 3:01:41  time: 0.403200  data_time: 0.169480  memory: 12704  grad_norm: 0.086849  loss: 0.234515  loss_kpt: 0.234515  acc_pose: 0.836047
09/15 16:58:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:58:27 - mmengine - INFO - Epoch(train) [176][100/291]  base_lr: 3.222500e-03 lr: 3.222500e-03  eta: 3:01:21  time: 0.389256  data_time: 0.155620  memory: 12704  grad_norm: 0.087840  loss: 0.232526  loss_kpt: 0.232526  acc_pose: 0.802603
09/15 16:58:36 - mmengine - INFO - Epoch(train) [166][ 50/146]  base_lr: 4.432377e-04 lr: 4.432377e-04  eta: 3:20:31  time: 0.802278  data_time: 0.487101  memory: 16273  loss: 0.354406  loss_kpt: 0.354406  acc_pose: 0.973880
09/15 16:58:46 - mmengine - INFO - Epoch(train) [176][150/291]  base_lr: 3.216362e-03 lr: 3.216362e-03  eta: 3:01:01  time: 0.389730  data_time: 0.156067  memory: 12704  grad_norm: 0.078330  loss: 0.233232  loss_kpt: 0.233232  acc_pose: 0.898417
09/15 16:59:06 - mmengine - INFO - Epoch(train) [176][200/291]  base_lr: 3.210205e-03 lr: 3.210205e-03  eta: 3:00:42  time: 0.394383  data_time: 0.160355  memory: 12704  grad_norm: 0.091632  loss: 0.231765  loss_kpt: 0.231765  acc_pose: 0.836438
09/15 16:59:16 - mmengine - INFO - Epoch(train) [166][100/146]  base_lr: 4.420040e-04 lr: 4.420040e-04  eta: 3:19:52  time: 0.794340  data_time: 0.478443  memory: 16273  loss: 0.353658  loss_kpt: 0.353658  acc_pose: 0.981146
09/15 16:59:25 - mmengine - INFO - Epoch(train) [176][250/291]  base_lr: 3.204031e-03 lr: 3.204031e-03  eta: 3:00:22  time: 0.389696  data_time: 0.154806  memory: 12704  grad_norm: 0.085483  loss: 0.229548  loss_kpt: 0.229548  acc_pose: 0.869603
09/15 16:59:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 16:59:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:00:02 - mmengine - INFO - Epoch(train) [177][ 50/291]  base_lr: 3.192749e-03 lr: 3.192749e-03  eta: 2:59:46  time: 0.413793  data_time: 0.179202  memory: 12704  grad_norm: 0.097703  loss: 0.230614  loss_kpt: 0.230614  acc_pose: 0.779237
09/15 17:00:22 - mmengine - INFO - Epoch(train) [177][100/291]  base_lr: 3.186526e-03 lr: 3.186526e-03  eta: 2:59:26  time: 0.387729  data_time: 0.153419  memory: 12704  grad_norm: 0.080744  loss: 0.233761  loss_kpt: 0.233761  acc_pose: 0.855045
09/15 17:00:31 - mmengine - INFO - Epoch(train) [167][ 50/146]  base_lr: 4.396035e-04 lr: 4.396035e-04  eta: 3:18:37  time: 0.795606  data_time: 0.479071  memory: 16273  loss: 0.352743  loss_kpt: 0.352743  acc_pose: 0.972226
09/15 17:00:42 - mmengine - INFO - Epoch(train) [177][150/291]  base_lr: 3.180285e-03 lr: 3.180285e-03  eta: 2:59:07  time: 0.405223  data_time: 0.168618  memory: 12704  grad_norm: 0.067467  loss: 0.232382  loss_kpt: 0.232382  acc_pose: 0.919897
09/15 17:01:01 - mmengine - INFO - Epoch(train) [177][200/291]  base_lr: 3.174026e-03 lr: 3.174026e-03  eta: 2:58:47  time: 0.390362  data_time: 0.156026  memory: 12704  grad_norm: 0.082865  loss: 0.229514  loss_kpt: 0.229514  acc_pose: 0.872975
09/15 17:01:11 - mmengine - INFO - Epoch(train) [167][100/146]  base_lr: 4.383368e-04 lr: 4.383368e-04  eta: 3:17:58  time: 0.787784  data_time: 0.471991  memory: 16273  loss: 0.351033  loss_kpt: 0.351033  acc_pose: 0.969052
09/15 17:01:21 - mmengine - INFO - Epoch(train) [177][250/291]  base_lr: 3.167751e-03 lr: 3.167751e-03  eta: 2:58:27  time: 0.394223  data_time: 0.159746  memory: 12704  grad_norm: 0.091275  loss: 0.229119  loss_kpt: 0.229119  acc_pose: 0.834880
09/15 17:01:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:01:47 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:01:57 - mmengine - INFO - Epoch(train) [178][ 50/291]  base_lr: 3.156286e-03 lr: 3.156286e-03  eta: 2:57:51  time: 0.402905  data_time: 0.167981  memory: 12704  grad_norm: 0.098583  loss: 0.227211  loss_kpt: 0.227211  acc_pose: 0.915579
09/15 17:02:16 - mmengine - INFO - Epoch(train) [178][100/291]  base_lr: 3.149963e-03 lr: 3.149963e-03  eta: 2:57:31  time: 0.388275  data_time: 0.154036  memory: 12704  grad_norm: 0.090276  loss: 0.224379  loss_kpt: 0.224379  acc_pose: 0.856759
09/15 17:02:27 - mmengine - INFO - Epoch(train) [168][ 50/146]  base_lr: 4.358734e-04 lr: 4.358734e-04  eta: 3:16:42  time: 0.814029  data_time: 0.494996  memory: 16273  loss: 0.350911  loss_kpt: 0.350911  acc_pose: 0.987162
09/15 17:02:36 - mmengine - INFO - Epoch(train) [178][150/291]  base_lr: 3.143623e-03 lr: 3.143623e-03  eta: 2:57:11  time: 0.395548  data_time: 0.161938  memory: 12704  grad_norm: 0.108675  loss: 0.233458  loss_kpt: 0.233458  acc_pose: 0.830032
09/15 17:02:56 - mmengine - INFO - Epoch(train) [178][200/291]  base_lr: 3.137266e-03 lr: 3.137266e-03  eta: 2:56:52  time: 0.400695  data_time: 0.167410  memory: 12704  grad_norm: 0.085855  loss: 0.232637  loss_kpt: 0.232637  acc_pose: 0.900163
09/15 17:03:06 - mmengine - INFO - Epoch(train) [168][100/146]  base_lr: 4.345743e-04 lr: 4.345743e-04  eta: 3:16:03  time: 0.781853  data_time: 0.465435  memory: 16273  loss: 0.357635  loss_kpt: 0.357635  acc_pose: 0.968101
09/15 17:03:15 - mmengine - INFO - Epoch(train) [178][250/291]  base_lr: 3.130893e-03 lr: 3.130893e-03  eta: 2:56:32  time: 0.384669  data_time: 0.151130  memory: 12704  grad_norm: 0.078198  loss: 0.234808  loss_kpt: 0.234808  acc_pose: 0.853614
09/15 17:03:31 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:03:42 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:03:52 - mmengine - INFO - Epoch(train) [179][ 50/291]  base_lr: 3.119251e-03 lr: 3.119251e-03  eta: 2:55:56  time: 0.406505  data_time: 0.171612  memory: 12704  grad_norm: 0.083321  loss: 0.228031  loss_kpt: 0.228031  acc_pose: 0.884850
09/15 17:04:11 - mmengine - INFO - Epoch(train) [179][100/291]  base_lr: 3.112831e-03 lr: 3.112831e-03  eta: 2:55:36  time: 0.390156  data_time: 0.156666  memory: 12704  grad_norm: 0.070742  loss: 0.230551  loss_kpt: 0.230551  acc_pose: 0.868164
09/15 17:04:21 - mmengine - INFO - Epoch(train) [169][ 50/146]  base_lr: 4.320495e-04 lr: 4.320495e-04  eta: 3:14:47  time: 0.787197  data_time: 0.470498  memory: 16273  loss: 0.356108  loss_kpt: 0.356108  acc_pose: 0.981197
09/15 17:04:31 - mmengine - INFO - Epoch(train) [179][150/291]  base_lr: 3.106396e-03 lr: 3.106396e-03  eta: 2:55:16  time: 0.395502  data_time: 0.161725  memory: 12704  grad_norm: 0.085546  loss: 0.228209  loss_kpt: 0.228209  acc_pose: 0.890770
09/15 17:04:51 - mmengine - INFO - Epoch(train) [179][200/291]  base_lr: 3.099944e-03 lr: 3.099944e-03  eta: 2:54:57  time: 0.400053  data_time: 0.166200  memory: 12704  grad_norm: 0.076406  loss: 0.226817  loss_kpt: 0.226817  acc_pose: 0.905512
09/15 17:04:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:05:01 - mmengine - INFO - Epoch(train) [169][100/146]  base_lr: 4.307187e-04 lr: 4.307187e-04  eta: 3:14:08  time: 0.802730  data_time: 0.485961  memory: 16273  loss: 0.354357  loss_kpt: 0.354357  acc_pose: 0.974769
09/15 17:05:11 - mmengine - INFO - Epoch(train) [179][250/291]  base_lr: 3.093476e-03 lr: 3.093476e-03  eta: 2:54:37  time: 0.392895  data_time: 0.159156  memory: 12704  grad_norm: 0.062431  loss: 0.234191  loss_kpt: 0.234191  acc_pose: 0.784443
09/15 17:05:26 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:05:37 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:05:46 - mmengine - INFO - Epoch(train) [180][ 50/291]  base_lr: 3.081664e-03 lr: 3.081664e-03  eta: 2:54:01  time: 0.400587  data_time: 0.167474  memory: 12704  grad_norm: 0.084729  loss: 0.227381  loss_kpt: 0.227381  acc_pose: 0.826599
09/15 17:06:07 - mmengine - INFO - Epoch(train) [180][100/291]  base_lr: 3.075151e-03 lr: 3.075151e-03  eta: 2:53:41  time: 0.410224  data_time: 0.176537  memory: 12704  grad_norm: 0.082014  loss: 0.232357  loss_kpt: 0.232357  acc_pose: 0.838711
09/15 17:06:17 - mmengine - INFO - Epoch(train) [170][ 50/146]  base_lr: 4.281337e-04 lr: 4.281337e-04  eta: 3:12:53  time: 0.813515  data_time: 0.497459  memory: 16273  loss: 0.355998  loss_kpt: 0.355998  acc_pose: 0.960944
09/15 17:06:26 - mmengine - INFO - Epoch(train) [180][150/291]  base_lr: 3.068623e-03 lr: 3.068623e-03  eta: 2:53:22  time: 0.392305  data_time: 0.155795  memory: 12704  grad_norm: 0.079186  loss: 0.226896  loss_kpt: 0.226896  acc_pose: 0.938233
09/15 17:06:46 - mmengine - INFO - Epoch(train) [180][200/291]  base_lr: 3.062080e-03 lr: 3.062080e-03  eta: 2:53:02  time: 0.387383  data_time: 0.153152  memory: 12704  grad_norm: 0.081398  loss: 0.230357  loss_kpt: 0.230357  acc_pose: 0.926199
09/15 17:06:57 - mmengine - INFO - Epoch(train) [170][100/146]  base_lr: 4.267719e-04 lr: 4.267719e-04  eta: 3:12:14  time: 0.799065  data_time: 0.482358  memory: 16273  loss: 0.354070  loss_kpt: 0.354070  acc_pose: 0.955399
09/15 17:07:05 - mmengine - INFO - Epoch(train) [180][250/291]  base_lr: 3.055521e-03 lr: 3.055521e-03  eta: 2:52:42  time: 0.387352  data_time: 0.153036  memory: 12704  grad_norm: 0.079263  loss: 0.230842  loss_kpt: 0.230842  acc_pose: 0.792669
09/15 17:07:21 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:07:21 - mmengine - INFO - Saving checkpoint at 180 epochs
09/15 17:07:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:07:33 - mmengine - INFO - Saving checkpoint at 170 epochs
09/15 17:07:43 - mmengine - INFO - Epoch(train) [181][ 50/291]  base_lr: 3.043545e-03 lr: 3.043545e-03  eta: 2:52:06  time: 0.401261  data_time: 0.165891  memory: 12704  grad_norm: 0.080797  loss: 0.228633  loss_kpt: 0.228633  acc_pose: 0.867336
09/15 17:08:03 - mmengine - INFO - Epoch(train) [181][100/291]  base_lr: 3.036943e-03 lr: 3.036943e-03  eta: 2:51:46  time: 0.395356  data_time: 0.161105  memory: 12704  grad_norm: 0.080836  loss: 0.230753  loss_kpt: 0.230753  acc_pose: 0.821108
09/15 17:08:15 - mmengine - INFO - Epoch(train) [171][ 50/146]  base_lr: 4.241282e-04 lr: 4.241282e-04  eta: 3:10:58  time: 0.804891  data_time: 0.489098  memory: 16273  loss: 0.350934  loss_kpt: 0.350934  acc_pose: 0.977617
09/15 17:08:22 - mmengine - INFO - Epoch(train) [181][150/291]  base_lr: 3.030327e-03 lr: 3.030327e-03  eta: 2:51:26  time: 0.388164  data_time: 0.152753  memory: 12704  grad_norm: 0.080794  loss: 0.231084  loss_kpt: 0.231084  acc_pose: 0.864143
09/15 17:08:42 - mmengine - INFO - Epoch(train) [181][200/291]  base_lr: 3.023695e-03 lr: 3.023695e-03  eta: 2:51:06  time: 0.395014  data_time: 0.161098  memory: 12704  grad_norm: 0.076097  loss: 0.227374  loss_kpt: 0.227374  acc_pose: 0.832959
09/15 17:08:54 - mmengine - INFO - Epoch(train) [171][100/146]  base_lr: 4.227363e-04 lr: 4.227363e-04  eta: 3:10:19  time: 0.777858  data_time: 0.457860  memory: 16273  loss: 0.349097  loss_kpt: 0.349097  acc_pose: 0.956751
09/15 17:09:02 - mmengine - INFO - Epoch(train) [181][250/291]  base_lr: 3.017049e-03 lr: 3.017049e-03  eta: 2:50:47  time: 0.395170  data_time: 0.160071  memory: 12704  grad_norm: 0.090493  loss: 0.230938  loss_kpt: 0.230938  acc_pose: 0.761530
09/15 17:09:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:09:29 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:09:38 - mmengine - INFO - Epoch(train) [182][ 50/291]  base_lr: 3.004915e-03 lr: 3.004915e-03  eta: 2:50:11  time: 0.410805  data_time: 0.177268  memory: 12704  grad_norm: 0.081114  loss: 0.230406  loss_kpt: 0.230406  acc_pose: 0.844417
09/15 17:09:57 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:09:58 - mmengine - INFO - Epoch(train) [182][100/291]  base_lr: 2.998228e-03 lr: 2.998228e-03  eta: 2:49:51  time: 0.383319  data_time: 0.148991  memory: 12704  grad_norm: 0.073205  loss: 0.229455  loss_kpt: 0.229455  acc_pose: 0.867651
09/15 17:10:09 - mmengine - INFO - Epoch(train) [172][ 50/146]  base_lr: 4.200352e-04 lr: 4.200352e-04  eta: 3:09:03  time: 0.794736  data_time: 0.478682  memory: 16273  loss: 0.352369  loss_kpt: 0.352369  acc_pose: 0.974746
09/15 17:10:18 - mmengine - INFO - Epoch(train) [182][150/291]  base_lr: 2.991526e-03 lr: 2.991526e-03  eta: 2:49:31  time: 0.403264  data_time: 0.166773  memory: 12704  grad_norm: 0.082886  loss: 0.230428  loss_kpt: 0.230428  acc_pose: 0.892989
09/15 17:10:38 - mmengine - INFO - Epoch(train) [182][200/291]  base_lr: 2.984810e-03 lr: 2.984810e-03  eta: 2:49:12  time: 0.397696  data_time: 0.163094  memory: 12704  grad_norm: 0.086168  loss: 0.227157  loss_kpt: 0.227157  acc_pose: 0.867813
09/15 17:10:48 - mmengine - INFO - Epoch(train) [172][100/146]  base_lr: 4.186138e-04 lr: 4.186138e-04  eta: 3:08:23  time: 0.785705  data_time: 0.468995  memory: 16273  loss: 0.354167  loss_kpt: 0.354167  acc_pose: 0.975926
09/15 17:10:57 - mmengine - INFO - Epoch(train) [182][250/291]  base_lr: 2.978080e-03 lr: 2.978080e-03  eta: 2:48:52  time: 0.382421  data_time: 0.148453  memory: 12704  grad_norm: 0.084346  loss: 0.231296  loss_kpt: 0.231296  acc_pose: 0.843336
09/15 17:11:13 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:11:24 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:11:28 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:11:33 - mmengine - INFO - Epoch(train) [183][ 50/291]  base_lr: 2.965796e-03 lr: 2.965796e-03  eta: 2:48:16  time: 0.400159  data_time: 0.165566  memory: 12704  grad_norm: 0.080914  loss: 0.224430  loss_kpt: 0.224430  acc_pose: 0.799277
09/15 17:11:53 - mmengine - INFO - Epoch(train) [183][100/291]  base_lr: 2.959026e-03 lr: 2.959026e-03  eta: 2:47:56  time: 0.397775  data_time: 0.164620  memory: 12704  grad_norm: 0.086839  loss: 0.229208  loss_kpt: 0.229208  acc_pose: 0.830517
09/15 17:12:04 - mmengine - INFO - Epoch(train) [173][ 50/146]  base_lr: 4.158569e-04 lr: 4.158569e-04  eta: 3:07:08  time: 0.798813  data_time: 0.482618  memory: 16273  loss: 0.352423  loss_kpt: 0.352423  acc_pose: 0.958675
09/15 17:12:12 - mmengine - INFO - Epoch(train) [183][150/291]  base_lr: 2.952243e-03 lr: 2.952243e-03  eta: 2:47:36  time: 0.386286  data_time: 0.151626  memory: 12704  grad_norm: 0.069898  loss: 0.229379  loss_kpt: 0.229379  acc_pose: 0.851077
09/15 17:12:32 - mmengine - INFO - Epoch(train) [183][200/291]  base_lr: 2.945446e-03 lr: 2.945446e-03  eta: 2:47:16  time: 0.388132  data_time: 0.153926  memory: 12704  grad_norm: 0.085994  loss: 0.230158  loss_kpt: 0.230158  acc_pose: 0.846411
09/15 17:12:43 - mmengine - INFO - Epoch(train) [173][100/146]  base_lr: 4.144068e-04 lr: 4.144068e-04  eta: 3:06:28  time: 0.777960  data_time: 0.458897  memory: 16273  loss: 0.348945  loss_kpt: 0.348945  acc_pose: 0.942743
09/15 17:12:51 - mmengine - INFO - Epoch(train) [183][250/291]  base_lr: 2.938636e-03 lr: 2.938636e-03  eta: 2:46:57  time: 0.398665  data_time: 0.163241  memory: 12704  grad_norm: 0.075524  loss: 0.228056  loss_kpt: 0.228056  acc_pose: 0.856914
09/15 17:13:07 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:13:19 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:13:28 - mmengine - INFO - Epoch(train) [184][ 50/291]  base_lr: 2.926207e-03 lr: 2.926207e-03  eta: 2:46:21  time: 0.409589  data_time: 0.175484  memory: 12704  grad_norm: 0.076754  loss: 0.230092  loss_kpt: 0.230092  acc_pose: 0.863194
09/15 17:13:48 - mmengine - INFO - Epoch(train) [184][100/291]  base_lr: 2.919359e-03 lr: 2.919359e-03  eta: 2:46:01  time: 0.403674  data_time: 0.167184  memory: 12704  grad_norm: 0.076103  loss: 0.230632  loss_kpt: 0.230632  acc_pose: 0.879921
09/15 17:13:59 - mmengine - INFO - Epoch(train) [174][ 50/146]  base_lr: 4.115956e-04 lr: 4.115956e-04  eta: 3:05:13  time: 0.799562  data_time: 0.483179  memory: 16273  loss: 0.354061  loss_kpt: 0.354061  acc_pose: 0.974856
09/15 17:14:07 - mmengine - INFO - Epoch(train) [184][150/291]  base_lr: 2.912498e-03 lr: 2.912498e-03  eta: 2:45:41  time: 0.386724  data_time: 0.152366  memory: 12704  grad_norm: 0.089576  loss: 0.231222  loss_kpt: 0.231222  acc_pose: 0.843622
09/15 17:14:26 - mmengine - INFO - Epoch(train) [184][200/291]  base_lr: 2.905625e-03 lr: 2.905625e-03  eta: 2:45:21  time: 0.385246  data_time: 0.151340  memory: 12704  grad_norm: 0.076496  loss: 0.229741  loss_kpt: 0.229741  acc_pose: 0.891844
09/15 17:14:38 - mmengine - INFO - Epoch(train) [174][100/146]  base_lr: 4.101175e-04 lr: 4.101175e-04  eta: 3:04:34  time: 0.794098  data_time: 0.478661  memory: 16273  loss: 0.354109  loss_kpt: 0.354109  acc_pose: 0.962242
09/15 17:14:47 - mmengine - INFO - Epoch(train) [184][250/291]  base_lr: 2.898738e-03 lr: 2.898738e-03  eta: 2:45:02  time: 0.402821  data_time: 0.168760  memory: 12704  grad_norm: 0.086553  loss: 0.225469  loss_kpt: 0.225469  acc_pose: 0.886206
09/15 17:15:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:15:14 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:15:22 - mmengine - INFO - Epoch(train) [185][ 50/291]  base_lr: 2.886171e-03 lr: 2.886171e-03  eta: 2:44:26  time: 0.408286  data_time: 0.174160  memory: 12704  grad_norm: 0.078161  loss: 0.229358  loss_kpt: 0.229358  acc_pose: 0.837604
09/15 17:15:42 - mmengine - INFO - Epoch(train) [185][100/291]  base_lr: 2.879249e-03 lr: 2.879249e-03  eta: 2:44:06  time: 0.388098  data_time: 0.153693  memory: 12704  grad_norm: 0.067848  loss: 0.232402  loss_kpt: 0.232402  acc_pose: 0.898493
09/15 17:15:54 - mmengine - INFO - Epoch(train) [175][ 50/146]  base_lr: 4.072535e-04 lr: 4.072535e-04  eta: 3:03:18  time: 0.811761  data_time: 0.491483  memory: 16273  loss: 0.354082  loss_kpt: 0.354082  acc_pose: 0.974756
09/15 17:16:01 - mmengine - INFO - Epoch(train) [185][150/291]  base_lr: 2.872314e-03 lr: 2.872314e-03  eta: 2:43:46  time: 0.388694  data_time: 0.151949  memory: 12704  grad_norm: 0.065049  loss: 0.224317  loss_kpt: 0.224317  acc_pose: 0.849556
09/15 17:16:21 - mmengine - INFO - Epoch(train) [185][200/291]  base_lr: 2.865366e-03 lr: 2.865366e-03  eta: 2:43:26  time: 0.393840  data_time: 0.160668  memory: 12704  grad_norm: 0.065750  loss: 0.226980  loss_kpt: 0.226980  acc_pose: 0.814114
09/15 17:16:33 - mmengine - INFO - Epoch(train) [175][100/146]  base_lr: 4.057483e-04 lr: 4.057483e-04  eta: 3:02:39  time: 0.778936  data_time: 0.461438  memory: 16273  loss: 0.348973  loss_kpt: 0.348973  acc_pose: 0.982394
09/15 17:16:41 - mmengine - INFO - Epoch(train) [185][250/291]  base_lr: 2.858407e-03 lr: 2.858407e-03  eta: 2:43:06  time: 0.397855  data_time: 0.162742  memory: 12704  grad_norm: 0.081346  loss: 0.226894  loss_kpt: 0.226894  acc_pose: 0.795046
09/15 17:16:56 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:17:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:17:17 - mmengine - INFO - Epoch(train) [186][ 50/291]  base_lr: 2.845710e-03 lr: 2.845710e-03  eta: 2:42:30  time: 0.406983  data_time: 0.172862  memory: 12704  grad_norm: 0.072305  loss: 0.225865  loss_kpt: 0.225865  acc_pose: 0.851434
09/15 17:17:36 - mmengine - INFO - Epoch(train) [186][100/291]  base_lr: 2.838716e-03 lr: 2.838716e-03  eta: 2:42:11  time: 0.390397  data_time: 0.156823  memory: 12704  grad_norm: 0.075922  loss: 0.224859  loss_kpt: 0.224859  acc_pose: 0.846580
09/15 17:17:48 - mmengine - INFO - Epoch(train) [176][ 50/146]  base_lr: 4.028330e-04 lr: 4.028330e-04  eta: 3:01:23  time: 0.793588  data_time: 0.476747  memory: 16273  loss: 0.352452  loss_kpt: 0.352452  acc_pose: 0.980620
09/15 17:17:56 - mmengine - INFO - Epoch(train) [186][150/291]  base_lr: 2.831711e-03 lr: 2.831711e-03  eta: 2:41:51  time: 0.392205  data_time: 0.157747  memory: 12704  grad_norm: 0.097652  loss: 0.226952  loss_kpt: 0.226952  acc_pose: 0.911257
09/15 17:18:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:18:15 - mmengine - INFO - Epoch(train) [186][200/291]  base_lr: 2.824694e-03 lr: 2.824694e-03  eta: 2:41:31  time: 0.393989  data_time: 0.159232  memory: 12704  grad_norm: 0.081412  loss: 0.230808  loss_kpt: 0.230808  acc_pose: 0.867176
09/15 17:18:27 - mmengine - INFO - Epoch(train) [176][100/146]  base_lr: 4.013015e-04 lr: 4.013015e-04  eta: 3:00:43  time: 0.787095  data_time: 0.466557  memory: 16273  loss: 0.350468  loss_kpt: 0.350468  acc_pose: 0.955573
09/15 17:18:35 - mmengine - INFO - Epoch(train) [186][250/291]  base_lr: 2.817665e-03 lr: 2.817665e-03  eta: 2:41:11  time: 0.386664  data_time: 0.151300  memory: 12704  grad_norm: 0.074020  loss: 0.229204  loss_kpt: 0.229204  acc_pose: 0.875274
09/15 17:18:51 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:19:03 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:19:11 - mmengine - INFO - Epoch(train) [187][ 50/291]  base_lr: 2.804844e-03 lr: 2.804844e-03  eta: 2:40:35  time: 0.404932  data_time: 0.170565  memory: 12704  grad_norm: 0.067570  loss: 0.227675  loss_kpt: 0.227675  acc_pose: 0.889518
09/15 17:19:31 - mmengine - INFO - Epoch(train) [187][100/291]  base_lr: 2.797783e-03 lr: 2.797783e-03  eta: 2:40:15  time: 0.388463  data_time: 0.154007  memory: 12704  grad_norm: 0.078487  loss: 0.225848  loss_kpt: 0.225848  acc_pose: 0.893214
09/15 17:19:43 - mmengine - INFO - Epoch(train) [177][ 50/146]  base_lr: 3.983365e-04 lr: 3.983365e-04  eta: 2:59:28  time: 0.799766  data_time: 0.483492  memory: 16273  loss: 0.351711  loss_kpt: 0.351711  acc_pose: 0.968393
09/15 17:19:50 - mmengine - INFO - Epoch(train) [187][150/291]  base_lr: 2.790712e-03 lr: 2.790712e-03  eta: 2:39:56  time: 0.389700  data_time: 0.155923  memory: 12704  grad_norm: 0.080825  loss: 0.230115  loss_kpt: 0.230115  acc_pose: 0.864701
09/15 17:20:10 - mmengine - INFO - Epoch(train) [187][200/291]  base_lr: 2.783629e-03 lr: 2.783629e-03  eta: 2:39:36  time: 0.399259  data_time: 0.165707  memory: 12704  grad_norm: 0.067420  loss: 0.226729  loss_kpt: 0.226729  acc_pose: 0.914842
09/15 17:20:23 - mmengine - INFO - Epoch(train) [177][100/146]  base_lr: 3.967796e-04 lr: 3.967796e-04  eta: 2:58:48  time: 0.789726  data_time: 0.473706  memory: 16273  loss: 0.349859  loss_kpt: 0.349859  acc_pose: 0.980066
09/15 17:20:30 - mmengine - INFO - Epoch(train) [187][250/291]  base_lr: 2.776535e-03 lr: 2.776535e-03  eta: 2:39:16  time: 0.400634  data_time: 0.167469  memory: 12704  grad_norm: 0.081994  loss: 0.226913  loss_kpt: 0.226913  acc_pose: 0.885445
09/15 17:20:46 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:20:59 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:21:07 - mmengine - INFO - Epoch(train) [188][ 50/291]  base_lr: 2.763597e-03 lr: 2.763597e-03  eta: 2:38:41  time: 0.412836  data_time: 0.178046  memory: 12704  grad_norm: 0.078740  loss: 0.224266  loss_kpt: 0.224266  acc_pose: 0.913584
09/15 17:21:26 - mmengine - INFO - Epoch(train) [188][100/291]  base_lr: 2.756473e-03 lr: 2.756473e-03  eta: 2:38:21  time: 0.392798  data_time: 0.158793  memory: 12704  grad_norm: 0.087204  loss: 0.229647  loss_kpt: 0.229647  acc_pose: 0.857880
09/15 17:21:39 - mmengine - INFO - Epoch(train) [178][ 50/146]  base_lr: 3.937665e-04 lr: 3.937665e-04  eta: 2:57:33  time: 0.798291  data_time: 0.481453  memory: 16273  loss: 0.343968  loss_kpt: 0.343968  acc_pose: 0.971863
09/15 17:21:46 - mmengine - INFO - Epoch(train) [188][150/291]  base_lr: 2.749339e-03 lr: 2.749339e-03  eta: 2:38:01  time: 0.397201  data_time: 0.163752  memory: 12704  grad_norm: 0.069370  loss: 0.224314  loss_kpt: 0.224314  acc_pose: 0.879700
09/15 17:22:06 - mmengine - INFO - Epoch(train) [188][200/291]  base_lr: 2.742194e-03 lr: 2.742194e-03  eta: 2:37:41  time: 0.400472  data_time: 0.166098  memory: 12704  grad_norm: 0.075422  loss: 0.224740  loss_kpt: 0.224740  acc_pose: 0.788363
09/15 17:22:18 - mmengine - INFO - Epoch(train) [178][100/146]  base_lr: 3.921849e-04 lr: 3.921849e-04  eta: 2:56:53  time: 0.784096  data_time: 0.468504  memory: 16273  loss: 0.355183  loss_kpt: 0.355183  acc_pose: 0.981065
09/15 17:22:26 - mmengine - INFO - Epoch(train) [188][250/291]  base_lr: 2.735039e-03 lr: 2.735039e-03  eta: 2:37:21  time: 0.385585  data_time: 0.151176  memory: 12704  grad_norm: 0.068809  loss: 0.225222  loss_kpt: 0.225222  acc_pose: 0.895905
09/15 17:22:42 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:22:53 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:23:02 - mmengine - INFO - Epoch(train) [189][ 50/291]  base_lr: 2.721990e-03 lr: 2.721990e-03  eta: 2:36:46  time: 0.417607  data_time: 0.182385  memory: 12704  grad_norm: 0.090080  loss: 0.227146  loss_kpt: 0.227146  acc_pose: 0.857968
09/15 17:23:04 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:23:22 - mmengine - INFO - Epoch(train) [189][100/291]  base_lr: 2.714807e-03 lr: 2.714807e-03  eta: 2:36:26  time: 0.386353  data_time: 0.152264  memory: 12704  grad_norm: 0.063638  loss: 0.225719  loss_kpt: 0.225719  acc_pose: 0.914529
09/15 17:23:33 - mmengine - INFO - Epoch(train) [179][ 50/146]  base_lr: 3.891254e-04 lr: 3.891254e-04  eta: 2:55:38  time: 0.800380  data_time: 0.484617  memory: 16273  loss: 0.348066  loss_kpt: 0.348066  acc_pose: 0.984941
09/15 17:23:42 - mmengine - INFO - Epoch(train) [189][150/291]  base_lr: 2.707614e-03 lr: 2.707614e-03  eta: 2:36:06  time: 0.402084  data_time: 0.167727  memory: 12704  grad_norm: 0.073941  loss: 0.228845  loss_kpt: 0.228845  acc_pose: 0.894510
09/15 17:24:01 - mmengine - INFO - Epoch(train) [189][200/291]  base_lr: 2.700411e-03 lr: 2.700411e-03  eta: 2:35:46  time: 0.384018  data_time: 0.150381  memory: 12704  grad_norm: 0.072421  loss: 0.228584  loss_kpt: 0.228584  acc_pose: 0.794188
09/15 17:24:13 - mmengine - INFO - Epoch(train) [179][100/146]  base_lr: 3.875201e-04 lr: 3.875201e-04  eta: 2:54:58  time: 0.789720  data_time: 0.473842  memory: 16273  loss: 0.347490  loss_kpt: 0.347490  acc_pose: 0.980266
09/15 17:24:21 - mmengine - INFO - Epoch(train) [189][250/291]  base_lr: 2.693198e-03 lr: 2.693198e-03  eta: 2:35:27  time: 0.395466  data_time: 0.158642  memory: 12704  grad_norm: 0.077936  loss: 0.228610  loss_kpt: 0.228610  acc_pose: 0.907067
09/15 17:24:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:24:38 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:24:49 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:24:57 - mmengine - INFO - Epoch(train) [190][ 50/291]  base_lr: 2.680047e-03 lr: 2.680047e-03  eta: 2:34:51  time: 0.402178  data_time: 0.169143  memory: 12704  grad_norm: 0.070288  loss: 0.222980  loss_kpt: 0.222980  acc_pose: 0.893611
09/15 17:25:17 - mmengine - INFO - Epoch(train) [190][100/291]  base_lr: 2.672808e-03 lr: 2.672808e-03  eta: 2:34:31  time: 0.393432  data_time: 0.158783  memory: 12704  grad_norm: 0.079399  loss: 0.226730  loss_kpt: 0.226730  acc_pose: 0.886794
09/15 17:25:29 - mmengine - INFO - Epoch(train) [180][ 50/146]  base_lr: 3.844157e-04 lr: 3.844157e-04  eta: 2:53:43  time: 0.805033  data_time: 0.488871  memory: 16273  loss: 0.348821  loss_kpt: 0.348821  acc_pose: 0.975562
09/15 17:25:37 - mmengine - INFO - Epoch(train) [190][150/291]  base_lr: 2.665560e-03 lr: 2.665560e-03  eta: 2:34:11  time: 0.398156  data_time: 0.160854  memory: 12704  grad_norm: 0.079156  loss: 0.231561  loss_kpt: 0.231561  acc_pose: 0.898856
09/15 17:25:57 - mmengine - INFO - Epoch(train) [190][200/291]  base_lr: 2.658303e-03 lr: 2.658303e-03  eta: 2:33:52  time: 0.401499  data_time: 0.166842  memory: 12704  grad_norm: 0.081589  loss: 0.227735  loss_kpt: 0.227735  acc_pose: 0.904809
09/15 17:26:08 - mmengine - INFO - Epoch(train) [180][100/146]  base_lr: 3.827875e-04 lr: 3.827875e-04  eta: 2:53:04  time: 0.784836  data_time: 0.466948  memory: 16273  loss: 0.351362  loss_kpt: 0.351362  acc_pose: 0.963936
09/15 17:26:16 - mmengine - INFO - Epoch(train) [190][250/291]  base_lr: 2.651037e-03 lr: 2.651037e-03  eta: 2:33:32  time: 0.384238  data_time: 0.150073  memory: 12704  grad_norm: 0.068649  loss: 0.229679  loss_kpt: 0.229679  acc_pose: 0.866265
09/15 17:26:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:26:32 - mmengine - INFO - Saving checkpoint at 190 epochs
09/15 17:26:43 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:26:43 - mmengine - INFO - Saving checkpoint at 180 epochs
09/15 17:26:54 - mmengine - INFO - Epoch(train) [191][ 50/291]  base_lr: 2.637790e-03 lr: 2.637790e-03  eta: 2:32:56  time: 0.417130  data_time: 0.182499  memory: 12704  grad_norm: 0.093518  loss: 0.224382  loss_kpt: 0.224382  acc_pose: 0.920903
09/15 17:27:14 - mmengine - INFO - Epoch(train) [191][100/291]  base_lr: 2.630499e-03 lr: 2.630499e-03  eta: 2:32:36  time: 0.398550  data_time: 0.164236  memory: 12704  grad_norm: 0.091568  loss: 0.228338  loss_kpt: 0.228338  acc_pose: 0.901359
09/15 17:27:25 - mmengine - INFO - Epoch(train) [181][ 50/146]  base_lr: 3.796400e-04 lr: 3.796400e-04  eta: 2:51:48  time: 0.813137  data_time: 0.496166  memory: 16273  loss: 0.349691  loss_kpt: 0.349691  acc_pose: 0.967374
09/15 17:27:34 - mmengine - INFO - Epoch(train) [191][150/291]  base_lr: 2.623200e-03 lr: 2.623200e-03  eta: 2:32:16  time: 0.383288  data_time: 0.148879  memory: 12704  grad_norm: 0.071246  loss: 0.223102  loss_kpt: 0.223102  acc_pose: 0.896306
09/15 17:27:53 - mmengine - INFO - Epoch(train) [191][200/291]  base_lr: 2.615892e-03 lr: 2.615892e-03  eta: 2:31:57  time: 0.398798  data_time: 0.164867  memory: 12704  grad_norm: 0.067232  loss: 0.227369  loss_kpt: 0.227369  acc_pose: 0.866795
09/15 17:28:03 - mmengine - INFO - Epoch(train) [181][100/146]  base_lr: 3.779898e-04 lr: 3.779898e-04  eta: 2:51:08  time: 0.768251  data_time: 0.450853  memory: 16273  loss: 0.349739  loss_kpt: 0.349739  acc_pose: 0.975507
09/15 17:28:13 - mmengine - INFO - Epoch(train) [191][250/291]  base_lr: 2.608576e-03 lr: 2.608576e-03  eta: 2:31:37  time: 0.393760  data_time: 0.159324  memory: 12704  grad_norm: 0.062728  loss: 0.225345  loss_kpt: 0.225345  acc_pose: 0.867503
09/15 17:28:29 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:28:39 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:28:49 - mmengine - INFO - Epoch(train) [192][ 50/291]  base_lr: 2.595241e-03 lr: 2.595241e-03  eta: 2:31:01  time: 0.413821  data_time: 0.176856  memory: 12704  grad_norm: 0.070020  loss: 0.225920  loss_kpt: 0.225920  acc_pose: 0.849525
09/15 17:29:09 - mmengine - INFO - Epoch(train) [192][100/291]  base_lr: 2.587903e-03 lr: 2.587903e-03  eta: 2:30:41  time: 0.393336  data_time: 0.159013  memory: 12704  grad_norm: 0.070719  loss: 0.228468  loss_kpt: 0.228468  acc_pose: 0.887241
09/15 17:29:19 - mmengine - INFO - Epoch(train) [182][ 50/146]  base_lr: 3.748009e-04 lr: 3.748009e-04  eta: 2:49:53  time: 0.808476  data_time: 0.491179  memory: 16273  loss: 0.347215  loss_kpt: 0.347215  acc_pose: 0.964783
09/15 17:29:28 - mmengine - INFO - Epoch(train) [192][150/291]  base_lr: 2.580556e-03 lr: 2.580556e-03  eta: 2:30:21  time: 0.386547  data_time: 0.152060  memory: 12704  grad_norm: 0.068237  loss: 0.222642  loss_kpt: 0.222642  acc_pose: 0.871400
09/15 17:29:48 - mmengine - INFO - Epoch(train) [192][200/291]  base_lr: 2.573202e-03 lr: 2.573202e-03  eta: 2:30:02  time: 0.393744  data_time: 0.157096  memory: 12704  grad_norm: 0.090968  loss: 0.229015  loss_kpt: 0.229015  acc_pose: 0.813810
09/15 17:29:59 - mmengine - INFO - Epoch(train) [182][100/146]  base_lr: 3.731295e-04 lr: 3.731295e-04  eta: 2:49:13  time: 0.784677  data_time: 0.468812  memory: 16273  loss: 0.346533  loss_kpt: 0.346533  acc_pose: 0.971303
09/15 17:30:08 - mmengine - INFO - Epoch(train) [192][250/291]  base_lr: 2.565841e-03 lr: 2.565841e-03  eta: 2:29:42  time: 0.397165  data_time: 0.162935  memory: 12704  grad_norm: 0.078409  loss: 0.228263  loss_kpt: 0.228263  acc_pose: 0.882819
09/15 17:30:24 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:30:34 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:30:44 - mmengine - INFO - Epoch(train) [193][ 50/291]  base_lr: 2.552424e-03 lr: 2.552424e-03  eta: 2:29:06  time: 0.411130  data_time: 0.176907  memory: 12704  grad_norm: 0.084301  loss: 0.222516  loss_kpt: 0.222516  acc_pose: 0.836053
09/15 17:31:04 - mmengine - INFO - Epoch(train) [193][100/291]  base_lr: 2.545042e-03 lr: 2.545042e-03  eta: 2:28:46  time: 0.385451  data_time: 0.151334  memory: 12704  grad_norm: 0.074024  loss: 0.230496  loss_kpt: 0.230496  acc_pose: 0.830712
09/15 17:31:14 - mmengine - INFO - Epoch(train) [183][ 50/146]  base_lr: 3.699009e-04 lr: 3.699009e-04  eta: 2:47:58  time: 0.799599  data_time: 0.482665  memory: 16273  loss: 0.341781  loss_kpt: 0.341781  acc_pose: 0.984054
09/15 17:31:15 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:31:23 - mmengine - INFO - Epoch(train) [193][150/291]  base_lr: 2.537653e-03 lr: 2.537653e-03  eta: 2:28:26  time: 0.391502  data_time: 0.157832  memory: 12704  grad_norm: 0.067603  loss: 0.227652  loss_kpt: 0.227652  acc_pose: 0.850386
09/15 17:31:43 - mmengine - INFO - Epoch(train) [193][200/291]  base_lr: 2.530256e-03 lr: 2.530256e-03  eta: 2:28:07  time: 0.392106  data_time: 0.157396  memory: 12704  grad_norm: 0.066298  loss: 0.222143  loss_kpt: 0.222143  acc_pose: 0.864569
09/15 17:31:53 - mmengine - INFO - Epoch(train) [183][100/146]  base_lr: 3.682093e-04 lr: 3.682093e-04  eta: 2:47:18  time: 0.781535  data_time: 0.461674  memory: 16273  loss: 0.351653  loss_kpt: 0.351653  acc_pose: 0.966397
09/15 17:32:02 - mmengine - INFO - Epoch(train) [193][250/291]  base_lr: 2.522853e-03 lr: 2.522853e-03  eta: 2:27:47  time: 0.389369  data_time: 0.155485  memory: 12704  grad_norm: 0.074998  loss: 0.227055  loss_kpt: 0.227055  acc_pose: 0.878188
09/15 17:32:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:32:29 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:32:38 - mmengine - INFO - Epoch(train) [194][ 50/291]  base_lr: 2.509362e-03 lr: 2.509362e-03  eta: 2:27:11  time: 0.400472  data_time: 0.166229  memory: 12704  grad_norm: 0.065467  loss: 0.223743  loss_kpt: 0.223743  acc_pose: 0.872874
09/15 17:32:59 - mmengine - INFO - Epoch(train) [194][100/291]  base_lr: 2.501940e-03 lr: 2.501940e-03  eta: 2:26:51  time: 0.400674  data_time: 0.165997  memory: 12704  grad_norm: 0.063557  loss: 0.226596  loss_kpt: 0.226596  acc_pose: 0.846583
09/15 17:33:09 - mmengine - INFO - Epoch(train) [184][ 50/146]  base_lr: 3.649428e-04 lr: 3.649428e-04  eta: 2:46:03  time: 0.800568  data_time: 0.484163  memory: 16273  loss: 0.350653  loss_kpt: 0.350653  acc_pose: 0.955899
09/15 17:33:18 - mmengine - INFO - Epoch(train) [194][150/291]  base_lr: 2.494512e-03 lr: 2.494512e-03  eta: 2:26:31  time: 0.395975  data_time: 0.161021  memory: 12704  grad_norm: 0.061601  loss: 0.221695  loss_kpt: 0.221695  acc_pose: 0.877605
09/15 17:33:38 - mmengine - INFO - Epoch(train) [194][200/291]  base_lr: 2.487077e-03 lr: 2.487077e-03  eta: 2:26:12  time: 0.391401  data_time: 0.156815  memory: 12704  grad_norm: 0.064325  loss: 0.222627  loss_kpt: 0.222627  acc_pose: 0.854197
09/15 17:33:48 - mmengine - INFO - Epoch(train) [184][100/146]  base_lr: 3.632319e-04 lr: 3.632319e-04  eta: 2:45:23  time: 0.782558  data_time: 0.463415  memory: 16273  loss: 0.346183  loss_kpt: 0.346183  acc_pose: 0.980662
09/15 17:33:58 - mmengine - INFO - Epoch(train) [194][250/291]  base_lr: 2.479637e-03 lr: 2.479637e-03  eta: 2:25:52  time: 0.395265  data_time: 0.159997  memory: 12704  grad_norm: 0.071072  loss: 0.224332  loss_kpt: 0.224332  acc_pose: 0.889919
09/15 17:34:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:34:23 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:34:34 - mmengine - INFO - Epoch(train) [195][ 50/291]  base_lr: 2.466079e-03 lr: 2.466079e-03  eta: 2:25:16  time: 0.410214  data_time: 0.176012  memory: 12704  grad_norm: 0.067870  loss: 0.221842  loss_kpt: 0.221842  acc_pose: 0.824803
09/15 17:34:54 - mmengine - INFO - Epoch(train) [195][100/291]  base_lr: 2.458621e-03 lr: 2.458621e-03  eta: 2:24:56  time: 0.385003  data_time: 0.150767  memory: 12704  grad_norm: 0.058880  loss: 0.222908  loss_kpt: 0.222908  acc_pose: 0.916819
09/15 17:35:03 - mmengine - INFO - Epoch(train) [185][ 50/146]  base_lr: 3.599292e-04 lr: 3.599292e-04  eta: 2:44:07  time: 0.798524  data_time: 0.482613  memory: 16273  loss: 0.349161  loss_kpt: 0.349161  acc_pose: 0.983034
09/15 17:35:13 - mmengine - INFO - Epoch(train) [195][150/291]  base_lr: 2.451158e-03 lr: 2.451158e-03  eta: 2:24:36  time: 0.381427  data_time: 0.147339  memory: 12704  grad_norm: 0.069909  loss: 0.222687  loss_kpt: 0.222687  acc_pose: 0.908572
09/15 17:35:33 - mmengine - INFO - Epoch(train) [195][200/291]  base_lr: 2.443689e-03 lr: 2.443689e-03  eta: 2:24:17  time: 0.398393  data_time: 0.163713  memory: 12704  grad_norm: 0.067800  loss: 0.226482  loss_kpt: 0.226482  acc_pose: 0.867694
09/15 17:35:42 - mmengine - INFO - Epoch(train) [185][100/146]  base_lr: 3.582000e-04 lr: 3.582000e-04  eta: 2:43:28  time: 0.786816  data_time: 0.468051  memory: 16273  loss: 0.346706  loss_kpt: 0.346706  acc_pose: 0.971665
09/15 17:35:52 - mmengine - INFO - Epoch(train) [195][250/291]  base_lr: 2.436214e-03 lr: 2.436214e-03  eta: 2:23:57  time: 0.397223  data_time: 0.163351  memory: 12704  grad_norm: 0.057480  loss: 0.223579  loss_kpt: 0.223579  acc_pose: 0.900359
09/15 17:36:08 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:36:11 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:36:18 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:36:28 - mmengine - INFO - Epoch(train) [196][ 50/291]  base_lr: 2.422597e-03 lr: 2.422597e-03  eta: 2:23:21  time: 0.403386  data_time: 0.169471  memory: 12704  grad_norm: 0.064302  loss: 0.220804  loss_kpt: 0.220804  acc_pose: 0.948544
09/15 17:36:48 - mmengine - INFO - Epoch(train) [196][100/291]  base_lr: 2.415108e-03 lr: 2.415108e-03  eta: 2:23:01  time: 0.391492  data_time: 0.156462  memory: 12704  grad_norm: 0.061555  loss: 0.222084  loss_kpt: 0.222084  acc_pose: 0.907252
09/15 17:36:58 - mmengine - INFO - Epoch(train) [186][ 50/146]  base_lr: 3.548629e-04 lr: 3.548629e-04  eta: 2:42:12  time: 0.805910  data_time: 0.487783  memory: 16273  loss: 0.346957  loss_kpt: 0.346957  acc_pose: 0.971796
09/15 17:37:07 - mmengine - INFO - Epoch(train) [196][150/291]  base_lr: 2.407613e-03 lr: 2.407613e-03  eta: 2:22:41  time: 0.390533  data_time: 0.157672  memory: 12704  grad_norm: 0.063727  loss: 0.222985  loss_kpt: 0.222985  acc_pose: 0.845652
09/15 17:37:27 - mmengine - INFO - Epoch(train) [196][200/291]  base_lr: 2.400114e-03 lr: 2.400114e-03  eta: 2:22:21  time: 0.395346  data_time: 0.160109  memory: 12704  grad_norm: 0.060798  loss: 0.227976  loss_kpt: 0.227976  acc_pose: 0.906080
09/15 17:37:38 - mmengine - INFO - Epoch(train) [186][100/146]  base_lr: 3.531162e-04 lr: 3.531162e-04  eta: 2:41:33  time: 0.781488  data_time: 0.463767  memory: 16273  loss: 0.344375  loss_kpt: 0.344375  acc_pose: 0.982394
09/15 17:37:47 - mmengine - INFO - Epoch(train) [196][250/291]  base_lr: 2.392610e-03 lr: 2.392610e-03  eta: 2:22:02  time: 0.400255  data_time: 0.166367  memory: 12704  grad_norm: 0.083220  loss: 0.222400  loss_kpt: 0.222400  acc_pose: 0.862109
09/15 17:37:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:38:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:38:14 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:38:23 - mmengine - INFO - Epoch(train) [197][ 50/291]  base_lr: 2.378941e-03 lr: 2.378941e-03  eta: 2:21:26  time: 0.409795  data_time: 0.175269  memory: 12704  grad_norm: 0.064503  loss: 0.225106  loss_kpt: 0.225106  acc_pose: 0.909139
09/15 17:38:43 - mmengine - INFO - Epoch(train) [197][100/291]  base_lr: 2.371424e-03 lr: 2.371424e-03  eta: 2:21:06  time: 0.391438  data_time: 0.156402  memory: 12704  grad_norm: 0.062066  loss: 0.222808  loss_kpt: 0.222808  acc_pose: 0.874088
09/15 17:38:55 - mmengine - INFO - Epoch(train) [187][ 50/146]  base_lr: 3.497465e-04 lr: 3.497465e-04  eta: 2:40:18  time: 0.814983  data_time: 0.496489  memory: 16273  loss: 0.345868  loss_kpt: 0.345868  acc_pose: 0.980908
09/15 17:39:03 - mmengine - INFO - Epoch(train) [197][150/291]  base_lr: 2.363902e-03 lr: 2.363902e-03  eta: 2:20:46  time: 0.398646  data_time: 0.164765  memory: 12704  grad_norm: 0.069856  loss: 0.226952  loss_kpt: 0.226952  acc_pose: 0.801070
09/15 17:39:22 - mmengine - INFO - Epoch(train) [197][200/291]  base_lr: 2.356377e-03 lr: 2.356377e-03  eta: 2:20:27  time: 0.394055  data_time: 0.159256  memory: 12704  grad_norm: 0.069694  loss: 0.223650  loss_kpt: 0.223650  acc_pose: 0.944427
09/15 17:39:33 - mmengine - INFO - Epoch(train) [187][100/146]  base_lr: 3.479833e-04 lr: 3.479833e-04  eta: 2:39:38  time: 0.768558  data_time: 0.453427  memory: 16273  loss: 0.343453  loss_kpt: 0.343453  acc_pose: 0.973228
09/15 17:39:42 - mmengine - INFO - Epoch(train) [197][250/291]  base_lr: 2.348847e-03 lr: 2.348847e-03  eta: 2:20:07  time: 0.398735  data_time: 0.162172  memory: 12704  grad_norm: 0.070764  loss: 0.219690  loss_kpt: 0.219690  acc_pose: 0.864820
09/15 17:39:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:40:09 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:40:19 - mmengine - INFO - Epoch(train) [198][ 50/291]  base_lr: 2.335133e-03 lr: 2.335133e-03  eta: 2:19:31  time: 0.408397  data_time: 0.172888  memory: 12704  grad_norm: 0.067535  loss: 0.223492  loss_kpt: 0.223492  acc_pose: 0.827167
09/15 17:40:38 - mmengine - INFO - Epoch(train) [198][100/291]  base_lr: 2.327593e-03 lr: 2.327593e-03  eta: 2:19:11  time: 0.389224  data_time: 0.155112  memory: 12704  grad_norm: 0.065785  loss: 0.223425  loss_kpt: 0.223425  acc_pose: 0.883711
09/15 17:40:50 - mmengine - INFO - Epoch(train) [188][ 50/146]  base_lr: 3.445829e-04 lr: 3.445829e-04  eta: 2:38:23  time: 0.805589  data_time: 0.488610  memory: 16273  loss: 0.345252  loss_kpt: 0.345252  acc_pose: 0.974864
09/15 17:40:57 - mmengine - INFO - Epoch(train) [198][150/291]  base_lr: 2.320048e-03 lr: 2.320048e-03  eta: 2:18:51  time: 0.384523  data_time: 0.150153  memory: 12704  grad_norm: 0.070346  loss: 0.221973  loss_kpt: 0.221973  acc_pose: 0.879839
09/15 17:41:18 - mmengine - INFO - Epoch(train) [198][200/291]  base_lr: 2.312501e-03 lr: 2.312501e-03  eta: 2:18:32  time: 0.403601  data_time: 0.168998  memory: 12704  grad_norm: 0.067082  loss: 0.224491  loss_kpt: 0.224491  acc_pose: 0.854011
09/15 17:41:29 - mmengine - INFO - Epoch(train) [188][100/146]  base_lr: 3.428042e-04 lr: 3.428042e-04  eta: 2:37:44  time: 0.782806  data_time: 0.465898  memory: 16273  loss: 0.338782  loss_kpt: 0.338782  acc_pose: 0.973411
09/15 17:41:38 - mmengine - INFO - Epoch(train) [198][250/291]  base_lr: 2.304950e-03 lr: 2.304950e-03  eta: 2:18:12  time: 0.400946  data_time: 0.166441  memory: 12704  grad_norm: 0.062751  loss: 0.221824  loss_kpt: 0.221824  acc_pose: 0.857087
09/15 17:41:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:42:04 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:42:14 - mmengine - INFO - Epoch(train) [199][ 50/291]  base_lr: 2.291198e-03 lr: 2.291198e-03  eta: 2:17:36  time: 0.407735  data_time: 0.173787  memory: 12704  grad_norm: 0.058831  loss: 0.224279  loss_kpt: 0.224279  acc_pose: 0.866570
09/15 17:42:34 - mmengine - INFO - Epoch(train) [199][100/291]  base_lr: 2.283638e-03 lr: 2.283638e-03  eta: 2:17:17  time: 0.393668  data_time: 0.159281  memory: 12704  grad_norm: 0.072012  loss: 0.223193  loss_kpt: 0.223193  acc_pose: 0.850662
09/15 17:42:44 - mmengine - INFO - Epoch(train) [189][ 50/146]  base_lr: 3.393749e-04 lr: 3.393749e-04  eta: 2:36:28  time: 0.793453  data_time: 0.477074  memory: 16273  loss: 0.346050  loss_kpt: 0.346050  acc_pose: 0.979514
09/15 17:42:53 - mmengine - INFO - Epoch(train) [199][150/291]  base_lr: 2.276075e-03 lr: 2.276075e-03  eta: 2:16:57  time: 0.390268  data_time: 0.154960  memory: 12704  grad_norm: 0.068987  loss: 0.219494  loss_kpt: 0.219494  acc_pose: 0.892430
09/15 17:43:13 - mmengine - INFO - Epoch(train) [199][200/291]  base_lr: 2.268509e-03 lr: 2.268509e-03  eta: 2:16:37  time: 0.388080  data_time: 0.153568  memory: 12704  grad_norm: 0.065238  loss: 0.221503  loss_kpt: 0.221503  acc_pose: 0.915172
09/15 17:43:22 - mmengine - INFO - Epoch(train) [189][100/146]  base_lr: 3.375816e-04 lr: 3.375816e-04  eta: 2:35:48  time: 0.773405  data_time: 0.455816  memory: 16273  loss: 0.343817  loss_kpt: 0.343817  acc_pose: 0.956595
09/15 17:43:33 - mmengine - INFO - Epoch(train) [199][250/291]  base_lr: 2.260941e-03 lr: 2.260941e-03  eta: 2:16:17  time: 0.402411  data_time: 0.164913  memory: 12704  grad_norm: 0.073395  loss: 0.221388  loss_kpt: 0.221388  acc_pose: 0.880045
09/15 17:43:48 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:43:58 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:44:09 - mmengine - INFO - Epoch(train) [200][ 50/291]  base_lr: 2.247160e-03 lr: 2.247160e-03  eta: 2:15:41  time: 0.405419  data_time: 0.171428  memory: 12704  grad_norm: 0.070299  loss: 0.218996  loss_kpt: 0.218996  acc_pose: 0.936409
09/15 17:44:25 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:44:29 - mmengine - INFO - Epoch(train) [200][100/291]  base_lr: 2.239584e-03 lr: 2.239584e-03  eta: 2:15:22  time: 0.397720  data_time: 0.163190  memory: 12704  grad_norm: 0.059059  loss: 0.223884  loss_kpt: 0.223884  acc_pose: 0.876453
09/15 17:44:38 - mmengine - INFO - Epoch(train) [190][ 50/146]  base_lr: 3.341252e-04 lr: 3.341252e-04  eta: 2:34:33  time: 0.801862  data_time: 0.486806  memory: 16273  loss: 0.341346  loss_kpt: 0.341346  acc_pose: 0.978835
09/15 17:44:49 - mmengine - INFO - Epoch(train) [200][150/291]  base_lr: 2.232007e-03 lr: 2.232007e-03  eta: 2:15:02  time: 0.400263  data_time: 0.165704  memory: 12704  grad_norm: 0.062476  loss: 0.219173  loss_kpt: 0.219173  acc_pose: 0.854945
09/15 17:45:08 - mmengine - INFO - Epoch(train) [200][200/291]  base_lr: 2.224427e-03 lr: 2.224427e-03  eta: 2:14:42  time: 0.381710  data_time: 0.145265  memory: 12704  grad_norm: 0.060499  loss: 0.219928  loss_kpt: 0.219928  acc_pose: 0.855243
09/15 17:45:18 - mmengine - INFO - Epoch(train) [190][100/146]  base_lr: 3.323183e-04 lr: 3.323183e-04  eta: 2:33:53  time: 0.792697  data_time: 0.475503  memory: 16273  loss: 0.344026  loss_kpt: 0.344026  acc_pose: 0.981483
09/15 17:45:28 - mmengine - INFO - Epoch(train) [200][250/291]  base_lr: 2.216845e-03 lr: 2.216845e-03  eta: 2:14:22  time: 0.409471  data_time: 0.174516  memory: 12704  grad_norm: 0.063284  loss: 0.224017  loss_kpt: 0.224017  acc_pose: 0.938734
09/15 17:45:44 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:45:44 - mmengine - INFO - Saving checkpoint at 200 epochs
09/15 17:45:53 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:45:53 - mmengine - INFO - Saving checkpoint at 190 epochs
09/15 17:45:56 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.42s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.743
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.969
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.836
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.743
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.821
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.981
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.903
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.821
09/15 17:45:57 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 17:45:57 - mmengine - INFO - Evaluating AUC...
09/15 17:45:57 - mmengine - INFO - Evaluating NME...
09/15 17:45:57 - mmengine - INFO - Epoch(val) [200][38/38]    coco/AP: 0.743481  coco/AP .5: 0.969412  coco/AP .75: 0.836151  coco/AP (L): -1.000000  coco/AR: 0.743481  coco/AR .5: 0.820623  coco/AR .75: 0.981481  coco/AR (L): 0.903199  PCK: 0.920993  AUC: 0.583047  NME: 0.327511  data_time: 0.151930  time: 0.262007
09/15 17:45:57 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/3/best_coco_AP_epoch_150.pth is removed
09/15 17:45:58 - mmengine - INFO - The best checkpoint with 0.7435 coco/AP at 200 epoch is saved to best_coco_AP_epoch_200.pth.
09/15 17:46:20 - mmengine - INFO - Epoch(train) [201][ 50/291]  base_lr: 2.203042e-03 lr: 2.203042e-03  eta: 2:13:46  time: 0.401426  data_time: 0.166989  memory: 12704  grad_norm: 0.065844  loss: 0.223379  loss_kpt: 0.223379  acc_pose: 0.916571
09/15 17:46:36 - mmengine - INFO - Epoch(train) [191][ 50/146]  base_lr: 3.288367e-04 lr: 3.288367e-04  eta: 2:32:38  time: 0.824124  data_time: 0.505110  memory: 16273  loss: 0.343021  loss_kpt: 0.343021  acc_pose: 0.975949
09/15 17:46:40 - mmengine - INFO - Epoch(train) [201][100/291]  base_lr: 2.195455e-03 lr: 2.195455e-03  eta: 2:13:27  time: 0.393923  data_time: 0.159479  memory: 12704  grad_norm: 0.065840  loss: 0.220099  loss_kpt: 0.220099  acc_pose: 0.921047
09/15 17:47:00 - mmengine - INFO - Epoch(train) [201][150/291]  base_lr: 2.187867e-03 lr: 2.187867e-03  eta: 2:13:07  time: 0.401434  data_time: 0.167292  memory: 12704  grad_norm: 0.071754  loss: 0.222733  loss_kpt: 0.222733  acc_pose: 0.911498
09/15 17:47:14 - mmengine - INFO - Epoch(train) [191][100/146]  base_lr: 3.270172e-04 lr: 3.270172e-04  eta: 2:31:58  time: 0.769414  data_time: 0.452651  memory: 16273  loss: 0.342948  loss_kpt: 0.342948  acc_pose: 0.972096
09/15 17:47:19 - mmengine - INFO - Epoch(train) [201][200/291]  base_lr: 2.180277e-03 lr: 2.180277e-03  eta: 2:12:47  time: 0.387002  data_time: 0.153206  memory: 12704  grad_norm: 0.070869  loss: 0.219870  loss_kpt: 0.219870  acc_pose: 0.869700
09/15 17:47:39 - mmengine - INFO - Epoch(train) [201][250/291]  base_lr: 2.172686e-03 lr: 2.172686e-03  eta: 2:12:27  time: 0.404559  data_time: 0.169771  memory: 12704  grad_norm: 0.069927  loss: 0.223697  loss_kpt: 0.223697  acc_pose: 0.890839
09/15 17:47:50 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:47:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:48:15 - mmengine - INFO - Epoch(train) [202][ 50/291]  base_lr: 2.158868e-03 lr: 2.158868e-03  eta: 2:11:52  time: 0.407251  data_time: 0.169318  memory: 12704  grad_norm: 0.058453  loss: 0.220575  loss_kpt: 0.220575  acc_pose: 0.866953
09/15 17:48:30 - mmengine - INFO - Epoch(train) [192][ 50/146]  base_lr: 3.235123e-04 lr: 3.235123e-04  eta: 2:30:43  time: 0.800763  data_time: 0.485251  memory: 16273  loss: 0.341434  loss_kpt: 0.341434  acc_pose: 0.983260
09/15 17:48:35 - mmengine - INFO - Epoch(train) [202][100/291]  base_lr: 2.151274e-03 lr: 2.151274e-03  eta: 2:11:32  time: 0.397595  data_time: 0.163016  memory: 12704  grad_norm: 0.060494  loss: 0.222196  loss_kpt: 0.222196  acc_pose: 0.889385
09/15 17:48:56 - mmengine - INFO - Epoch(train) [202][150/291]  base_lr: 2.143679e-03 lr: 2.143679e-03  eta: 2:11:12  time: 0.404705  data_time: 0.170721  memory: 12704  grad_norm: 0.068667  loss: 0.224213  loss_kpt: 0.224213  acc_pose: 0.911643
09/15 17:49:10 - mmengine - INFO - Epoch(train) [192][100/146]  base_lr: 3.216812e-04 lr: 3.216812e-04  eta: 2:30:04  time: 0.801456  data_time: 0.484650  memory: 16273  loss: 0.340691  loss_kpt: 0.340691  acc_pose: 0.947412
09/15 17:49:15 - mmengine - INFO - Epoch(train) [202][200/291]  base_lr: 2.136084e-03 lr: 2.136084e-03  eta: 2:10:52  time: 0.380291  data_time: 0.145763  memory: 12704  grad_norm: 0.061912  loss: 0.222675  loss_kpt: 0.222675  acc_pose: 0.877145
09/15 17:49:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:49:34 - mmengine - INFO - Epoch(train) [202][250/291]  base_lr: 2.128488e-03 lr: 2.128488e-03  eta: 2:10:33  time: 0.397627  data_time: 0.163691  memory: 12704  grad_norm: 0.062285  loss: 0.220581  loss_kpt: 0.220581  acc_pose: 0.930270
09/15 17:49:46 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:49:50 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:50:11 - mmengine - INFO - Epoch(train) [203][ 50/291]  base_lr: 2.114662e-03 lr: 2.114662e-03  eta: 2:09:57  time: 0.412880  data_time: 0.179517  memory: 12704  grad_norm: 0.063156  loss: 0.222076  loss_kpt: 0.222076  acc_pose: 0.907424
09/15 17:50:26 - mmengine - INFO - Epoch(train) [193][ 50/146]  base_lr: 3.181549e-04 lr: 3.181549e-04  eta: 2:28:48  time: 0.803668  data_time: 0.487553  memory: 16273  loss: 0.342467  loss_kpt: 0.342467  acc_pose: 0.982028
09/15 17:50:30 - mmengine - INFO - Epoch(train) [203][100/291]  base_lr: 2.107065e-03 lr: 2.107065e-03  eta: 2:09:37  time: 0.390187  data_time: 0.156354  memory: 12704  grad_norm: 0.051244  loss: 0.220152  loss_kpt: 0.220152  acc_pose: 0.858637
09/15 17:50:50 - mmengine - INFO - Epoch(train) [203][150/291]  base_lr: 2.099468e-03 lr: 2.099468e-03  eta: 2:09:17  time: 0.394709  data_time: 0.160218  memory: 12704  grad_norm: 0.063674  loss: 0.221899  loss_kpt: 0.221899  acc_pose: 0.866999
09/15 17:51:05 - mmengine - INFO - Epoch(train) [193][100/146]  base_lr: 3.163131e-04 lr: 3.163131e-04  eta: 2:28:09  time: 0.782159  data_time: 0.466035  memory: 16273  loss: 0.341383  loss_kpt: 0.341383  acc_pose: 0.974423
09/15 17:51:10 - mmengine - INFO - Epoch(train) [203][200/291]  base_lr: 2.091871e-03 lr: 2.091871e-03  eta: 2:08:57  time: 0.392937  data_time: 0.158513  memory: 12704  grad_norm: 0.061803  loss: 0.221230  loss_kpt: 0.221230  acc_pose: 0.833053
09/15 17:51:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:51:29 - mmengine - INFO - Epoch(train) [203][250/291]  base_lr: 2.084274e-03 lr: 2.084274e-03  eta: 2:08:38  time: 0.384241  data_time: 0.150024  memory: 12704  grad_norm: 0.067391  loss: 0.220661  loss_kpt: 0.220661  acc_pose: 0.868156
09/15 17:51:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:51:45 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:52:05 - mmengine - INFO - Epoch(train) [204][ 50/291]  base_lr: 2.070449e-03 lr: 2.070449e-03  eta: 2:08:02  time: 0.398757  data_time: 0.164634  memory: 12704  grad_norm: 0.057147  loss: 0.218858  loss_kpt: 0.218858  acc_pose: 0.923834
09/15 17:52:21 - mmengine - INFO - Epoch(train) [194][ 50/146]  base_lr: 3.127673e-04 lr: 3.127673e-04  eta: 2:26:53  time: 0.802937  data_time: 0.486943  memory: 16273  loss: 0.343648  loss_kpt: 0.343648  acc_pose: 0.973138
09/15 17:52:24 - mmengine - INFO - Epoch(train) [204][100/291]  base_lr: 2.062853e-03 lr: 2.062853e-03  eta: 2:07:42  time: 0.390370  data_time: 0.153392  memory: 12704  grad_norm: 0.064168  loss: 0.222947  loss_kpt: 0.222947  acc_pose: 0.879326
09/15 17:52:44 - mmengine - INFO - Epoch(train) [204][150/291]  base_lr: 2.055257e-03 lr: 2.055257e-03  eta: 2:07:22  time: 0.394882  data_time: 0.160965  memory: 12704  grad_norm: 0.064338  loss: 0.217627  loss_kpt: 0.217627  acc_pose: 0.882682
09/15 17:53:01 - mmengine - INFO - Epoch(train) [194][100/146]  base_lr: 3.109159e-04 lr: 3.109159e-04  eta: 2:26:14  time: 0.797145  data_time: 0.481424  memory: 16273  loss: 0.339262  loss_kpt: 0.339262  acc_pose: 0.971036
09/15 17:53:04 - mmengine - INFO - Epoch(train) [204][200/291]  base_lr: 2.047663e-03 lr: 2.047663e-03  eta: 2:07:02  time: 0.395446  data_time: 0.161123  memory: 12704  grad_norm: 0.071574  loss: 0.221112  loss_kpt: 0.221112  acc_pose: 0.887429
09/15 17:53:24 - mmengine - INFO - Epoch(train) [204][250/291]  base_lr: 2.040069e-03 lr: 2.040069e-03  eta: 2:06:43  time: 0.400010  data_time: 0.162710  memory: 12704  grad_norm: 0.061039  loss: 0.222393  loss_kpt: 0.222393  acc_pose: 0.844290
09/15 17:53:36 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:53:40 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:54:00 - mmengine - INFO - Epoch(train) [205][ 50/291]  base_lr: 2.026251e-03 lr: 2.026251e-03  eta: 2:06:07  time: 0.417364  data_time: 0.184130  memory: 12704  grad_norm: 0.060777  loss: 0.218033  loss_kpt: 0.218033  acc_pose: 0.909812
09/15 17:54:16 - mmengine - INFO - Epoch(train) [195][ 50/146]  base_lr: 3.073525e-04 lr: 3.073525e-04  eta: 2:24:58  time: 0.803156  data_time: 0.486988  memory: 16273  loss: 0.339943  loss_kpt: 0.339943  acc_pose: 0.963929
09/15 17:54:20 - mmengine - INFO - Epoch(train) [205][100/291]  base_lr: 2.018660e-03 lr: 2.018660e-03  eta: 2:05:47  time: 0.384471  data_time: 0.151279  memory: 12704  grad_norm: 0.058408  loss: 0.220678  loss_kpt: 0.220678  acc_pose: 0.920941
09/15 17:54:39 - mmengine - INFO - Epoch(train) [205][150/291]  base_lr: 2.011071e-03 lr: 2.011071e-03  eta: 2:05:27  time: 0.395988  data_time: 0.161553  memory: 12704  grad_norm: 0.063098  loss: 0.217427  loss_kpt: 0.217427  acc_pose: 0.890367
09/15 17:54:55 - mmengine - INFO - Epoch(train) [195][100/146]  base_lr: 3.054924e-04 lr: 3.054924e-04  eta: 2:24:19  time: 0.779732  data_time: 0.464601  memory: 16273  loss: 0.337584  loss_kpt: 0.337584  acc_pose: 0.989435
09/15 17:54:59 - mmengine - INFO - Epoch(train) [205][200/291]  base_lr: 2.003483e-03 lr: 2.003483e-03  eta: 2:05:07  time: 0.391577  data_time: 0.157680  memory: 12704  grad_norm: 0.072415  loss: 0.223890  loss_kpt: 0.223890  acc_pose: 0.898991
09/15 17:55:19 - mmengine - INFO - Epoch(train) [205][250/291]  base_lr: 1.995896e-03 lr: 1.995896e-03  eta: 2:04:47  time: 0.389585  data_time: 0.156131  memory: 12704  grad_norm: 0.062594  loss: 0.220437  loss_kpt: 0.220437  acc_pose: 0.905642
09/15 17:55:31 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:55:34 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:55:55 - mmengine - INFO - Epoch(train) [206][ 50/291]  base_lr: 1.982093e-03 lr: 1.982093e-03  eta: 2:04:12  time: 0.407871  data_time: 0.174109  memory: 12704  grad_norm: 0.064691  loss: 0.221216  loss_kpt: 0.221216  acc_pose: 0.854137
09/15 17:56:12 - mmengine - INFO - Epoch(train) [196][ 50/146]  base_lr: 3.019135e-04 lr: 3.019135e-04  eta: 2:23:04  time: 0.808743  data_time: 0.492667  memory: 16273  loss: 0.338174  loss_kpt: 0.338174  acc_pose: 0.972460
09/15 17:56:14 - mmengine - INFO - Epoch(train) [206][100/291]  base_lr: 1.974512e-03 lr: 1.974512e-03  eta: 2:03:52  time: 0.394855  data_time: 0.161096  memory: 12704  grad_norm: 0.057611  loss: 0.217448  loss_kpt: 0.217448  acc_pose: 0.841483
09/15 17:56:34 - mmengine - INFO - Epoch(train) [206][150/291]  base_lr: 1.966932e-03 lr: 1.966932e-03  eta: 2:03:32  time: 0.395344  data_time: 0.160709  memory: 12704  grad_norm: 0.056242  loss: 0.217779  loss_kpt: 0.217779  acc_pose: 0.879362
09/15 17:56:51 - mmengine - INFO - Epoch(train) [196][100/146]  base_lr: 3.000457e-04 lr: 3.000457e-04  eta: 2:22:24  time: 0.781216  data_time: 0.464819  memory: 16273  loss: 0.343247  loss_kpt: 0.343247  acc_pose: 0.982440
09/15 17:56:54 - mmengine - INFO - Epoch(train) [206][200/291]  base_lr: 1.959355e-03 lr: 1.959355e-03  eta: 2:03:12  time: 0.395595  data_time: 0.160882  memory: 12704  grad_norm: 0.055012  loss: 0.218286  loss_kpt: 0.218286  acc_pose: 0.853225
09/15 17:57:13 - mmengine - INFO - Epoch(train) [206][250/291]  base_lr: 1.951780e-03 lr: 1.951780e-03  eta: 2:02:52  time: 0.383950  data_time: 0.149934  memory: 12704  grad_norm: 0.059632  loss: 0.222034  loss_kpt: 0.222034  acc_pose: 0.905611
09/15 17:57:26 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:57:29 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:57:50 - mmengine - INFO - Epoch(train) [207][ 50/291]  base_lr: 1.937999e-03 lr: 1.937999e-03  eta: 2:02:17  time: 0.411071  data_time: 0.176105  memory: 12704  grad_norm: 0.058000  loss: 0.219198  loss_kpt: 0.219198  acc_pose: 0.909426
09/15 17:57:51 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:58:06 - mmengine - INFO - Epoch(train) [197][ 50/146]  base_lr: 2.964531e-04 lr: 2.964531e-04  eta: 2:21:08  time: 0.803176  data_time: 0.486448  memory: 16273  loss: 0.339896  loss_kpt: 0.339896  acc_pose: 0.972152
09/15 17:58:09 - mmengine - INFO - Epoch(train) [207][100/291]  base_lr: 1.930431e-03 lr: 1.930431e-03  eta: 2:01:57  time: 0.387500  data_time: 0.153062  memory: 12704  grad_norm: 0.055353  loss: 0.217421  loss_kpt: 0.217421  acc_pose: 0.933588
09/15 17:58:29 - mmengine - INFO - Epoch(train) [207][150/291]  base_lr: 1.922866e-03 lr: 1.922866e-03  eta: 2:01:37  time: 0.392059  data_time: 0.157416  memory: 12704  grad_norm: 0.057637  loss: 0.216455  loss_kpt: 0.216455  acc_pose: 0.922354
09/15 17:58:46 - mmengine - INFO - Epoch(train) [197][100/146]  base_lr: 2.945787e-04 lr: 2.945787e-04  eta: 2:20:29  time: 0.791206  data_time: 0.475363  memory: 16273  loss: 0.338283  loss_kpt: 0.338283  acc_pose: 0.973401
09/15 17:58:48 - mmengine - INFO - Epoch(train) [207][200/291]  base_lr: 1.915303e-03 lr: 1.915303e-03  eta: 2:01:17  time: 0.393006  data_time: 0.158653  memory: 12704  grad_norm: 0.067557  loss: 0.221050  loss_kpt: 0.221050  acc_pose: 0.860921
09/15 17:59:08 - mmengine - INFO - Epoch(train) [207][250/291]  base_lr: 1.907744e-03 lr: 1.907744e-03  eta: 2:00:57  time: 0.395951  data_time: 0.162269  memory: 12704  grad_norm: 0.062319  loss: 0.219250  loss_kpt: 0.219250  acc_pose: 0.861135
09/15 17:59:22 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 17:59:24 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 17:59:45 - mmengine - INFO - Epoch(train) [208][ 50/291]  base_lr: 1.893993e-03 lr: 1.893993e-03  eta: 2:00:22  time: 0.416525  data_time: 0.182182  memory: 12704  grad_norm: 0.059610  loss: 0.221347  loss_kpt: 0.221347  acc_pose: 0.897785
09/15 18:00:01 - mmengine - INFO - Epoch(train) [198][ 50/146]  base_lr: 2.909742e-04 lr: 2.909742e-04  eta: 2:19:14  time: 0.794204  data_time: 0.474982  memory: 16273  loss: 0.338030  loss_kpt: 0.338030  acc_pose: 0.982198
09/15 18:00:05 - mmengine - INFO - Epoch(train) [208][100/291]  base_lr: 1.886442e-03 lr: 1.886442e-03  eta: 2:00:02  time: 0.395935  data_time: 0.161531  memory: 12704  grad_norm: 0.052979  loss: 0.215850  loss_kpt: 0.215850  acc_pose: 0.889561
09/15 18:00:24 - mmengine - INFO - Epoch(train) [208][150/291]  base_lr: 1.878895e-03 lr: 1.878895e-03  eta: 1:59:42  time: 0.388795  data_time: 0.155065  memory: 12704  grad_norm: 0.063099  loss: 0.217797  loss_kpt: 0.217797  acc_pose: 0.900140
09/15 18:00:41 - mmengine - INFO - Epoch(train) [198][100/146]  base_lr: 2.890943e-04 lr: 2.890943e-04  eta: 2:18:34  time: 0.793395  data_time: 0.477373  memory: 16273  loss: 0.340879  loss_kpt: 0.340879  acc_pose: 0.957666
09/15 18:00:44 - mmengine - INFO - Epoch(train) [208][200/291]  base_lr: 1.871352e-03 lr: 1.871352e-03  eta: 1:59:22  time: 0.388784  data_time: 0.155804  memory: 12704  grad_norm: 0.065582  loss: 0.219163  loss_kpt: 0.219163  acc_pose: 0.890063
09/15 18:01:03 - mmengine - INFO - Epoch(train) [208][250/291]  base_lr: 1.863812e-03 lr: 1.863812e-03  eta: 1:59:03  time: 0.392191  data_time: 0.158911  memory: 12704  grad_norm: 0.056865  loss: 0.219406  loss_kpt: 0.219406  acc_pose: 0.927113
09/15 18:01:17 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:01:19 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:01:39 - mmengine - INFO - Epoch(train) [209][ 50/291]  base_lr: 1.850099e-03 lr: 1.850099e-03  eta: 1:58:27  time: 0.406357  data_time: 0.172987  memory: 12704  grad_norm: 0.067102  loss: 0.221064  loss_kpt: 0.221064  acc_pose: 0.902603
09/15 18:01:57 - mmengine - INFO - Epoch(train) [199][ 50/146]  base_lr: 2.854800e-04 lr: 2.854800e-04  eta: 2:17:19  time: 0.798893  data_time: 0.483396  memory: 16273  loss: 0.340726  loss_kpt: 0.340726  acc_pose: 0.978593
09/15 18:01:59 - mmengine - INFO - Epoch(train) [209][100/291]  base_lr: 1.842569e-03 lr: 1.842569e-03  eta: 1:58:07  time: 0.401188  data_time: 0.164078  memory: 12704  grad_norm: 0.058556  loss: 0.212941  loss_kpt: 0.212941  acc_pose: 0.863780
09/15 18:02:20 - mmengine - INFO - Epoch(train) [209][150/291]  base_lr: 1.835044e-03 lr: 1.835044e-03  eta: 1:57:47  time: 0.404481  data_time: 0.169381  memory: 12704  grad_norm: 0.065585  loss: 0.217256  loss_kpt: 0.217256  acc_pose: 0.859863
09/15 18:02:29 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:02:36 - mmengine - INFO - Epoch(train) [199][100/146]  base_lr: 2.835954e-04 lr: 2.835954e-04  eta: 2:16:39  time: 0.783356  data_time: 0.467284  memory: 16273  loss: 0.334221  loss_kpt: 0.334221  acc_pose: 0.976018
09/15 18:02:39 - mmengine - INFO - Epoch(train) [209][200/291]  base_lr: 1.827524e-03 lr: 1.827524e-03  eta: 1:57:27  time: 0.385529  data_time: 0.151725  memory: 12704  grad_norm: 0.057268  loss: 0.220118  loss_kpt: 0.220118  acc_pose: 0.912022
09/15 18:02:59 - mmengine - INFO - Epoch(train) [209][250/291]  base_lr: 1.820007e-03 lr: 1.820007e-03  eta: 1:57:08  time: 0.394216  data_time: 0.159449  memory: 12704  grad_norm: 0.054887  loss: 0.216738  loss_kpt: 0.216738  acc_pose: 0.949493
09/15 18:03:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:03:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:03:34 - mmengine - INFO - Epoch(train) [210][ 50/291]  base_lr: 1.806339e-03 lr: 1.806339e-03  eta: 1:56:32  time: 0.403519  data_time: 0.169336  memory: 12704  grad_norm: 0.056656  loss: 0.218388  loss_kpt: 0.218388  acc_pose: 0.903255
09/15 18:03:52 - mmengine - INFO - Epoch(train) [200][ 50/146]  base_lr: 2.799734e-04 lr: 2.799734e-04  eta: 2:15:24  time: 0.807360  data_time: 0.491284  memory: 16273  loss: 0.336011  loss_kpt: 0.336011  acc_pose: 0.969927
09/15 18:03:55 - mmengine - INFO - Epoch(train) [210][100/291]  base_lr: 1.798836e-03 lr: 1.798836e-03  eta: 1:56:12  time: 0.412178  data_time: 0.174141  memory: 12704  grad_norm: 0.055036  loss: 0.215285  loss_kpt: 0.215285  acc_pose: 0.910708
09/15 18:04:15 - mmengine - INFO - Epoch(train) [210][150/291]  base_lr: 1.791337e-03 lr: 1.791337e-03  eta: 1:55:52  time: 0.398404  data_time: 0.164295  memory: 12704  grad_norm: 0.068947  loss: 0.216524  loss_kpt: 0.216524  acc_pose: 0.922747
09/15 18:04:28 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:04:32 - mmengine - INFO - Epoch(train) [200][100/146]  base_lr: 2.780852e-04 lr: 2.780852e-04  eta: 2:14:45  time: 0.792078  data_time: 0.472743  memory: 16273  loss: 0.334498  loss_kpt: 0.334498  acc_pose: 0.976677
09/15 18:04:35 - mmengine - INFO - Epoch(train) [210][200/291]  base_lr: 1.783844e-03 lr: 1.783844e-03  eta: 1:55:33  time: 0.397724  data_time: 0.163398  memory: 12704  grad_norm: 0.058666  loss: 0.218607  loss_kpt: 0.218607  acc_pose: 0.882840
09/15 18:04:54 - mmengine - INFO - Epoch(train) [210][250/291]  base_lr: 1.776355e-03 lr: 1.776355e-03  eta: 1:55:13  time: 0.392901  data_time: 0.158004  memory: 12704  grad_norm: 0.056271  loss: 0.218646  loss_kpt: 0.218646  acc_pose: 0.909401
09/15 18:05:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:05:08 - mmengine - INFO - Saving checkpoint at 200 epochs
09/15 18:05:10 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:05:10 - mmengine - INFO - Saving checkpoint at 210 epochs
09/15 18:05:20 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.807
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.975
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.912
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.807
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.862
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.987
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.942
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.862
09/15 18:05:20 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 18:05:20 - mmengine - INFO - Evaluating AUC...
09/15 18:05:21 - mmengine - INFO - Evaluating NME...
09/15 18:05:21 - mmengine - INFO - Epoch(val) [200][19/19]    coco/AP: 0.806728  coco/AP .5: 0.974976  coco/AP .75: 0.911815  coco/AP (L): -1.000000  coco/AR: 0.806728  coco/AR .5: 0.862121  coco/AR .75: 0.987374  coco/AR (L): 0.941919  PCK: 0.939980  AUC: 0.628265  NME: 0.280203  data_time: 0.365411  time: 0.519263
09/15 18:05:21 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/2/best_coco_AP_epoch_150.pth is removed
09/15 18:05:21 - mmengine - INFO - The best checkpoint with 0.8067 coco/AP at 200 epoch is saved to best_coco_AP_epoch_200.pth.
09/15 18:05:32 - mmengine - INFO - Epoch(train) [211][ 50/291]  base_lr: 1.762739e-03 lr: 1.762739e-03  eta: 1:54:37  time: 0.406618  data_time: 0.172599  memory: 12704  grad_norm: 0.057281  loss: 0.212529  loss_kpt: 0.212529  acc_pose: 0.912963
09/15 18:05:52 - mmengine - INFO - Epoch(train) [211][100/291]  base_lr: 1.755265e-03 lr: 1.755265e-03  eta: 1:54:17  time: 0.394741  data_time: 0.160793  memory: 12704  grad_norm: 0.056679  loss: 0.217368  loss_kpt: 0.217368  acc_pose: 0.882202
09/15 18:06:03 - mmengine - INFO - Epoch(train) [201][ 50/146]  base_lr: 2.744572e-04 lr: 2.744572e-04  eta: 2:13:29  time: 0.806765  data_time: 0.489737  memory: 16273  loss: 0.338361  loss_kpt: 0.338361  acc_pose: 0.978885
09/15 18:06:12 - mmengine - INFO - Epoch(train) [211][150/291]  base_lr: 1.747797e-03 lr: 1.747797e-03  eta: 1:53:58  time: 0.397200  data_time: 0.163177  memory: 12704  grad_norm: 0.061243  loss: 0.218024  loss_kpt: 0.218024  acc_pose: 0.930099
09/15 18:06:32 - mmengine - INFO - Epoch(train) [211][200/291]  base_lr: 1.740334e-03 lr: 1.740334e-03  eta: 1:53:38  time: 0.390818  data_time: 0.155479  memory: 12704  grad_norm: 0.050171  loss: 0.218890  loss_kpt: 0.218890  acc_pose: 0.872838
09/15 18:06:42 - mmengine - INFO - Epoch(train) [201][100/146]  base_lr: 2.725665e-04 lr: 2.725665e-04  eta: 2:12:50  time: 0.781136  data_time: 0.465428  memory: 16273  loss: 0.335494  loss_kpt: 0.335494  acc_pose: 0.979413
09/15 18:06:51 - mmengine - INFO - Epoch(train) [211][250/291]  base_lr: 1.732878e-03 lr: 1.732878e-03  eta: 1:53:18  time: 0.396988  data_time: 0.162929  memory: 12704  grad_norm: 0.055227  loss: 0.216951  loss_kpt: 0.216951  acc_pose: 0.902750
09/15 18:07:07 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:07:18 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:07:27 - mmengine - INFO - Epoch(train) [212][ 50/291]  base_lr: 1.719321e-03 lr: 1.719321e-03  eta: 1:52:42  time: 0.404588  data_time: 0.167133  memory: 12704  grad_norm: 0.050236  loss: 0.212876  loss_kpt: 0.212876  acc_pose: 0.882353
09/15 18:07:48 - mmengine - INFO - Epoch(train) [212][100/291]  base_lr: 1.711881e-03 lr: 1.711881e-03  eta: 1:52:22  time: 0.405058  data_time: 0.170491  memory: 12704  grad_norm: 0.054491  loss: 0.214928  loss_kpt: 0.214928  acc_pose: 0.897045
09/15 18:07:58 - mmengine - INFO - Epoch(train) [202][ 50/146]  base_lr: 2.689346e-04 lr: 2.689346e-04  eta: 2:11:34  time: 0.803281  data_time: 0.488078  memory: 16273  loss: 0.337087  loss_kpt: 0.337087  acc_pose: 0.979758
09/15 18:08:07 - mmengine - INFO - Epoch(train) [212][150/291]  base_lr: 1.704448e-03 lr: 1.704448e-03  eta: 1:52:03  time: 0.387092  data_time: 0.152680  memory: 12704  grad_norm: 0.060144  loss: 0.216921  loss_kpt: 0.216921  acc_pose: 0.910615
09/15 18:08:26 - mmengine - INFO - Epoch(train) [212][200/291]  base_lr: 1.697020e-03 lr: 1.697020e-03  eta: 1:51:43  time: 0.390340  data_time: 0.155628  memory: 12704  grad_norm: 0.055403  loss: 0.215038  loss_kpt: 0.215038  acc_pose: 0.917191
09/15 18:08:36 - mmengine - INFO - Epoch(train) [202][100/146]  base_lr: 2.670424e-04 lr: 2.670424e-04  eta: 2:10:55  time: 0.769163  data_time: 0.452460  memory: 16273  loss: 0.337040  loss_kpt: 0.337040  acc_pose: 0.968851
09/15 18:08:46 - mmengine - INFO - Epoch(train) [212][250/291]  base_lr: 1.689599e-03 lr: 1.689599e-03  eta: 1:51:23  time: 0.389103  data_time: 0.154523  memory: 12704  grad_norm: 0.054160  loss: 0.212983  loss_kpt: 0.212983  acc_pose: 0.905680
09/15 18:09:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:09:13 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:09:22 - mmengine - INFO - Epoch(train) [213][ 50/291]  base_lr: 1.676110e-03 lr: 1.676110e-03  eta: 1:50:47  time: 0.403120  data_time: 0.165697  memory: 12704  grad_norm: 0.054316  loss: 0.213848  loss_kpt: 0.213848  acc_pose: 0.934243
09/15 18:09:41 - mmengine - INFO - Epoch(train) [213][100/291]  base_lr: 1.668708e-03 lr: 1.668708e-03  eta: 1:50:27  time: 0.387054  data_time: 0.153133  memory: 12704  grad_norm: 0.055403  loss: 0.213903  loss_kpt: 0.213903  acc_pose: 0.917407
09/15 18:09:54 - mmengine - INFO - Epoch(train) [203][ 50/146]  base_lr: 2.634085e-04 lr: 2.634085e-04  eta: 2:09:39  time: 0.814579  data_time: 0.494517  memory: 16273  loss: 0.336482  loss_kpt: 0.336482  acc_pose: 0.985005
09/15 18:10:01 - mmengine - INFO - Epoch(train) [213][150/291]  base_lr: 1.661312e-03 lr: 1.661312e-03  eta: 1:50:07  time: 0.389964  data_time: 0.155789  memory: 12704  grad_norm: 0.058934  loss: 0.215435  loss_kpt: 0.215435  acc_pose: 0.909436
09/15 18:10:21 - mmengine - INFO - Epoch(train) [213][200/291]  base_lr: 1.653924e-03 lr: 1.653924e-03  eta: 1:49:48  time: 0.399746  data_time: 0.165328  memory: 12704  grad_norm: 0.057281  loss: 0.215697  loss_kpt: 0.215697  acc_pose: 0.929139
09/15 18:10:32 - mmengine - INFO - Epoch(train) [203][100/146]  base_lr: 2.615158e-04 lr: 2.615158e-04  eta: 2:09:00  time: 0.779127  data_time: 0.460751  memory: 16273  loss: 0.333526  loss_kpt: 0.333526  acc_pose: 0.963499
09/15 18:10:40 - mmengine - INFO - Epoch(train) [213][250/291]  base_lr: 1.646543e-03 lr: 1.646543e-03  eta: 1:49:28  time: 0.390745  data_time: 0.157565  memory: 12704  grad_norm: 0.056094  loss: 0.218722  loss_kpt: 0.218722  acc_pose: 0.863171
09/15 18:10:57 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:11:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:11:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:11:17 - mmengine - INFO - Epoch(train) [214][ 50/291]  base_lr: 1.633128e-03 lr: 1.633128e-03  eta: 1:48:52  time: 0.402906  data_time: 0.168806  memory: 12704  grad_norm: 0.063307  loss: 0.213552  loss_kpt: 0.213552  acc_pose: 0.892002
09/15 18:11:37 - mmengine - INFO - Epoch(train) [214][100/291]  base_lr: 1.625768e-03 lr: 1.625768e-03  eta: 1:48:32  time: 0.396503  data_time: 0.162181  memory: 12704  grad_norm: 0.059516  loss: 0.214837  loss_kpt: 0.214837  acc_pose: 0.924482
09/15 18:11:49 - mmengine - INFO - Epoch(train) [204][ 50/146]  base_lr: 2.578819e-04 lr: 2.578819e-04  eta: 2:07:45  time: 0.803917  data_time: 0.487292  memory: 16273  loss: 0.336834  loss_kpt: 0.336834  acc_pose: 0.976508
09/15 18:11:56 - mmengine - INFO - Epoch(train) [214][150/291]  base_lr: 1.618415e-03 lr: 1.618415e-03  eta: 1:48:13  time: 0.393340  data_time: 0.156604  memory: 12704  grad_norm: 0.051422  loss: 0.214330  loss_kpt: 0.214330  acc_pose: 0.904432
09/15 18:12:17 - mmengine - INFO - Epoch(train) [214][200/291]  base_lr: 1.611070e-03 lr: 1.611070e-03  eta: 1:47:53  time: 0.405806  data_time: 0.171845  memory: 12704  grad_norm: 0.054822  loss: 0.214275  loss_kpt: 0.214275  acc_pose: 0.851176
09/15 18:12:28 - mmengine - INFO - Epoch(train) [204][100/146]  base_lr: 2.559897e-04 lr: 2.559897e-04  eta: 2:07:05  time: 0.784297  data_time: 0.468021  memory: 16273  loss: 0.333362  loss_kpt: 0.333362  acc_pose: 0.976924
09/15 18:12:36 - mmengine - INFO - Epoch(train) [214][250/291]  base_lr: 1.603732e-03 lr: 1.603732e-03  eta: 1:47:33  time: 0.390415  data_time: 0.152822  memory: 12704  grad_norm: 0.052471  loss: 0.213388  loss_kpt: 0.213388  acc_pose: 0.935138
09/15 18:12:52 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:13:04 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:13:12 - mmengine - INFO - Epoch(train) [215][ 50/291]  base_lr: 1.590399e-03 lr: 1.590399e-03  eta: 1:46:57  time: 0.405365  data_time: 0.171817  memory: 12704  grad_norm: 0.059295  loss: 0.218053  loss_kpt: 0.218053  acc_pose: 0.906275
09/15 18:13:31 - mmengine - INFO - Epoch(train) [215][100/291]  base_lr: 1.583084e-03 lr: 1.583084e-03  eta: 1:46:37  time: 0.384995  data_time: 0.150452  memory: 12704  grad_norm: 0.054306  loss: 0.213423  loss_kpt: 0.213423  acc_pose: 0.912623
09/15 18:13:44 - mmengine - INFO - Epoch(train) [205][ 50/146]  base_lr: 2.523579e-04 lr: 2.523579e-04  eta: 2:05:50  time: 0.808995  data_time: 0.493011  memory: 16273  loss: 0.332179  loss_kpt: 0.332179  acc_pose: 0.969403
09/15 18:13:51 - mmengine - INFO - Epoch(train) [215][150/291]  base_lr: 1.575778e-03 lr: 1.575778e-03  eta: 1:46:18  time: 0.395409  data_time: 0.161545  memory: 12704  grad_norm: 0.056390  loss: 0.212192  loss_kpt: 0.212192  acc_pose: 0.933010
09/15 18:14:11 - mmengine - INFO - Epoch(train) [215][200/291]  base_lr: 1.568480e-03 lr: 1.568480e-03  eta: 1:45:58  time: 0.392867  data_time: 0.159754  memory: 12704  grad_norm: 0.053532  loss: 0.212343  loss_kpt: 0.212343  acc_pose: 0.876209
09/15 18:14:23 - mmengine - INFO - Epoch(train) [205][100/146]  base_lr: 2.504672e-04 lr: 2.504672e-04  eta: 2:05:10  time: 0.780685  data_time: 0.460053  memory: 16273  loss: 0.333697  loss_kpt: 0.333697  acc_pose: 0.964868
09/15 18:14:31 - mmengine - INFO - Epoch(train) [215][250/291]  base_lr: 1.561190e-03 lr: 1.561190e-03  eta: 1:45:38  time: 0.399372  data_time: 0.164437  memory: 12704  grad_norm: 0.052805  loss: 0.212546  loss_kpt: 0.212546  acc_pose: 0.939231
09/15 18:14:47 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:14:58 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:15:07 - mmengine - INFO - Epoch(train) [216][ 50/291]  base_lr: 1.547946e-03 lr: 1.547946e-03  eta: 1:45:02  time: 0.402479  data_time: 0.167385  memory: 12704  grad_norm: 0.052369  loss: 0.212075  loss_kpt: 0.212075  acc_pose: 0.935018
09/15 18:15:27 - mmengine - INFO - Epoch(train) [216][100/291]  base_lr: 1.540681e-03 lr: 1.540681e-03  eta: 1:44:42  time: 0.394217  data_time: 0.157263  memory: 12704  grad_norm: 0.054938  loss: 0.213213  loss_kpt: 0.213213  acc_pose: 0.906614
09/15 18:15:38 - mmengine - INFO - Epoch(train) [206][ 50/146]  base_lr: 2.468393e-04 lr: 2.468393e-04  eta: 2:03:54  time: 0.799167  data_time: 0.483289  memory: 16273  loss: 0.334427  loss_kpt: 0.334427  acc_pose: 0.979909
09/15 18:15:47 - mmengine - INFO - Epoch(train) [216][150/291]  base_lr: 1.533425e-03 lr: 1.533425e-03  eta: 1:44:23  time: 0.401394  data_time: 0.167218  memory: 12704  grad_norm: 0.060209  loss: 0.215237  loss_kpt: 0.215237  acc_pose: 0.870143
09/15 18:15:54 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:16:06 - mmengine - INFO - Epoch(train) [216][200/291]  base_lr: 1.526178e-03 lr: 1.526178e-03  eta: 1:44:03  time: 0.388981  data_time: 0.154477  memory: 12704  grad_norm: 0.051296  loss: 0.211011  loss_kpt: 0.211011  acc_pose: 0.926207
09/15 18:16:18 - mmengine - INFO - Epoch(train) [206][100/146]  base_lr: 2.449511e-04 lr: 2.449511e-04  eta: 2:03:15  time: 0.787797  data_time: 0.470191  memory: 16273  loss: 0.329817  loss_kpt: 0.329817  acc_pose: 0.974127
09/15 18:16:26 - mmengine - INFO - Epoch(train) [216][250/291]  base_lr: 1.518940e-03 lr: 1.518940e-03  eta: 1:43:43  time: 0.404326  data_time: 0.169765  memory: 12704  grad_norm: 0.051014  loss: 0.215832  loss_kpt: 0.215832  acc_pose: 0.908151
09/15 18:16:42 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:16:53 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:17:03 - mmengine - INFO - Epoch(train) [217][ 50/291]  base_lr: 1.505791e-03 lr: 1.505791e-03  eta: 1:43:08  time: 0.420509  data_time: 0.185648  memory: 12704  grad_norm: 0.052535  loss: 0.212175  loss_kpt: 0.212175  acc_pose: 0.941310
09/15 18:17:23 - mmengine - INFO - Epoch(train) [217][100/291]  base_lr: 1.498580e-03 lr: 1.498580e-03  eta: 1:42:48  time: 0.393025  data_time: 0.158982  memory: 12704  grad_norm: 0.054753  loss: 0.211187  loss_kpt: 0.211187  acc_pose: 0.884531
09/15 18:17:33 - mmengine - INFO - Epoch(train) [207][ 50/146]  base_lr: 2.413292e-04 lr: 2.413292e-04  eta: 2:01:59  time: 0.790828  data_time: 0.475270  memory: 16273  loss: 0.331942  loss_kpt: 0.331942  acc_pose: 0.984434
09/15 18:17:40 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:17:42 - mmengine - INFO - Epoch(train) [217][150/291]  base_lr: 1.491379e-03 lr: 1.491379e-03  eta: 1:42:28  time: 0.390699  data_time: 0.156913  memory: 12704  grad_norm: 0.052440  loss: 0.214587  loss_kpt: 0.214587  acc_pose: 0.898048
09/15 18:18:02 - mmengine - INFO - Epoch(train) [217][200/291]  base_lr: 1.484187e-03 lr: 1.484187e-03  eta: 1:42:08  time: 0.389766  data_time: 0.155218  memory: 12704  grad_norm: 0.050797  loss: 0.212356  loss_kpt: 0.212356  acc_pose: 0.949324
09/15 18:18:13 - mmengine - INFO - Epoch(train) [207][100/146]  base_lr: 2.394446e-04 lr: 2.394446e-04  eta: 2:01:20  time: 0.807818  data_time: 0.493027  memory: 16273  loss: 0.329137  loss_kpt: 0.329137  acc_pose: 0.980976
09/15 18:18:22 - mmengine - INFO - Epoch(train) [217][250/291]  base_lr: 1.477005e-03 lr: 1.477005e-03  eta: 1:41:48  time: 0.395747  data_time: 0.161849  memory: 12704  grad_norm: 0.056395  loss: 0.213001  loss_kpt: 0.213001  acc_pose: 0.827749
09/15 18:18:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:18:49 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:18:58 - mmengine - INFO - Epoch(train) [218][ 50/291]  base_lr: 1.463959e-03 lr: 1.463959e-03  eta: 1:41:13  time: 0.417218  data_time: 0.182617  memory: 12704  grad_norm: 0.052286  loss: 0.211520  loss_kpt: 0.211520  acc_pose: 0.877126
09/15 18:19:18 - mmengine - INFO - Epoch(train) [218][100/291]  base_lr: 1.456805e-03 lr: 1.456805e-03  eta: 1:40:53  time: 0.386094  data_time: 0.151879  memory: 12704  grad_norm: 0.057247  loss: 0.210859  loss_kpt: 0.210859  acc_pose: 0.844905
09/15 18:19:30 - mmengine - INFO - Epoch(train) [208][ 50/146]  base_lr: 2.358305e-04 lr: 2.358305e-04  eta: 2:00:05  time: 0.817482  data_time: 0.502387  memory: 16273  loss: 0.331902  loss_kpt: 0.331902  acc_pose: 0.967006
09/15 18:19:37 - mmengine - INFO - Epoch(train) [218][150/291]  base_lr: 1.449662e-03 lr: 1.449662e-03  eta: 1:40:33  time: 0.394890  data_time: 0.160295  memory: 12704  grad_norm: 0.053954  loss: 0.211084  loss_kpt: 0.211084  acc_pose: 0.860492
09/15 18:19:57 - mmengine - INFO - Epoch(train) [218][200/291]  base_lr: 1.442529e-03 lr: 1.442529e-03  eta: 1:40:13  time: 0.395949  data_time: 0.162081  memory: 12704  grad_norm: 0.055256  loss: 0.209376  loss_kpt: 0.209376  acc_pose: 0.948403
09/15 18:20:09 - mmengine - INFO - Epoch(train) [208][100/146]  base_lr: 2.339506e-04 lr: 2.339506e-04  eta: 1:59:25  time: 0.775869  data_time: 0.457792  memory: 16273  loss: 0.325891  loss_kpt: 0.325891  acc_pose: 0.979927
09/15 18:20:16 - mmengine - INFO - Epoch(train) [218][250/291]  base_lr: 1.435407e-03 lr: 1.435407e-03  eta: 1:39:53  time: 0.384249  data_time: 0.150446  memory: 12704  grad_norm: 0.055714  loss: 0.213031  loss_kpt: 0.213031  acc_pose: 0.921225
09/15 18:20:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:20:44 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:20:52 - mmengine - INFO - Epoch(train) [219][ 50/291]  base_lr: 1.422471e-03 lr: 1.422471e-03  eta: 1:39:17  time: 0.404836  data_time: 0.170246  memory: 12704  grad_norm: 0.056601  loss: 0.209277  loss_kpt: 0.209277  acc_pose: 0.898546
09/15 18:21:12 - mmengine - INFO - Epoch(train) [219][100/291]  base_lr: 1.415379e-03 lr: 1.415379e-03  eta: 1:38:58  time: 0.390175  data_time: 0.153505  memory: 12704  grad_norm: 0.058321  loss: 0.214097  loss_kpt: 0.214097  acc_pose: 0.961260
09/15 18:21:24 - mmengine - INFO - Epoch(train) [209][ 50/146]  base_lr: 2.303463e-04 lr: 2.303463e-04  eta: 1:58:10  time: 0.807286  data_time: 0.489947  memory: 16273  loss: 0.327299  loss_kpt: 0.327299  acc_pose: 0.979608
09/15 18:21:32 - mmengine - INFO - Epoch(train) [219][150/291]  base_lr: 1.408298e-03 lr: 1.408298e-03  eta: 1:38:38  time: 0.398180  data_time: 0.163892  memory: 12704  grad_norm: 0.057459  loss: 0.210550  loss_kpt: 0.210550  acc_pose: 0.945168
09/15 18:21:51 - mmengine - INFO - Epoch(train) [219][200/291]  base_lr: 1.401227e-03 lr: 1.401227e-03  eta: 1:38:18  time: 0.387758  data_time: 0.152509  memory: 12704  grad_norm: 0.059664  loss: 0.210883  loss_kpt: 0.210883  acc_pose: 0.933599
09/15 18:22:04 - mmengine - INFO - Epoch(train) [209][100/146]  base_lr: 2.284720e-04 lr: 2.284720e-04  eta: 1:57:30  time: 0.784986  data_time: 0.465895  memory: 16273  loss: 0.330161  loss_kpt: 0.330161  acc_pose: 0.973703
09/15 18:22:11 - mmengine - INFO - Epoch(train) [219][250/291]  base_lr: 1.394168e-03 lr: 1.394168e-03  eta: 1:37:58  time: 0.392460  data_time: 0.158227  memory: 12704  grad_norm: 0.055075  loss: 0.212601  loss_kpt: 0.212601  acc_pose: 0.897682
09/15 18:22:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:22:39 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:22:47 - mmengine - INFO - Epoch(train) [220][ 50/291]  base_lr: 1.381350e-03 lr: 1.381350e-03  eta: 1:37:22  time: 0.402095  data_time: 0.167220  memory: 12704  grad_norm: 0.056849  loss: 0.211440  loss_kpt: 0.211440  acc_pose: 0.884595
09/15 18:23:08 - mmengine - INFO - Epoch(train) [220][100/291]  base_lr: 1.374323e-03 lr: 1.374323e-03  eta: 1:37:03  time: 0.409759  data_time: 0.174996  memory: 12704  grad_norm: 0.055484  loss: 0.213099  loss_kpt: 0.213099  acc_pose: 0.917032
09/15 18:23:19 - mmengine - INFO - Epoch(train) [210][ 50/146]  base_lr: 2.248795e-04 lr: 2.248795e-04  eta: 1:56:15  time: 0.806287  data_time: 0.491009  memory: 16273  loss: 0.331247  loss_kpt: 0.331247  acc_pose: 0.976544
09/15 18:23:27 - mmengine - INFO - Epoch(train) [220][150/291]  base_lr: 1.367308e-03 lr: 1.367308e-03  eta: 1:36:43  time: 0.381391  data_time: 0.144757  memory: 12704  grad_norm: 0.065171  loss: 0.216343  loss_kpt: 0.216343  acc_pose: 0.898592
09/15 18:23:47 - mmengine - INFO - Epoch(train) [220][200/291]  base_lr: 1.360304e-03 lr: 1.360304e-03  eta: 1:36:23  time: 0.395064  data_time: 0.160484  memory: 12704  grad_norm: 0.054346  loss: 0.208819  loss_kpt: 0.208819  acc_pose: 0.938242
09/15 18:23:59 - mmengine - INFO - Epoch(train) [210][100/146]  base_lr: 2.230119e-04 lr: 2.230119e-04  eta: 1:55:35  time: 0.789026  data_time: 0.473294  memory: 16273  loss: 0.327897  loss_kpt: 0.327897  acc_pose: 0.988662
09/15 18:24:06 - mmengine - INFO - Epoch(train) [220][250/291]  base_lr: 1.353312e-03 lr: 1.353312e-03  eta: 1:36:03  time: 0.393245  data_time: 0.158770  memory: 12704  grad_norm: 0.054314  loss: 0.212452  loss_kpt: 0.212452  acc_pose: 0.938752
09/15 18:24:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:24:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:24:22 - mmengine - INFO - Saving checkpoint at 220 epochs
09/15 18:24:34 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:24:34 - mmengine - INFO - Saving checkpoint at 210 epochs
09/15 18:24:44 - mmengine - INFO - Epoch(train) [221][ 50/291]  base_lr: 1.340618e-03 lr: 1.340618e-03  eta: 1:35:28  time: 0.408533  data_time: 0.173955  memory: 12704  grad_norm: 0.056635  loss: 0.212705  loss_kpt: 0.212705  acc_pose: 0.878380
09/15 18:25:04 - mmengine - INFO - Epoch(train) [221][100/291]  base_lr: 1.333660e-03 lr: 1.333660e-03  eta: 1:35:08  time: 0.390198  data_time: 0.155540  memory: 12704  grad_norm: 0.054823  loss: 0.214899  loss_kpt: 0.214899  acc_pose: 0.921952
09/15 18:25:16 - mmengine - INFO - Epoch(train) [211][ 50/146]  base_lr: 2.194331e-04 lr: 2.194331e-04  eta: 1:54:20  time: 0.820103  data_time: 0.501149  memory: 16273  loss: 0.329339  loss_kpt: 0.329339  acc_pose: 0.980611
09/15 18:25:24 - mmengine - INFO - Epoch(train) [221][150/291]  base_lr: 1.326715e-03 lr: 1.326715e-03  eta: 1:34:48  time: 0.399790  data_time: 0.163294  memory: 12704  grad_norm: 0.055163  loss: 0.211096  loss_kpt: 0.211096  acc_pose: 0.932014
09/15 18:25:44 - mmengine - INFO - Epoch(train) [221][200/291]  base_lr: 1.319781e-03 lr: 1.319781e-03  eta: 1:34:28  time: 0.401923  data_time: 0.166812  memory: 12704  grad_norm: 0.050472  loss: 0.208114  loss_kpt: 0.208114  acc_pose: 0.909816
09/15 18:25:56 - mmengine - INFO - Epoch(train) [211][100/146]  base_lr: 2.175731e-04 lr: 2.175731e-04  eta: 1:53:41  time: 0.786094  data_time: 0.466907  memory: 16273  loss: 0.329184  loss_kpt: 0.329184  acc_pose: 0.973119
09/15 18:26:03 - mmengine - INFO - Epoch(train) [221][250/291]  base_lr: 1.312861e-03 lr: 1.312861e-03  eta: 1:34:09  time: 0.386327  data_time: 0.152423  memory: 12704  grad_norm: 0.055304  loss: 0.211497  loss_kpt: 0.211497  acc_pose: 0.927227
09/15 18:26:19 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:26:32 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:26:40 - mmengine - INFO - Epoch(train) [222][ 50/291]  base_lr: 1.300297e-03 lr: 1.300297e-03  eta: 1:33:33  time: 0.406643  data_time: 0.172447  memory: 12704  grad_norm: 0.056720  loss: 0.212749  loss_kpt: 0.212749  acc_pose: 0.909516
09/15 18:27:00 - mmengine - INFO - Epoch(train) [222][100/291]  base_lr: 1.293412e-03 lr: 1.293412e-03  eta: 1:33:13  time: 0.398851  data_time: 0.163183  memory: 12704  grad_norm: 0.051388  loss: 0.208641  loss_kpt: 0.208641  acc_pose: 0.901709
09/15 18:27:13 - mmengine - INFO - Epoch(train) [212][ 50/146]  base_lr: 2.140100e-04 lr: 2.140100e-04  eta: 1:52:25  time: 0.814075  data_time: 0.494383  memory: 16273  loss: 0.327416  loss_kpt: 0.327416  acc_pose: 0.987326
09/15 18:27:19 - mmengine - INFO - Epoch(train) [222][150/291]  base_lr: 1.286540e-03 lr: 1.286540e-03  eta: 1:32:53  time: 0.388967  data_time: 0.151177  memory: 12704  grad_norm: 0.049981  loss: 0.206576  loss_kpt: 0.206576  acc_pose: 0.872710
09/15 18:27:38 - mmengine - INFO - Epoch(train) [222][200/291]  base_lr: 1.279681e-03 lr: 1.279681e-03  eta: 1:32:33  time: 0.387456  data_time: 0.153433  memory: 12704  grad_norm: 0.052262  loss: 0.206326  loss_kpt: 0.206326  acc_pose: 0.913125
09/15 18:27:51 - mmengine - INFO - Epoch(train) [212][100/146]  base_lr: 2.121587e-04 lr: 2.121587e-04  eta: 1:51:46  time: 0.771986  data_time: 0.455137  memory: 16273  loss: 0.330163  loss_kpt: 0.330163  acc_pose: 0.993028
09/15 18:27:58 - mmengine - INFO - Epoch(train) [222][250/291]  base_lr: 1.272835e-03 lr: 1.272835e-03  eta: 1:32:14  time: 0.398082  data_time: 0.164565  memory: 12704  grad_norm: 0.052995  loss: 0.210732  loss_kpt: 0.210732  acc_pose: 0.932355
09/15 18:28:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:28:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:28:35 - mmengine - INFO - Epoch(train) [223][ 50/291]  base_lr: 1.260410e-03 lr: 1.260410e-03  eta: 1:31:38  time: 0.407376  data_time: 0.173565  memory: 12704  grad_norm: 0.059138  loss: 0.211736  loss_kpt: 0.211736  acc_pose: 0.932920
09/15 18:28:54 - mmengine - INFO - Epoch(train) [223][100/291]  base_lr: 1.253601e-03 lr: 1.253601e-03  eta: 1:31:18  time: 0.387934  data_time: 0.153955  memory: 12704  grad_norm: 0.057766  loss: 0.209318  loss_kpt: 0.209318  acc_pose: 0.923321
09/15 18:29:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:29:06 - mmengine - INFO - Epoch(train) [213][ 50/146]  base_lr: 2.086132e-04 lr: 2.086132e-04  eta: 1:50:30  time: 0.796626  data_time: 0.480001  memory: 16273  loss: 0.325757  loss_kpt: 0.325757  acc_pose: 0.975223
09/15 18:29:14 - mmengine - INFO - Epoch(train) [223][150/291]  base_lr: 1.246806e-03 lr: 1.246806e-03  eta: 1:30:58  time: 0.405618  data_time: 0.171854  memory: 12704  grad_norm: 0.061288  loss: 0.208404  loss_kpt: 0.208404  acc_pose: 0.860530
09/15 18:29:35 - mmengine - INFO - Epoch(train) [223][200/291]  base_lr: 1.240025e-03 lr: 1.240025e-03  eta: 1:30:39  time: 0.407376  data_time: 0.173478  memory: 12704  grad_norm: 0.055398  loss: 0.211326  loss_kpt: 0.211326  acc_pose: 0.913930
09/15 18:29:46 - mmengine - INFO - Epoch(train) [213][100/146]  base_lr: 2.067715e-04 lr: 2.067715e-04  eta: 1:49:51  time: 0.785952  data_time: 0.469462  memory: 16273  loss: 0.327257  loss_kpt: 0.327257  acc_pose: 0.984169
09/15 18:29:54 - mmengine - INFO - Epoch(train) [223][250/291]  base_lr: 1.233258e-03 lr: 1.233258e-03  eta: 1:30:19  time: 0.385318  data_time: 0.150253  memory: 12704  grad_norm: 0.058037  loss: 0.207342  loss_kpt: 0.207342  acc_pose: 0.887764
09/15 18:30:10 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:30:21 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:30:31 - mmengine - INFO - Epoch(train) [224][ 50/291]  base_lr: 1.220977e-03 lr: 1.220977e-03  eta: 1:29:43  time: 0.412452  data_time: 0.178860  memory: 12704  grad_norm: 0.057763  loss: 0.210954  loss_kpt: 0.210954  acc_pose: 0.918794
09/15 18:30:51 - mmengine - INFO - Epoch(train) [224][100/291]  base_lr: 1.214248e-03 lr: 1.214248e-03  eta: 1:29:23  time: 0.397832  data_time: 0.163825  memory: 12704  grad_norm: 0.047500  loss: 0.208640  loss_kpt: 0.208640  acc_pose: 0.905725
09/15 18:30:53 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:31:01 - mmengine - INFO - Epoch(train) [214][ 50/146]  base_lr: 2.032455e-04 lr: 2.032455e-04  eta: 1:48:35  time: 0.796569  data_time: 0.480960  memory: 16273  loss: 0.326895  loss_kpt: 0.326895  acc_pose: 0.976501
09/15 18:31:09 - mmengine - INFO - Epoch(train) [224][150/291]  base_lr: 1.207535e-03 lr: 1.207535e-03  eta: 1:29:03  time: 0.374730  data_time: 0.140434  memory: 12704  grad_norm: 0.058071  loss: 0.207042  loss_kpt: 0.207042  acc_pose: 0.938971
09/15 18:31:29 - mmengine - INFO - Epoch(train) [224][200/291]  base_lr: 1.200835e-03 lr: 1.200835e-03  eta: 1:28:43  time: 0.394715  data_time: 0.159501  memory: 12704  grad_norm: 0.054293  loss: 0.209233  loss_kpt: 0.209233  acc_pose: 0.915306
09/15 18:31:41 - mmengine - INFO - Epoch(train) [214][100/146]  base_lr: 2.014145e-04 lr: 2.014145e-04  eta: 1:47:56  time: 0.793077  data_time: 0.476047  memory: 16273  loss: 0.324726  loss_kpt: 0.324726  acc_pose: 0.987588
09/15 18:31:49 - mmengine - INFO - Epoch(train) [224][250/291]  base_lr: 1.194150e-03 lr: 1.194150e-03  eta: 1:28:24  time: 0.396404  data_time: 0.160025  memory: 12704  grad_norm: 0.052806  loss: 0.207071  loss_kpt: 0.207071  acc_pose: 0.879815
09/15 18:32:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:32:16 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:32:25 - mmengine - INFO - Epoch(train) [225][ 50/291]  base_lr: 1.182020e-03 lr: 1.182020e-03  eta: 1:27:48  time: 0.412382  data_time: 0.178323  memory: 12704  grad_norm: 0.048939  loss: 0.205426  loss_kpt: 0.205426  acc_pose: 0.900977
09/15 18:32:45 - mmengine - INFO - Epoch(train) [225][100/291]  base_lr: 1.175375e-03 lr: 1.175375e-03  eta: 1:27:28  time: 0.401450  data_time: 0.167438  memory: 12704  grad_norm: 0.055886  loss: 0.209327  loss_kpt: 0.209327  acc_pose: 0.935283
09/15 18:32:56 - mmengine - INFO - Epoch(train) [215][ 50/146]  base_lr: 1.979099e-04 lr: 1.979099e-04  eta: 1:46:40  time: 0.802280  data_time: 0.482240  memory: 16273  loss: 0.327878  loss_kpt: 0.327878  acc_pose: 0.983980
09/15 18:33:04 - mmengine - INFO - Epoch(train) [225][150/291]  base_lr: 1.168746e-03 lr: 1.168746e-03  eta: 1:27:08  time: 0.386893  data_time: 0.149982  memory: 12704  grad_norm: 0.052863  loss: 0.206970  loss_kpt: 0.206970  acc_pose: 0.943219
09/15 18:33:24 - mmengine - INFO - Epoch(train) [225][200/291]  base_lr: 1.162131e-03 lr: 1.162131e-03  eta: 1:26:49  time: 0.400763  data_time: 0.165176  memory: 12704  grad_norm: 0.052555  loss: 0.209046  loss_kpt: 0.209046  acc_pose: 0.922276
09/15 18:33:36 - mmengine - INFO - Epoch(train) [215][100/146]  base_lr: 1.960906e-04 lr: 1.960906e-04  eta: 1:46:01  time: 0.795576  data_time: 0.479247  memory: 16273  loss: 0.323917  loss_kpt: 0.323917  acc_pose: 0.972438
09/15 18:33:44 - mmengine - INFO - Epoch(train) [225][250/291]  base_lr: 1.155532e-03 lr: 1.155532e-03  eta: 1:26:29  time: 0.399140  data_time: 0.165029  memory: 12704  grad_norm: 0.055138  loss: 0.207998  loss_kpt: 0.207998  acc_pose: 0.903813
09/15 18:34:00 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:34:13 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:34:21 - mmengine - INFO - Epoch(train) [226][ 50/291]  base_lr: 1.143560e-03 lr: 1.143560e-03  eta: 1:25:53  time: 0.411367  data_time: 0.177086  memory: 12704  grad_norm: 0.055936  loss: 0.211817  loss_kpt: 0.211817  acc_pose: 0.910933
09/15 18:34:40 - mmengine - INFO - Epoch(train) [226][100/291]  base_lr: 1.137003e-03 lr: 1.137003e-03  eta: 1:25:33  time: 0.392445  data_time: 0.158386  memory: 12704  grad_norm: 0.053880  loss: 0.205188  loss_kpt: 0.205188  acc_pose: 0.904175
09/15 18:34:53 - mmengine - INFO - Epoch(train) [216][ 50/146]  base_lr: 1.926093e-04 lr: 1.926093e-04  eta: 1:44:45  time: 0.799724  data_time: 0.483129  memory: 16273  loss: 0.323799  loss_kpt: 0.323799  acc_pose: 0.982786
09/15 18:35:00 - mmengine - INFO - Epoch(train) [226][150/291]  base_lr: 1.130462e-03 lr: 1.130462e-03  eta: 1:25:13  time: 0.392737  data_time: 0.158175  memory: 12704  grad_norm: 0.052196  loss: 0.208048  loss_kpt: 0.208048  acc_pose: 0.914710
09/15 18:35:19 - mmengine - INFO - Epoch(train) [226][200/291]  base_lr: 1.123936e-03 lr: 1.123936e-03  eta: 1:24:54  time: 0.383637  data_time: 0.149254  memory: 12704  grad_norm: 0.053247  loss: 0.205464  loss_kpt: 0.205464  acc_pose: 0.912654
09/15 18:35:33 - mmengine - INFO - Epoch(train) [216][100/146]  base_lr: 1.908026e-04 lr: 1.908026e-04  eta: 1:44:06  time: 0.793777  data_time: 0.477222  memory: 16273  loss: 0.324962  loss_kpt: 0.324962  acc_pose: 0.992060
09/15 18:35:39 - mmengine - INFO - Epoch(train) [226][250/291]  base_lr: 1.117426e-03 lr: 1.117426e-03  eta: 1:24:34  time: 0.389489  data_time: 0.155020  memory: 12704  grad_norm: 0.052028  loss: 0.206100  loss_kpt: 0.206100  acc_pose: 0.925141
09/15 18:35:55 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:36:08 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:36:16 - mmengine - INFO - Epoch(train) [227][ 50/291]  base_lr: 1.105618e-03 lr: 1.105618e-03  eta: 1:23:58  time: 0.411660  data_time: 0.177095  memory: 12704  grad_norm: 0.057811  loss: 0.204894  loss_kpt: 0.204894  acc_pose: 0.892229
09/15 18:36:35 - mmengine - INFO - Epoch(train) [227][100/291]  base_lr: 1.099152e-03 lr: 1.099152e-03  eta: 1:23:38  time: 0.392058  data_time: 0.158517  memory: 12704  grad_norm: 0.052622  loss: 0.206927  loss_kpt: 0.206927  acc_pose: 0.890120
09/15 18:36:48 - mmengine - INFO - Epoch(train) [217][ 50/146]  base_lr: 1.873466e-04 lr: 1.873466e-04  eta: 1:42:50  time: 0.804438  data_time: 0.488033  memory: 16273  loss: 0.321918  loss_kpt: 0.321918  acc_pose: 0.985759
09/15 18:36:55 - mmengine - INFO - Epoch(train) [227][150/291]  base_lr: 1.092702e-03 lr: 1.092702e-03  eta: 1:23:19  time: 0.395992  data_time: 0.162295  memory: 12704  grad_norm: 0.055510  loss: 0.209461  loss_kpt: 0.209461  acc_pose: 0.925148
09/15 18:37:15 - mmengine - INFO - Epoch(train) [227][200/291]  base_lr: 1.086269e-03 lr: 1.086269e-03  eta: 1:22:59  time: 0.391930  data_time: 0.155865  memory: 12704  grad_norm: 0.049272  loss: 0.205136  loss_kpt: 0.205136  acc_pose: 0.929081
09/15 18:37:27 - mmengine - INFO - Epoch(train) [217][100/146]  base_lr: 1.855535e-04 lr: 1.855535e-04  eta: 1:42:11  time: 0.774941  data_time: 0.457686  memory: 16273  loss: 0.328753  loss_kpt: 0.328753  acc_pose: 0.971109
09/15 18:37:28 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:37:34 - mmengine - INFO - Epoch(train) [227][250/291]  base_lr: 1.079852e-03 lr: 1.079852e-03  eta: 1:22:39  time: 0.388492  data_time: 0.153532  memory: 12704  grad_norm: 0.051693  loss: 0.207681  loss_kpt: 0.207681  acc_pose: 0.950558
09/15 18:37:50 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:38:03 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:38:10 - mmengine - INFO - Epoch(train) [228][ 50/291]  base_lr: 1.068214e-03 lr: 1.068214e-03  eta: 1:22:03  time: 0.406152  data_time: 0.172342  memory: 12704  grad_norm: 0.058110  loss: 0.204590  loss_kpt: 0.204590  acc_pose: 0.935640
09/15 18:38:30 - mmengine - INFO - Epoch(train) [228][100/291]  base_lr: 1.061843e-03 lr: 1.061843e-03  eta: 1:21:43  time: 0.392645  data_time: 0.158367  memory: 12704  grad_norm: 0.052154  loss: 0.206180  loss_kpt: 0.206180  acc_pose: 0.925005
09/15 18:38:43 - mmengine - INFO - Epoch(train) [218][ 50/146]  base_lr: 1.821245e-04 lr: 1.821245e-04  eta: 1:40:55  time: 0.801562  data_time: 0.485506  memory: 16273  loss: 0.323869  loss_kpt: 0.323869  acc_pose: 0.982312
09/15 18:38:49 - mmengine - INFO - Epoch(train) [228][150/291]  base_lr: 1.055489e-03 lr: 1.055489e-03  eta: 1:21:23  time: 0.390774  data_time: 0.156779  memory: 12704  grad_norm: 0.050530  loss: 0.208039  loss_kpt: 0.208039  acc_pose: 0.954280
09/15 18:39:09 - mmengine - INFO - Epoch(train) [228][200/291]  base_lr: 1.049151e-03 lr: 1.049151e-03  eta: 1:21:04  time: 0.395245  data_time: 0.160784  memory: 12704  grad_norm: 0.056082  loss: 0.205946  loss_kpt: 0.205946  acc_pose: 0.944070
09/15 18:39:22 - mmengine - INFO - Epoch(train) [218][100/146]  base_lr: 1.803460e-04 lr: 1.803460e-04  eta: 1:40:16  time: 0.787897  data_time: 0.469347  memory: 16273  loss: 0.324287  loss_kpt: 0.324287  acc_pose: 0.978454
09/15 18:39:29 - mmengine - INFO - Epoch(train) [228][250/291]  base_lr: 1.042830e-03 lr: 1.042830e-03  eta: 1:20:44  time: 0.395187  data_time: 0.160800  memory: 12704  grad_norm: 0.056716  loss: 0.206863  loss_kpt: 0.206863  acc_pose: 0.895993
09/15 18:39:45 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:39:58 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:40:05 - mmengine - INFO - Epoch(train) [229][ 50/291]  base_lr: 1.031369e-03 lr: 1.031369e-03  eta: 1:20:08  time: 0.404682  data_time: 0.170247  memory: 12704  grad_norm: 0.055836  loss: 0.206807  loss_kpt: 0.206807  acc_pose: 0.930818
09/15 18:40:24 - mmengine - INFO - Epoch(train) [229][100/291]  base_lr: 1.025096e-03 lr: 1.025096e-03  eta: 1:19:48  time: 0.392613  data_time: 0.155211  memory: 12704  grad_norm: 0.052647  loss: 0.204045  loss_kpt: 0.204045  acc_pose: 0.936886
09/15 18:40:38 - mmengine - INFO - Epoch(train) [219][ 50/146]  base_lr: 1.769460e-04 lr: 1.769460e-04  eta: 1:39:00  time: 0.801058  data_time: 0.485157  memory: 16273  loss: 0.323579  loss_kpt: 0.323579  acc_pose: 0.987584
09/15 18:40:44 - mmengine - INFO - Epoch(train) [229][150/291]  base_lr: 1.018841e-03 lr: 1.018841e-03  eta: 1:19:28  time: 0.383830  data_time: 0.149173  memory: 12704  grad_norm: 0.050418  loss: 0.202762  loss_kpt: 0.202762  acc_pose: 0.938543
09/15 18:41:03 - mmengine - INFO - Epoch(train) [229][200/291]  base_lr: 1.012602e-03 lr: 1.012602e-03  eta: 1:19:09  time: 0.397184  data_time: 0.162547  memory: 12704  grad_norm: 0.052403  loss: 0.207129  loss_kpt: 0.207129  acc_pose: 0.952214
09/15 18:41:17 - mmengine - INFO - Epoch(train) [219][100/146]  base_lr: 1.751831e-04 lr: 1.751831e-04  eta: 1:38:21  time: 0.780828  data_time: 0.465410  memory: 16273  loss: 0.321621  loss_kpt: 0.321621  acc_pose: 0.987241
09/15 18:41:24 - mmengine - INFO - Epoch(train) [229][250/291]  base_lr: 1.006381e-03 lr: 1.006381e-03  eta: 1:18:49  time: 0.401565  data_time: 0.164537  memory: 12704  grad_norm: 0.052446  loss: 0.201926  loss_kpt: 0.201926  acc_pose: 0.945237
09/15 18:41:40 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:41:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:42:00 - mmengine - INFO - Epoch(train) [230][ 50/291]  base_lr: 9.951033e-04 lr: 9.951033e-04  eta: 1:18:13  time: 0.404161  data_time: 0.169875  memory: 12704  grad_norm: 0.053394  loss: 0.204080  loss_kpt: 0.204080  acc_pose: 0.907522
09/15 18:42:14 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:42:19 - mmengine - INFO - Epoch(train) [230][100/291]  base_lr: 9.889317e-04 lr: 9.889317e-04  eta: 1:17:53  time: 0.381892  data_time: 0.148241  memory: 12704  grad_norm: 0.055978  loss: 0.207801  loss_kpt: 0.207801  acc_pose: 0.886987
09/15 18:42:33 - mmengine - INFO - Epoch(train) [220][ 50/146]  base_lr: 1.718138e-04 lr: 1.718138e-04  eta: 1:37:05  time: 0.819422  data_time: 0.503731  memory: 16273  loss: 0.324757  loss_kpt: 0.324757  acc_pose: 0.993604
09/15 18:42:39 - mmengine - INFO - Epoch(train) [230][150/291]  base_lr: 9.827778e-04 lr: 9.827778e-04  eta: 1:17:33  time: 0.395125  data_time: 0.161237  memory: 12704  grad_norm: 0.055636  loss: 0.202755  loss_kpt: 0.202755  acc_pose: 0.927165
09/15 18:42:58 - mmengine - INFO - Epoch(train) [230][200/291]  base_lr: 9.766419e-04 lr: 9.766419e-04  eta: 1:17:14  time: 0.384444  data_time: 0.149558  memory: 12704  grad_norm: 0.056467  loss: 0.207081  loss_kpt: 0.207081  acc_pose: 0.958120
09/15 18:43:12 - mmengine - INFO - Epoch(train) [220][100/146]  base_lr: 1.700674e-04 lr: 1.700674e-04  eta: 1:36:26  time: 0.780482  data_time: 0.462121  memory: 16273  loss: 0.321323  loss_kpt: 0.321323  acc_pose: 0.977793
09/15 18:43:18 - mmengine - INFO - Epoch(train) [230][250/291]  base_lr: 9.705239e-04 lr: 9.705239e-04  eta: 1:16:54  time: 0.395720  data_time: 0.161435  memory: 12704  grad_norm: 0.052723  loss: 0.205187  loss_kpt: 0.205187  acc_pose: 0.891263
09/15 18:43:34 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:43:34 - mmengine - INFO - Saving checkpoint at 230 epochs
09/15 18:43:48 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:43:48 - mmengine - INFO - Saving checkpoint at 220 epochs
09/15 18:43:56 - mmengine - INFO - Epoch(train) [231][ 50/291]  base_lr: 9.594355e-04 lr: 9.594355e-04  eta: 1:16:18  time: 0.414800  data_time: 0.176470  memory: 12704  grad_norm: 0.054769  loss: 0.202681  loss_kpt: 0.202681  acc_pose: 0.912413
09/15 18:44:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:44:16 - mmengine - INFO - Epoch(train) [231][100/291]  base_lr: 9.533686e-04 lr: 9.533686e-04  eta: 1:15:58  time: 0.387929  data_time: 0.153579  memory: 12704  grad_norm: 0.053306  loss: 0.203276  loss_kpt: 0.203276  acc_pose: 0.936495
09/15 18:44:29 - mmengine - INFO - Epoch(train) [221][ 50/146]  base_lr: 1.667307e-04 lr: 1.667307e-04  eta: 1:35:10  time: 0.795816  data_time: 0.476066  memory: 16273  loss: 0.323377  loss_kpt: 0.323377  acc_pose: 0.969666
09/15 18:44:36 - mmengine - INFO - Epoch(train) [231][150/291]  base_lr: 9.473201e-04 lr: 9.473201e-04  eta: 1:15:39  time: 0.409348  data_time: 0.175282  memory: 12704  grad_norm: 0.056558  loss: 0.204646  loss_kpt: 0.204646  acc_pose: 0.914617
09/15 18:44:56 - mmengine - INFO - Epoch(train) [231][200/291]  base_lr: 9.412901e-04 lr: 9.412901e-04  eta: 1:15:19  time: 0.404857  data_time: 0.170757  memory: 12704  grad_norm: 0.051256  loss: 0.207199  loss_kpt: 0.207199  acc_pose: 0.904455
09/15 18:45:09 - mmengine - INFO - Epoch(train) [221][100/146]  base_lr: 1.650017e-04 lr: 1.650017e-04  eta: 1:34:31  time: 0.795284  data_time: 0.478436  memory: 16273  loss: 0.323410  loss_kpt: 0.323410  acc_pose: 0.982495
09/15 18:45:16 - mmengine - INFO - Epoch(train) [231][250/291]  base_lr: 9.352785e-04 lr: 9.352785e-04  eta: 1:14:59  time: 0.392269  data_time: 0.157455  memory: 12704  grad_norm: 0.056513  loss: 0.203537  loss_kpt: 0.203537  acc_pose: 0.954985
09/15 18:45:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:45:44 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:45:53 - mmengine - INFO - Epoch(train) [232][ 50/291]  base_lr: 9.243853e-04 lr: 9.243853e-04  eta: 1:14:23  time: 0.407914  data_time: 0.172674  memory: 12704  grad_norm: 0.055954  loss: 0.202430  loss_kpt: 0.202430  acc_pose: 0.910049
09/15 18:46:12 - mmengine - INFO - Epoch(train) [232][100/291]  base_lr: 9.184265e-04 lr: 9.184265e-04  eta: 1:14:03  time: 0.383653  data_time: 0.149650  memory: 12704  grad_norm: 0.058742  loss: 0.205326  loss_kpt: 0.205326  acc_pose: 0.886964
09/15 18:46:24 - mmengine - INFO - Epoch(train) [222][ 50/146]  base_lr: 1.616995e-04 lr: 1.616995e-04  eta: 1:33:15  time: 0.805734  data_time: 0.489614  memory: 16273  loss: 0.321414  loss_kpt: 0.321414  acc_pose: 0.983486
09/15 18:46:31 - mmengine - INFO - Epoch(train) [232][150/291]  base_lr: 9.124866e-04 lr: 9.124866e-04  eta: 1:13:44  time: 0.386932  data_time: 0.153285  memory: 12704  grad_norm: 0.050984  loss: 0.204021  loss_kpt: 0.204021  acc_pose: 0.913914
09/15 18:46:51 - mmengine - INFO - Epoch(train) [232][200/291]  base_lr: 9.065657e-04 lr: 9.065657e-04  eta: 1:13:24  time: 0.394475  data_time: 0.160779  memory: 12704  grad_norm: 0.050411  loss: 0.203833  loss_kpt: 0.203833  acc_pose: 0.913288
09/15 18:47:03 - mmengine - INFO - Epoch(train) [222][100/146]  base_lr: 1.599889e-04 lr: 1.599889e-04  eta: 1:32:36  time: 0.777746  data_time: 0.457761  memory: 16273  loss: 0.319702  loss_kpt: 0.319702  acc_pose: 0.985574
09/15 18:47:11 - mmengine - INFO - Epoch(train) [232][250/291]  base_lr: 9.006639e-04 lr: 9.006639e-04  eta: 1:13:04  time: 0.405279  data_time: 0.171514  memory: 12704  grad_norm: 0.050902  loss: 0.206492  loss_kpt: 0.206492  acc_pose: 0.887975
09/15 18:47:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:47:38 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:47:47 - mmengine - INFO - Epoch(train) [233][ 50/291]  base_lr: 8.899718e-04 lr: 8.899718e-04  eta: 1:12:28  time: 0.415668  data_time: 0.181059  memory: 12704  grad_norm: 0.052178  loss: 0.202312  loss_kpt: 0.202312  acc_pose: 0.928475
09/15 18:48:07 - mmengine - INFO - Epoch(train) [233][100/291]  base_lr: 8.841243e-04 lr: 8.841243e-04  eta: 1:12:09  time: 0.394123  data_time: 0.157022  memory: 12704  grad_norm: 0.052586  loss: 0.203222  loss_kpt: 0.203222  acc_pose: 0.942027
09/15 18:48:19 - mmengine - INFO - Epoch(train) [223][ 50/146]  base_lr: 1.567229e-04 lr: 1.567229e-04  eta: 1:31:20  time: 0.802500  data_time: 0.487419  memory: 16273  loss: 0.321023  loss_kpt: 0.321023  acc_pose: 0.988701
09/15 18:48:27 - mmengine - INFO - Epoch(train) [233][150/291]  base_lr: 8.782962e-04 lr: 8.782962e-04  eta: 1:11:49  time: 0.395952  data_time: 0.161816  memory: 12704  grad_norm: 0.054110  loss: 0.201171  loss_kpt: 0.201171  acc_pose: 0.897839
09/15 18:48:46 - mmengine - INFO - Epoch(train) [233][200/291]  base_lr: 8.724877e-04 lr: 8.724877e-04  eta: 1:11:29  time: 0.384519  data_time: 0.150976  memory: 12704  grad_norm: 0.052038  loss: 0.203024  loss_kpt: 0.203024  acc_pose: 0.915194
09/15 18:48:58 - mmengine - INFO - Epoch(train) [223][100/146]  base_lr: 1.550316e-04 lr: 1.550316e-04  eta: 1:30:41  time: 0.789954  data_time: 0.474234  memory: 16273  loss: 0.320198  loss_kpt: 0.320198  acc_pose: 0.989008
09/15 18:49:06 - mmengine - INFO - Epoch(train) [233][250/291]  base_lr: 8.666987e-04 lr: 8.666987e-04  eta: 1:11:09  time: 0.389178  data_time: 0.152294  memory: 12704  grad_norm: 0.054905  loss: 0.203361  loss_kpt: 0.203361  acc_pose: 0.909971
09/15 18:49:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:49:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:49:43 - mmengine - INFO - Epoch(train) [234][ 50/291]  base_lr: 8.562135e-04 lr: 8.562135e-04  eta: 1:10:33  time: 0.410639  data_time: 0.176395  memory: 12704  grad_norm: 0.053245  loss: 0.201788  loss_kpt: 0.201788  acc_pose: 0.921672
09/15 18:50:02 - mmengine - INFO - Epoch(train) [234][100/291]  base_lr: 8.504805e-04 lr: 8.504805e-04  eta: 1:10:14  time: 0.389960  data_time: 0.156096  memory: 12704  grad_norm: 0.053435  loss: 0.201090  loss_kpt: 0.201090  acc_pose: 0.935146
09/15 18:50:15 - mmengine - INFO - Epoch(train) [224][ 50/146]  base_lr: 1.518035e-04 lr: 1.518035e-04  eta: 1:29:25  time: 0.830337  data_time: 0.513883  memory: 16273  loss: 0.319822  loss_kpt: 0.319822  acc_pose: 0.971928
09/15 18:50:22 - mmengine - INFO - Epoch(train) [234][150/291]  base_lr: 8.447673e-04 lr: 8.447673e-04  eta: 1:09:54  time: 0.393743  data_time: 0.159480  memory: 12704  grad_norm: 0.052773  loss: 0.202709  loss_kpt: 0.202709  acc_pose: 0.949059
09/15 18:50:40 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:50:41 - mmengine - INFO - Epoch(train) [234][200/291]  base_lr: 8.390743e-04 lr: 8.390743e-04  eta: 1:09:34  time: 0.391657  data_time: 0.157629  memory: 12704  grad_norm: 0.054625  loss: 0.202353  loss_kpt: 0.202353  acc_pose: 0.955773
09/15 18:50:54 - mmengine - INFO - Epoch(train) [224][100/146]  base_lr: 1.501324e-04 lr: 1.501324e-04  eta: 1:28:46  time: 0.776209  data_time: 0.456332  memory: 16273  loss: 0.320193  loss_kpt: 0.320193  acc_pose: 0.987519
09/15 18:51:01 - mmengine - INFO - Epoch(train) [234][250/291]  base_lr: 8.334014e-04 lr: 8.334014e-04  eta: 1:09:14  time: 0.397940  data_time: 0.163436  memory: 12704  grad_norm: 0.054582  loss: 0.202565  loss_kpt: 0.202565  acc_pose: 0.915995
09/15 18:51:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:51:29 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:51:37 - mmengine - INFO - Epoch(train) [235][ 50/291]  base_lr: 8.231288e-04 lr: 8.231288e-04  eta: 1:08:38  time: 0.403097  data_time: 0.170001  memory: 12704  grad_norm: 0.054365  loss: 0.204875  loss_kpt: 0.204875  acc_pose: 0.939062
09/15 18:51:57 - mmengine - INFO - Epoch(train) [235][100/291]  base_lr: 8.175133e-04 lr: 8.175133e-04  eta: 1:08:19  time: 0.400604  data_time: 0.166394  memory: 12704  grad_norm: 0.053776  loss: 0.203575  loss_kpt: 0.203575  acc_pose: 0.913542
09/15 18:52:10 - mmengine - INFO - Epoch(train) [225][ 50/146]  base_lr: 1.469441e-04 lr: 1.469441e-04  eta: 1:27:31  time: 0.818682  data_time: 0.501452  memory: 16273  loss: 0.317140  loss_kpt: 0.317140  acc_pose: 0.976665
09/15 18:52:16 - mmengine - INFO - Epoch(train) [235][150/291]  base_lr: 8.119182e-04 lr: 8.119182e-04  eta: 1:07:59  time: 0.383503  data_time: 0.149495  memory: 12704  grad_norm: 0.053852  loss: 0.204413  loss_kpt: 0.204413  acc_pose: 0.947382
09/15 18:52:36 - mmengine - INFO - Epoch(train) [235][200/291]  base_lr: 8.063438e-04 lr: 8.063438e-04  eta: 1:07:39  time: 0.400149  data_time: 0.165851  memory: 12704  grad_norm: 0.055492  loss: 0.198865  loss_kpt: 0.198865  acc_pose: 0.946496
09/15 18:52:48 - mmengine - INFO - Epoch(train) [225][100/146]  base_lr: 1.452941e-04 lr: 1.452941e-04  eta: 1:26:51  time: 0.766222  data_time: 0.450468  memory: 16273  loss: 0.317647  loss_kpt: 0.317647  acc_pose: 0.975335
09/15 18:52:57 - mmengine - INFO - Epoch(train) [235][250/291]  base_lr: 8.007900e-04 lr: 8.007900e-04  eta: 1:07:19  time: 0.406054  data_time: 0.171027  memory: 12704  grad_norm: 0.056619  loss: 0.196995  loss_kpt: 0.196995  acc_pose: 0.954933
09/15 18:53:13 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:53:24 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:53:32 - mmengine - INFO - Epoch(train) [236][ 50/291]  base_lr: 7.907355e-04 lr: 7.907355e-04  eta: 1:06:43  time: 0.394714  data_time: 0.160451  memory: 12704  grad_norm: 0.052091  loss: 0.201112  loss_kpt: 0.201112  acc_pose: 0.878507
09/15 18:53:52 - mmengine - INFO - Epoch(train) [236][100/291]  base_lr: 7.852406e-04 lr: 7.852406e-04  eta: 1:06:24  time: 0.395549  data_time: 0.161371  memory: 12704  grad_norm: 0.052130  loss: 0.200194  loss_kpt: 0.200194  acc_pose: 0.915894
09/15 18:54:04 - mmengine - INFO - Epoch(train) [226][ 50/146]  base_lr: 1.421472e-04 lr: 1.421472e-04  eta: 1:25:35  time: 0.802622  data_time: 0.486178  memory: 16273  loss: 0.315851  loss_kpt: 0.315851  acc_pose: 0.988564
09/15 18:54:12 - mmengine - INFO - Epoch(train) [236][150/291]  base_lr: 7.797666e-04 lr: 7.797666e-04  eta: 1:06:04  time: 0.390808  data_time: 0.157839  memory: 12704  grad_norm: 0.055992  loss: 0.200283  loss_kpt: 0.200283  acc_pose: 0.916678
09/15 18:54:31 - mmengine - INFO - Epoch(train) [236][200/291]  base_lr: 7.743138e-04 lr: 7.743138e-04  eta: 1:05:44  time: 0.391145  data_time: 0.157043  memory: 12704  grad_norm: 0.051347  loss: 0.200623  loss_kpt: 0.200623  acc_pose: 0.962362
09/15 18:54:44 - mmengine - INFO - Epoch(train) [226][100/146]  base_lr: 1.405193e-04 lr: 1.405193e-04  eta: 1:24:56  time: 0.783558  data_time: 0.466930  memory: 16273  loss: 0.320139  loss_kpt: 0.320139  acc_pose: 0.986648
09/15 18:54:51 - mmengine - INFO - Epoch(train) [236][250/291]  base_lr: 7.688821e-04 lr: 7.688821e-04  eta: 1:05:24  time: 0.391545  data_time: 0.157142  memory: 12704  grad_norm: 0.055292  loss: 0.200707  loss_kpt: 0.200707  acc_pose: 0.965176
09/15 18:55:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:55:20 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:55:24 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:55:27 - mmengine - INFO - Epoch(train) [237][ 50/291]  base_lr: 7.590512e-04 lr: 7.590512e-04  eta: 1:04:48  time: 0.412587  data_time: 0.174516  memory: 12704  grad_norm: 0.051672  loss: 0.201030  loss_kpt: 0.201030  acc_pose: 0.951996
09/15 18:55:47 - mmengine - INFO - Epoch(train) [237][100/291]  base_lr: 7.536798e-04 lr: 7.536798e-04  eta: 1:04:29  time: 0.396579  data_time: 0.161465  memory: 12704  grad_norm: 0.055168  loss: 0.200497  loss_kpt: 0.200497  acc_pose: 0.958938
09/15 18:56:00 - mmengine - INFO - Epoch(train) [227][ 50/146]  base_lr: 1.374156e-04 lr: 1.374156e-04  eta: 1:23:40  time: 0.805541  data_time: 0.488663  memory: 16273  loss: 0.314809  loss_kpt: 0.314809  acc_pose: 0.984578
09/15 18:56:06 - mmengine - INFO - Epoch(train) [237][150/291]  base_lr: 7.483299e-04 lr: 7.483299e-04  eta: 1:04:09  time: 0.387110  data_time: 0.153661  memory: 12704  grad_norm: 0.055149  loss: 0.200292  loss_kpt: 0.200292  acc_pose: 0.913193
09/15 18:56:26 - mmengine - INFO - Epoch(train) [237][200/291]  base_lr: 7.430017e-04 lr: 7.430017e-04  eta: 1:03:49  time: 0.404248  data_time: 0.170363  memory: 12704  grad_norm: 0.051857  loss: 0.200239  loss_kpt: 0.200239  acc_pose: 0.933432
09/15 18:56:40 - mmengine - INFO - Epoch(train) [227][100/146]  base_lr: 1.358106e-04 lr: 1.358106e-04  eta: 1:23:01  time: 0.791857  data_time: 0.475743  memory: 16273  loss: 0.320795  loss_kpt: 0.320795  acc_pose: 0.988394
09/15 18:56:46 - mmengine - INFO - Epoch(train) [237][250/291]  base_lr: 7.376951e-04 lr: 7.376951e-04  eta: 1:03:29  time: 0.392856  data_time: 0.159083  memory: 12704  grad_norm: 0.056986  loss: 0.203325  loss_kpt: 0.203325  acc_pose: 0.954221
09/15 18:57:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:57:15 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:57:16 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:57:23 - mmengine - INFO - Epoch(train) [238][ 50/291]  base_lr: 7.280931e-04 lr: 7.280931e-04  eta: 1:02:54  time: 0.413814  data_time: 0.180035  memory: 12704  grad_norm: 0.053426  loss: 0.200256  loss_kpt: 0.200256  acc_pose: 0.960278
09/15 18:57:42 - mmengine - INFO - Epoch(train) [238][100/291]  base_lr: 7.228481e-04 lr: 7.228481e-04  eta: 1:02:34  time: 0.385477  data_time: 0.151104  memory: 12704  grad_norm: 0.051238  loss: 0.198762  loss_kpt: 0.198762  acc_pose: 0.944787
09/15 18:57:55 - mmengine - INFO - Epoch(train) [228][ 50/146]  base_lr: 1.327516e-04 lr: 1.327516e-04  eta: 1:21:45  time: 0.797592  data_time: 0.477923  memory: 16273  loss: 0.316882  loss_kpt: 0.316882  acc_pose: 0.978594
09/15 18:58:02 - mmengine - INFO - Epoch(train) [238][150/291]  base_lr: 7.176252e-04 lr: 7.176252e-04  eta: 1:02:14  time: 0.397983  data_time: 0.163888  memory: 12704  grad_norm: 0.053196  loss: 0.198774  loss_kpt: 0.198774  acc_pose: 0.954799
09/15 18:58:22 - mmengine - INFO - Epoch(train) [238][200/291]  base_lr: 7.124244e-04 lr: 7.124244e-04  eta: 1:01:54  time: 0.401522  data_time: 0.166763  memory: 12704  grad_norm: 0.055924  loss: 0.198053  loss_kpt: 0.198053  acc_pose: 0.913199
09/15 18:58:34 - mmengine - INFO - Epoch(train) [228][100/146]  base_lr: 1.311704e-04 lr: 1.311704e-04  eta: 1:21:06  time: 0.784141  data_time: 0.461810  memory: 16273  loss: 0.318641  loss_kpt: 0.318641  acc_pose: 0.974772
09/15 18:58:41 - mmengine - INFO - Epoch(train) [238][250/291]  base_lr: 7.072457e-04 lr: 7.072457e-04  eta: 1:01:34  time: 0.386491  data_time: 0.152821  memory: 12704  grad_norm: 0.058613  loss: 0.200689  loss_kpt: 0.200689  acc_pose: 0.959947
09/15 18:58:57 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 18:59:09 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 18:59:18 - mmengine - INFO - Epoch(train) [239][ 50/291]  base_lr: 6.978778e-04 lr: 6.978778e-04  eta: 1:00:59  time: 0.403265  data_time: 0.169162  memory: 12704  grad_norm: 0.055236  loss: 0.202220  loss_kpt: 0.202220  acc_pose: 0.922808
09/15 18:59:37 - mmengine - INFO - Epoch(train) [239][100/291]  base_lr: 6.927622e-04 lr: 6.927622e-04  eta: 1:00:39  time: 0.391243  data_time: 0.157125  memory: 12704  grad_norm: 0.054736  loss: 0.198819  loss_kpt: 0.198819  acc_pose: 0.944475
09/15 18:59:50 - mmengine - INFO - Epoch(train) [229][ 50/146]  base_lr: 1.281580e-04 lr: 1.281580e-04  eta: 1:19:50  time: 0.808896  data_time: 0.493169  memory: 16273  loss: 0.314678  loss_kpt: 0.314678  acc_pose: 0.968969
09/15 18:59:57 - mmengine - INFO - Epoch(train) [239][150/291]  base_lr: 6.876690e-04 lr: 6.876690e-04  eta: 1:00:19  time: 0.385837  data_time: 0.148035  memory: 12704  grad_norm: 0.055354  loss: 0.198523  loss_kpt: 0.198523  acc_pose: 0.935015
09/15 19:00:16 - mmengine - INFO - Epoch(train) [239][200/291]  base_lr: 6.825985e-04 lr: 6.825985e-04  eta: 0:59:59  time: 0.397736  data_time: 0.164539  memory: 12704  grad_norm: 0.057825  loss: 0.199030  loss_kpt: 0.199030  acc_pose: 0.918322
09/15 19:00:29 - mmengine - INFO - Epoch(train) [229][100/146]  base_lr: 1.266014e-04 lr: 1.266014e-04  eta: 1:19:11  time: 0.775166  data_time: 0.459067  memory: 16273  loss: 0.318043  loss_kpt: 0.318043  acc_pose: 0.989009
09/15 19:00:37 - mmengine - INFO - Epoch(train) [239][250/291]  base_lr: 6.775506e-04 lr: 6.775506e-04  eta: 0:59:40  time: 0.412196  data_time: 0.177923  memory: 12704  grad_norm: 0.055609  loss: 0.195725  loss_kpt: 0.195725  acc_pose: 0.922963
09/15 19:00:53 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:01:05 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:01:14 - mmengine - INFO - Epoch(train) [240][ 50/291]  base_lr: 6.684218e-04 lr: 6.684218e-04  eta: 0:59:04  time: 0.403960  data_time: 0.170711  memory: 12704  grad_norm: 0.055938  loss: 0.197890  loss_kpt: 0.197890  acc_pose: 0.922886
09/15 19:01:34 - mmengine - INFO - Epoch(train) [240][100/291]  base_lr: 6.634383e-04 lr: 6.634383e-04  eta: 0:58:44  time: 0.408634  data_time: 0.174745  memory: 12704  grad_norm: 0.055769  loss: 0.196598  loss_kpt: 0.196598  acc_pose: 0.951763
09/15 19:01:45 - mmengine - INFO - Epoch(train) [230][ 50/146]  base_lr: 1.236370e-04 lr: 1.236370e-04  eta: 1:17:55  time: 0.806707  data_time: 0.491421  memory: 16273  loss: 0.314474  loss_kpt: 0.314474  acc_pose: 0.989403
09/15 19:01:54 - mmengine - INFO - Epoch(train) [240][150/291]  base_lr: 6.584777e-04 lr: 6.584777e-04  eta: 0:58:24  time: 0.391688  data_time: 0.157472  memory: 12704  grad_norm: 0.053188  loss: 0.199222  loss_kpt: 0.199222  acc_pose: 0.941013
09/15 19:02:13 - mmengine - INFO - Epoch(train) [240][200/291]  base_lr: 6.535402e-04 lr: 6.535402e-04  eta: 0:58:05  time: 0.396853  data_time: 0.163301  memory: 12704  grad_norm: 0.055955  loss: 0.196516  loss_kpt: 0.196516  acc_pose: 0.930406
09/15 19:02:24 - mmengine - INFO - Epoch(train) [230][100/146]  base_lr: 1.221059e-04 lr: 1.221059e-04  eta: 1:17:16  time: 0.784812  data_time: 0.468135  memory: 16273  loss: 0.315951  loss_kpt: 0.315951  acc_pose: 0.992228
09/15 19:02:33 - mmengine - INFO - Epoch(train) [240][250/291]  base_lr: 6.486257e-04 lr: 6.486257e-04  eta: 0:57:45  time: 0.386725  data_time: 0.152690  memory: 12704  grad_norm: 0.056118  loss: 0.200654  loss_kpt: 0.200654  acc_pose: 0.959128
09/15 19:02:49 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:02:49 - mmengine - INFO - Saving checkpoint at 240 epochs
09/15 19:02:50 - mmengine - INFO - Switch pipeline now!
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
09/15 19:03:00 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:03:00 - mmengine - INFO - Saving checkpoint at 230 epochs
09/15 19:03:11 - mmengine - INFO - Epoch(train) [241][ 50/291]  base_lr: 6.397411e-04 lr: 6.397411e-04  eta: 0:57:09  time: 0.415689  data_time: 0.177172  memory: 12704  grad_norm: 0.053403  loss: 0.184060  loss_kpt: 0.184060  acc_pose: 0.984747
09/15 19:03:31 - mmengine - INFO - Epoch(train) [241][100/291]  base_lr: 6.348923e-04 lr: 6.348923e-04  eta: 0:56:49  time: 0.390011  data_time: 0.154418  memory: 12704  grad_norm: 0.055777  loss: 0.182702  loss_kpt: 0.182702  acc_pose: 0.970388
09/15 19:03:41 - mmengine - INFO - Epoch(train) [231][ 50/146]  base_lr: 1.191913e-04 lr: 1.191913e-04  eta: 1:16:00  time: 0.800138  data_time: 0.484542  memory: 16273  loss: 0.315393  loss_kpt: 0.315393  acc_pose: 0.984094
09/15 19:03:50 - mmengine - INFO - Epoch(train) [241][150/291]  base_lr: 6.300670e-04 lr: 6.300670e-04  eta: 0:56:29  time: 0.387324  data_time: 0.153173  memory: 12704  grad_norm: 0.055027  loss: 0.183969  loss_kpt: 0.183969  acc_pose: 0.957155
09/15 19:03:54 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:04:10 - mmengine - INFO - Epoch(train) [241][200/291]  base_lr: 6.252651e-04 lr: 6.252651e-04  eta: 0:56:10  time: 0.395859  data_time: 0.160931  memory: 12704  grad_norm: 0.056118  loss: 0.186794  loss_kpt: 0.186794  acc_pose: 0.975053
09/15 19:04:20 - mmengine - INFO - Epoch(train) [231][100/146]  base_lr: 1.176865e-04 lr: 1.176865e-04  eta: 1:15:21  time: 0.786808  data_time: 0.469266  memory: 16273  loss: 0.315787  loss_kpt: 0.315787  acc_pose: 0.979355
09/15 19:04:30 - mmengine - INFO - Epoch(train) [241][250/291]  base_lr: 6.204868e-04 lr: 6.204868e-04  eta: 0:55:50  time: 0.402653  data_time: 0.168254  memory: 12704  grad_norm: 0.056043  loss: 0.182758  loss_kpt: 0.182758  acc_pose: 0.985303
09/15 19:04:46 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:04:56 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:05:07 - mmengine - INFO - Epoch(train) [242][ 50/291]  base_lr: 6.118511e-04 lr: 6.118511e-04  eta: 0:55:14  time: 0.413808  data_time: 0.178543  memory: 12704  grad_norm: 0.057781  loss: 0.180130  loss_kpt: 0.180130  acc_pose: 0.966382
09/15 19:05:27 - mmengine - INFO - Epoch(train) [242][100/291]  base_lr: 6.071397e-04 lr: 6.071397e-04  eta: 0:54:54  time: 0.398112  data_time: 0.163628  memory: 12704  grad_norm: 0.057205  loss: 0.179614  loss_kpt: 0.179614  acc_pose: 0.979526
09/15 19:05:36 - mmengine - INFO - Epoch(train) [232][ 50/146]  base_lr: 1.148232e-04 lr: 1.148232e-04  eta: 1:14:05  time: 0.799954  data_time: 0.483826  memory: 16273  loss: 0.314009  loss_kpt: 0.314009  acc_pose: 0.985305
09/15 19:05:46 - mmengine - INFO - Epoch(train) [242][150/291]  base_lr: 6.024522e-04 lr: 6.024522e-04  eta: 0:54:34  time: 0.385257  data_time: 0.150610  memory: 12704  grad_norm: 0.056740  loss: 0.183758  loss_kpt: 0.183758  acc_pose: 0.990051
09/15 19:06:06 - mmengine - INFO - Epoch(train) [242][200/291]  base_lr: 5.977887e-04 lr: 5.977887e-04  eta: 0:54:15  time: 0.395589  data_time: 0.161770  memory: 12704  grad_norm: 0.055950  loss: 0.180782  loss_kpt: 0.180782  acc_pose: 0.986159
09/15 19:06:16 - mmengine - INFO - Epoch(train) [232][100/146]  base_lr: 1.133455e-04 lr: 1.133455e-04  eta: 1:13:26  time: 0.798964  data_time: 0.483449  memory: 16273  loss: 0.316629  loss_kpt: 0.316629  acc_pose: 0.981564
09/15 19:06:26 - mmengine - INFO - Epoch(train) [242][250/291]  base_lr: 5.931491e-04 lr: 5.931491e-04  eta: 0:53:55  time: 0.401638  data_time: 0.164898  memory: 12704  grad_norm: 0.055672  loss: 0.182203  loss_kpt: 0.182203  acc_pose: 0.961460
09/15 19:06:42 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:06:51 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:07:02 - mmengine - INFO - Epoch(train) [243][ 50/291]  base_lr: 5.847670e-04 lr: 5.847670e-04  eta: 0:53:19  time: 0.409682  data_time: 0.175609  memory: 12704  grad_norm: 0.060752  loss: 0.181656  loss_kpt: 0.181656  acc_pose: 0.965953
09/15 19:07:22 - mmengine - INFO - Epoch(train) [243][100/291]  base_lr: 5.801956e-04 lr: 5.801956e-04  eta: 0:52:59  time: 0.395320  data_time: 0.160429  memory: 12704  grad_norm: 0.057722  loss: 0.179647  loss_kpt: 0.179647  acc_pose: 0.983901
09/15 19:07:32 - mmengine - INFO - Epoch(train) [233][ 50/146]  base_lr: 1.105350e-04 lr: 1.105350e-04  eta: 1:12:10  time: 0.808187  data_time: 0.492684  memory: 16273  loss: 0.315494  loss_kpt: 0.315494  acc_pose: 0.985637
09/15 19:07:42 - mmengine - INFO - Epoch(train) [243][150/291]  base_lr: 5.756484e-04 lr: 5.756484e-04  eta: 0:52:40  time: 0.392645  data_time: 0.158613  memory: 12704  grad_norm: 0.056119  loss: 0.182040  loss_kpt: 0.182040  acc_pose: 0.974549
09/15 19:08:02 - mmengine - INFO - Epoch(train) [243][200/291]  base_lr: 5.711257e-04 lr: 5.711257e-04  eta: 0:52:20  time: 0.396675  data_time: 0.162442  memory: 12704  grad_norm: 0.055456  loss: 0.178970  loss_kpt: 0.178970  acc_pose: 0.982563
09/15 19:08:10 - mmengine - INFO - Epoch(train) [233][100/146]  base_lr: 1.090853e-04 lr: 1.090853e-04  eta: 1:11:31  time: 0.774461  data_time: 0.459066  memory: 16273  loss: 0.313855  loss_kpt: 0.313855  acc_pose: 0.970915
09/15 19:08:21 - mmengine - INFO - Epoch(train) [243][250/291]  base_lr: 5.666274e-04 lr: 5.666274e-04  eta: 0:52:00  time: 0.383944  data_time: 0.149732  memory: 12704  grad_norm: 0.055952  loss: 0.178797  loss_kpt: 0.178797  acc_pose: 0.983879
09/15 19:08:33 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:08:37 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:08:47 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:08:58 - mmengine - INFO - Epoch(train) [244][ 50/291]  base_lr: 5.585034e-04 lr: 5.585034e-04  eta: 0:51:24  time: 0.411314  data_time: 0.177542  memory: 12704  grad_norm: 0.056803  loss: 0.177544  loss_kpt: 0.177544  acc_pose: 0.982408
09/15 19:09:18 - mmengine - INFO - Epoch(train) [244][100/291]  base_lr: 5.540744e-04 lr: 5.540744e-04  eta: 0:51:04  time: 0.396475  data_time: 0.162688  memory: 12704  grad_norm: 0.056805  loss: 0.177681  loss_kpt: 0.177681  acc_pose: 0.990956
09/15 19:09:27 - mmengine - INFO - Epoch(train) [234][ 50/146]  base_lr: 1.063292e-04 lr: 1.063292e-04  eta: 1:10:16  time: 0.812298  data_time: 0.495321  memory: 16273  loss: 0.314159  loss_kpt: 0.314159  acc_pose: 0.980819
09/15 19:09:37 - mmengine - INFO - Epoch(train) [244][150/291]  base_lr: 5.496701e-04 lr: 5.496701e-04  eta: 0:50:45  time: 0.396245  data_time: 0.161571  memory: 12704  grad_norm: 0.058442  loss: 0.179295  loss_kpt: 0.179295  acc_pose: 0.990719
09/15 19:09:57 - mmengine - INFO - Epoch(train) [244][200/291]  base_lr: 5.452906e-04 lr: 5.452906e-04  eta: 0:50:25  time: 0.391838  data_time: 0.157243  memory: 12704  grad_norm: 0.056891  loss: 0.180317  loss_kpt: 0.180317  acc_pose: 0.983417
09/15 19:10:06 - mmengine - INFO - Epoch(train) [234][100/146]  base_lr: 1.049081e-04 lr: 1.049081e-04  eta: 1:09:36  time: 0.769349  data_time: 0.452964  memory: 16273  loss: 0.315981  loss_kpt: 0.315981  acc_pose: 0.989593
09/15 19:10:17 - mmengine - INFO - Epoch(train) [244][250/291]  base_lr: 5.409360e-04 lr: 5.409360e-04  eta: 0:50:05  time: 0.391255  data_time: 0.156544  memory: 12704  grad_norm: 0.056963  loss: 0.176922  loss_kpt: 0.176922  acc_pose: 0.989577
09/15 19:10:31 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:10:32 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:10:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:10:53 - mmengine - INFO - Epoch(train) [245][ 50/291]  base_lr: 5.330745e-04 lr: 5.330745e-04  eta: 0:49:29  time: 0.413063  data_time: 0.178202  memory: 12704  grad_norm: 0.056815  loss: 0.174991  loss_kpt: 0.174991  acc_pose: 0.977483
09/15 19:11:13 - mmengine - INFO - Epoch(train) [245][100/291]  base_lr: 5.287904e-04 lr: 5.287904e-04  eta: 0:49:09  time: 0.401457  data_time: 0.164859  memory: 12704  grad_norm: 0.057415  loss: 0.179034  loss_kpt: 0.179034  acc_pose: 0.994066
09/15 19:11:21 - mmengine - INFO - Epoch(train) [235][ 50/146]  base_lr: 1.022079e-04 lr: 1.022079e-04  eta: 1:08:20  time: 0.807118  data_time: 0.490979  memory: 16273  loss: 0.317120  loss_kpt: 0.317120  acc_pose: 0.997756
09/15 19:11:32 - mmengine - INFO - Epoch(train) [245][150/291]  base_lr: 5.245313e-04 lr: 5.245313e-04  eta: 0:48:50  time: 0.387427  data_time: 0.152757  memory: 12704  grad_norm: 0.058283  loss: 0.177747  loss_kpt: 0.177747  acc_pose: 0.969718
09/15 19:11:52 - mmengine - INFO - Epoch(train) [245][200/291]  base_lr: 5.202974e-04 lr: 5.202974e-04  eta: 0:48:30  time: 0.388260  data_time: 0.153103  memory: 12704  grad_norm: 0.060142  loss: 0.177968  loss_kpt: 0.177968  acc_pose: 0.967821
09/15 19:12:00 - mmengine - INFO - Epoch(train) [235][100/146]  base_lr: 1.008163e-04 lr: 1.008163e-04  eta: 1:07:41  time: 0.783306  data_time: 0.467479  memory: 16273  loss: 0.315706  loss_kpt: 0.315706  acc_pose: 0.992884
09/15 19:12:11 - mmengine - INFO - Epoch(train) [245][250/291]  base_lr: 5.160888e-04 lr: 5.160888e-04  eta: 0:48:10  time: 0.390063  data_time: 0.155812  memory: 12704  grad_norm: 0.058225  loss: 0.176180  loss_kpt: 0.176180  acc_pose: 0.969368
09/15 19:12:27 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:12:36 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:12:47 - mmengine - INFO - Epoch(train) [246][ 50/291]  base_lr: 5.084942e-04 lr: 5.084942e-04  eta: 0:47:34  time: 0.399228  data_time: 0.165443  memory: 12704  grad_norm: 0.059379  loss: 0.179271  loss_kpt: 0.179271  acc_pose: 0.985417
09/15 19:13:07 - mmengine - INFO - Epoch(train) [246][100/291]  base_lr: 5.043572e-04 lr: 5.043572e-04  eta: 0:47:14  time: 0.393508  data_time: 0.158617  memory: 12704  grad_norm: 0.059828  loss: 0.174160  loss_kpt: 0.174160  acc_pose: 0.927971
09/15 19:13:16 - mmengine - INFO - Epoch(train) [236][ 50/146]  base_lr: 9.817338e-05 lr: 9.817338e-05  eta: 1:06:25  time: 0.800553  data_time: 0.480701  memory: 16273  loss: 0.311287  loss_kpt: 0.311287  acc_pose: 0.988121
09/15 19:13:27 - mmengine - INFO - Epoch(train) [246][150/291]  base_lr: 5.002456e-04 lr: 5.002456e-04  eta: 0:46:55  time: 0.399388  data_time: 0.164918  memory: 12704  grad_norm: 0.060712  loss: 0.177923  loss_kpt: 0.177923  acc_pose: 0.958888
09/15 19:13:47 - mmengine - INFO - Epoch(train) [246][200/291]  base_lr: 4.961597e-04 lr: 4.961597e-04  eta: 0:46:35  time: 0.404409  data_time: 0.169553  memory: 12704  grad_norm: 0.057970  loss: 0.177512  loss_kpt: 0.177512  acc_pose: 0.978196
09/15 19:13:56 - mmengine - INFO - Epoch(train) [236][100/146]  base_lr: 9.681205e-05 lr: 9.681205e-05  eta: 1:05:46  time: 0.792589  data_time: 0.476500  memory: 16273  loss: 0.314466  loss_kpt: 0.314466  acc_pose: 0.986300
09/15 19:14:07 - mmengine - INFO - Epoch(train) [246][250/291]  base_lr: 4.920994e-04 lr: 4.920994e-04  eta: 0:46:15  time: 0.398683  data_time: 0.164056  memory: 12704  grad_norm: 0.062138  loss: 0.179174  loss_kpt: 0.179174  acc_pose: 0.984527
09/15 19:14:22 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:14:31 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:14:42 - mmengine - INFO - Epoch(train) [247][ 50/291]  base_lr: 4.847757e-04 lr: 4.847757e-04  eta: 0:45:39  time: 0.396614  data_time: 0.162091  memory: 12704  grad_norm: 0.059618  loss: 0.174726  loss_kpt: 0.174726  acc_pose: 0.996015
09/15 19:15:02 - mmengine - INFO - Epoch(train) [247][100/291]  base_lr: 4.807880e-04 lr: 4.807880e-04  eta: 0:45:19  time: 0.394751  data_time: 0.160839  memory: 12704  grad_norm: 0.066093  loss: 0.175838  loss_kpt: 0.175838  acc_pose: 0.960435
09/15 19:15:11 - mmengine - INFO - Epoch(train) [237][ 50/146]  base_lr: 9.422788e-05 lr: 9.422788e-05  eta: 1:04:30  time: 0.807865  data_time: 0.492094  memory: 16273  loss: 0.310767  loss_kpt: 0.310767  acc_pose: 0.962021
09/15 19:15:22 - mmengine - INFO - Epoch(train) [247][150/291]  base_lr: 4.768263e-04 lr: 4.768263e-04  eta: 0:45:00  time: 0.406556  data_time: 0.171726  memory: 12704  grad_norm: 0.059379  loss: 0.176353  loss_kpt: 0.176353  acc_pose: 0.980805
09/15 19:15:42 - mmengine - INFO - Epoch(train) [247][200/291]  base_lr: 4.728905e-04 lr: 4.728905e-04  eta: 0:44:40  time: 0.394826  data_time: 0.159566  memory: 12704  grad_norm: 0.057143  loss: 0.176436  loss_kpt: 0.176436  acc_pose: 0.978067
09/15 19:15:50 - mmengine - INFO - Epoch(train) [237][100/146]  base_lr: 9.289752e-05 lr: 9.289752e-05  eta: 1:03:51  time: 0.781895  data_time: 0.462500  memory: 16273  loss: 0.310521  loss_kpt: 0.310521  acc_pose: 0.986828
09/15 19:16:01 - mmengine - INFO - Epoch(train) [247][250/291]  base_lr: 4.689807e-04 lr: 4.689807e-04  eta: 0:44:20  time: 0.393377  data_time: 0.159706  memory: 12704  grad_norm: 0.056990  loss: 0.172218  loss_kpt: 0.172218  acc_pose: 0.981953
09/15 19:16:17 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:16:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:16:37 - mmengine - INFO - Epoch(train) [248][ 50/291]  base_lr: 4.619318e-04 lr: 4.619318e-04  eta: 0:43:44  time: 0.397079  data_time: 0.162587  memory: 12704  grad_norm: 0.059485  loss: 0.175966  loss_kpt: 0.175966  acc_pose: 0.958927
09/15 19:16:58 - mmengine - INFO - Epoch(train) [248][100/291]  base_lr: 4.580957e-04 lr: 4.580957e-04  eta: 0:43:24  time: 0.407554  data_time: 0.170429  memory: 12704  grad_norm: 0.060020  loss: 0.172539  loss_kpt: 0.172539  acc_pose: 0.967184
09/15 19:17:06 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:17:07 - mmengine - INFO - Epoch(train) [238][ 50/146]  base_lr: 9.037349e-05 lr: 9.037349e-05  eta: 1:02:35  time: 0.806712  data_time: 0.490152  memory: 16273  loss: 0.312827  loss_kpt: 0.312827  acc_pose: 0.992311
09/15 19:17:17 - mmengine - INFO - Epoch(train) [248][150/291]  base_lr: 4.542859e-04 lr: 4.542859e-04  eta: 0:43:05  time: 0.385618  data_time: 0.150658  memory: 12704  grad_norm: 0.059279  loss: 0.171802  loss_kpt: 0.171802  acc_pose: 0.971396
09/15 19:17:37 - mmengine - INFO - Epoch(train) [248][200/291]  base_lr: 4.505024e-04 lr: 4.505024e-04  eta: 0:42:45  time: 0.390032  data_time: 0.156820  memory: 12704  grad_norm: 0.061185  loss: 0.176788  loss_kpt: 0.176788  acc_pose: 0.968939
09/15 19:17:47 - mmengine - INFO - Epoch(train) [238][100/146]  base_lr: 8.907482e-05 lr: 8.907482e-05  eta: 1:01:56  time: 0.792564  data_time: 0.477104  memory: 16273  loss: 0.309640  loss_kpt: 0.309640  acc_pose: 0.986216
09/15 19:17:56 - mmengine - INFO - Epoch(train) [248][250/291]  base_lr: 4.467452e-04 lr: 4.467452e-04  eta: 0:42:25  time: 0.396643  data_time: 0.162384  memory: 12704  grad_norm: 0.060650  loss: 0.177126  loss_kpt: 0.177126  acc_pose: 0.981881
09/15 19:18:12 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:18:22 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:18:33 - mmengine - INFO - Epoch(train) [249][ 50/291]  base_lr: 4.399750e-04 lr: 4.399750e-04  eta: 0:41:49  time: 0.404464  data_time: 0.167367  memory: 12704  grad_norm: 0.059786  loss: 0.174595  loss_kpt: 0.174595  acc_pose: 0.986255
09/15 19:18:52 - mmengine - INFO - Epoch(train) [249][100/291]  base_lr: 4.362926e-04 lr: 4.362926e-04  eta: 0:41:29  time: 0.384891  data_time: 0.150162  memory: 12704  grad_norm: 0.063276  loss: 0.175335  loss_kpt: 0.175335  acc_pose: 0.967460
09/15 19:19:02 - mmengine - INFO - Epoch(train) [239][ 50/146]  base_lr: 8.661232e-05 lr: 8.661232e-05  eta: 1:00:40  time: 0.806152  data_time: 0.487914  memory: 16273  loss: 0.314638  loss_kpt: 0.314638  acc_pose: 0.979776
09/15 19:19:12 - mmengine - INFO - Epoch(train) [249][150/291]  base_lr: 4.326367e-04 lr: 4.326367e-04  eta: 0:41:10  time: 0.400768  data_time: 0.165909  memory: 12704  grad_norm: 0.062045  loss: 0.173651  loss_kpt: 0.173651  acc_pose: 0.966455
09/15 19:19:32 - mmengine - INFO - Epoch(train) [249][200/291]  base_lr: 4.290075e-04 lr: 4.290075e-04  eta: 0:40:50  time: 0.403236  data_time: 0.169263  memory: 12704  grad_norm: 0.060321  loss: 0.171216  loss_kpt: 0.171216  acc_pose: 0.997174
09/15 19:19:41 - mmengine - INFO - Epoch(train) [239][100/146]  base_lr: 8.534604e-05 lr: 8.534604e-05  eta: 1:00:01  time: 0.773913  data_time: 0.454694  memory: 16273  loss: 0.311644  loss_kpt: 0.311644  acc_pose: 0.984683
09/15 19:19:52 - mmengine - INFO - Epoch(train) [249][250/291]  base_lr: 4.254050e-04 lr: 4.254050e-04  eta: 0:40:30  time: 0.395118  data_time: 0.161268  memory: 12704  grad_norm: 0.060278  loss: 0.175916  loss_kpt: 0.175916  acc_pose: 0.963545
09/15 19:20:08 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:20:17 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:20:28 - mmengine - INFO - Epoch(train) [250][ 50/291]  base_lr: 4.189172e-04 lr: 4.189172e-04  eta: 0:39:54  time: 0.407423  data_time: 0.170853  memory: 12704  grad_norm: 0.061814  loss: 0.176086  loss_kpt: 0.176086  acc_pose: 0.982705
09/15 19:20:48 - mmengine - INFO - Epoch(train) [250][100/291]  base_lr: 4.153903e-04 lr: 4.153903e-04  eta: 0:39:35  time: 0.400766  data_time: 0.166665  memory: 12704  grad_norm: 0.061199  loss: 0.176800  loss_kpt: 0.176800  acc_pose: 0.982599
09/15 19:20:58 - mmengine - INFO - Epoch(train) [240][ 50/146]  base_lr: 8.294639e-05 lr: 8.294639e-05  eta: 0:58:46  time: 0.814852  data_time: 0.497043  memory: 16273  loss: 0.309751  loss_kpt: 0.309751  acc_pose: 0.976548
09/15 19:21:08 - mmengine - INFO - Epoch(train) [250][150/291]  base_lr: 4.118904e-04 lr: 4.118904e-04  eta: 0:39:15  time: 0.396006  data_time: 0.161590  memory: 12704  grad_norm: 0.061185  loss: 0.169498  loss_kpt: 0.169498  acc_pose: 0.982026
09/15 19:21:27 - mmengine - INFO - Epoch(train) [250][200/291]  base_lr: 4.084175e-04 lr: 4.084175e-04  eta: 0:38:55  time: 0.381636  data_time: 0.147054  memory: 12704  grad_norm: 0.062308  loss: 0.171688  loss_kpt: 0.171688  acc_pose: 0.975054
09/15 19:21:36 - mmengine - INFO - Epoch(train) [240][100/146]  base_lr: 8.171319e-05 lr: 8.171319e-05  eta: 0:58:06  time: 0.771344  data_time: 0.455089  memory: 16273  loss: 0.312050  loss_kpt: 0.312050  acc_pose: 0.988734
09/15 19:21:41 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:21:47 - mmengine - INFO - Epoch(train) [250][250/291]  base_lr: 4.049716e-04 lr: 4.049716e-04  eta: 0:38:35  time: 0.399451  data_time: 0.165317  memory: 12704  grad_norm: 0.059283  loss: 0.170535  loss_kpt: 0.170535  acc_pose: 0.986068
09/15 19:22:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:22:02 - mmengine - INFO - Saving checkpoint at 250 epochs
09/15 19:22:12 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:22:12 - mmengine - INFO - Saving checkpoint at 240 epochs
09/15 19:22:14 - mmengine - INFO - Switch pipeline now!
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
09/15 19:22:15 - mmengine - INFO - Evaluating CocoMetric...
Loading and preparing results...
DONE (t=0.09s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *keypoints*
DONE (t=0.27s).
Accumulating evaluation results...
DONE (t=0.01s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.783
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.974
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.874
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.783
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 20 ] =  0.837
 Average Recall     (AR) @[ IoU=0.50      | area=   all | maxDets= 20 ] =  0.981
 Average Recall     (AR) @[ IoU=0.75      | area=   all | maxDets= 20 ] =  0.911
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets= 20 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets= 20 ] =  0.837
09/15 19:22:16 - mmengine - INFO - Evaluating PCKAccuracy (normalized by ``"bbox_size"``)...
09/15 19:22:16 - mmengine - INFO - Evaluating AUC...
09/15 19:22:16 - mmengine - INFO - Evaluating NME...
09/15 19:22:16 - mmengine - INFO - Epoch(val) [250][38/38]    coco/AP: 0.783072  coco/AP .5: 0.974342  coco/AP .75: 0.873807  coco/AP (L): -1.000000  coco/AR: 0.783072  coco/AR .5: 0.836785  coco/AR .75: 0.980640  coco/AR (L): 0.910774  PCK: 0.926788  AUC: 0.604023  NME: 0.311791  data_time: 0.153382  time: 0.262545
09/15 19:22:16 - mmengine - INFO - The previous best checkpoint /home/txy/code/CastPose/work_dirs/3/best_coco_AP_epoch_200.pth is removed
09/15 19:22:17 - mmengine - INFO - The best checkpoint with 0.7831 coco/AP at 250 epoch is saved to best_coco_AP_epoch_250.pth.
09/15 19:22:40 - mmengine - INFO - Epoch(train) [251][ 50/291]  base_lr: 3.987697e-04 lr: 3.987697e-04  eta: 0:37:59  time: 0.415188  data_time: 0.181321  memory: 12704  grad_norm: 0.060089  loss: 0.172059  loss_kpt: 0.172059  acc_pose: 0.988892
09/15 19:22:54 - mmengine - INFO - Epoch(train) [241][ 50/146]  base_lr: 7.937769e-05 lr: 7.937769e-05  eta: 0:56:51  time: 0.812409  data_time: 0.497070  memory: 16273  loss: 0.285236  loss_kpt: 0.285236  acc_pose: 0.996234
09/15 19:22:59 - mmengine - INFO - Epoch(train) [251][100/291]  base_lr: 3.954003e-04 lr: 3.954003e-04  eta: 0:37:40  time: 0.390267  data_time: 0.156165  memory: 12704  grad_norm: 0.061172  loss: 0.172693  loss_kpt: 0.172693  acc_pose: 0.985984
09/15 19:23:19 - mmengine - INFO - Epoch(train) [251][150/291]  base_lr: 3.920583e-04 lr: 3.920583e-04  eta: 0:37:20  time: 0.398627  data_time: 0.161730  memory: 12704  grad_norm: 0.061557  loss: 0.170285  loss_kpt: 0.170285  acc_pose: 0.995369
09/15 19:23:34 - mmengine - INFO - Epoch(train) [241][100/146]  base_lr: 7.817824e-05 lr: 7.817824e-05  eta: 0:56:11  time: 0.797043  data_time: 0.480353  memory: 16273  loss: 0.285429  loss_kpt: 0.285429  acc_pose: 0.990801
09/15 19:23:39 - mmengine - INFO - Epoch(train) [251][200/291]  base_lr: 3.887435e-04 lr: 3.887435e-04  eta: 0:37:00  time: 0.399663  data_time: 0.165816  memory: 12704  grad_norm: 0.060442  loss: 0.172003  loss_kpt: 0.172003  acc_pose: 0.992246
09/15 19:23:58 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:23:58 - mmengine - INFO - Epoch(train) [251][250/291]  base_lr: 3.854561e-04 lr: 3.854561e-04  eta: 0:36:40  time: 0.387232  data_time: 0.152897  memory: 12704  grad_norm: 0.061783  loss: 0.173162  loss_kpt: 0.173162  acc_pose: 0.985550
09/15 19:24:10 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:24:14 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:24:34 - mmengine - INFO - Epoch(train) [252][ 50/291]  base_lr: 3.795434e-04 lr: 3.795434e-04  eta: 0:36:04  time: 0.409034  data_time: 0.172789  memory: 12704  grad_norm: 0.061208  loss: 0.173999  loss_kpt: 0.173999  acc_pose: 0.977407
09/15 19:24:51 - mmengine - INFO - Epoch(train) [242][ 50/146]  base_lr: 7.590816e-05 lr: 7.590816e-05  eta: 0:54:56  time: 0.823873  data_time: 0.508101  memory: 16273  loss: 0.275377  loss_kpt: 0.275377  acc_pose: 0.997540
09/15 19:24:54 - mmengine - INFO - Epoch(train) [252][100/291]  base_lr: 3.763334e-04 lr: 3.763334e-04  eta: 0:35:45  time: 0.400808  data_time: 0.166823  memory: 12704  grad_norm: 0.064509  loss: 0.170105  loss_kpt: 0.170105  acc_pose: 0.977703
09/15 19:25:14 - mmengine - INFO - Epoch(train) [252][150/291]  base_lr: 3.731510e-04 lr: 3.731510e-04  eta: 0:35:25  time: 0.395111  data_time: 0.160563  memory: 12704  grad_norm: 0.061258  loss: 0.169199  loss_kpt: 0.169199  acc_pose: 0.979846
09/15 19:25:30 - mmengine - INFO - Epoch(train) [242][100/146]  base_lr: 7.474310e-05 lr: 7.474310e-05  eta: 0:54:16  time: 0.776104  data_time: 0.458857  memory: 16273  loss: 0.280063  loss_kpt: 0.280063  acc_pose: 0.996168
09/15 19:25:33 - mmengine - INFO - Epoch(train) [252][200/291]  base_lr: 3.699962e-04 lr: 3.699962e-04  eta: 0:35:05  time: 0.387956  data_time: 0.153592  memory: 12704  grad_norm: 0.061768  loss: 0.172659  loss_kpt: 0.172659  acc_pose: 0.988138
09/15 19:25:53 - mmengine - INFO - Epoch(train) [252][250/291]  base_lr: 3.668690e-04 lr: 3.668690e-04  eta: 0:34:45  time: 0.386989  data_time: 0.152768  memory: 12704  grad_norm: 0.062981  loss: 0.172949  loss_kpt: 0.172949  acc_pose: 0.978271
09/15 19:26:06 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:26:09 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:26:29 - mmengine - INFO - Epoch(train) [253][ 50/291]  base_lr: 3.612488e-04 lr: 3.612488e-04  eta: 0:34:09  time: 0.412571  data_time: 0.178289  memory: 12704  grad_norm: 0.060022  loss: 0.170191  loss_kpt: 0.170191  acc_pose: 0.984882
09/15 19:26:46 - mmengine - INFO - Epoch(train) [243][ 50/146]  base_lr: 7.253967e-05 lr: 7.253967e-05  eta: 0:53:01  time: 0.804263  data_time: 0.487170  memory: 16273  loss: 0.277612  loss_kpt: 0.277612  acc_pose: 0.996241
09/15 19:26:49 - mmengine - INFO - Epoch(train) [253][100/291]  base_lr: 3.581999e-04 lr: 3.581999e-04  eta: 0:33:50  time: 0.390469  data_time: 0.153074  memory: 12704  grad_norm: 0.064069  loss: 0.169211  loss_kpt: 0.169211  acc_pose: 0.992138
09/15 19:27:09 - mmengine - INFO - Epoch(train) [253][150/291]  base_lr: 3.551788e-04 lr: 3.551788e-04  eta: 0:33:30  time: 0.394187  data_time: 0.159403  memory: 12704  grad_norm: 0.063631  loss: 0.169521  loss_kpt: 0.169521  acc_pose: 0.978695
09/15 19:27:25 - mmengine - INFO - Epoch(train) [243][100/146]  base_lr: 7.140963e-05 lr: 7.140963e-05  eta: 0:52:21  time: 0.784428  data_time: 0.467751  memory: 16273  loss: 0.276072  loss_kpt: 0.276072  acc_pose: 0.990234
09/15 19:27:28 - mmengine - INFO - Epoch(train) [253][200/291]  base_lr: 3.521857e-04 lr: 3.521857e-04  eta: 0:33:10  time: 0.392921  data_time: 0.155451  memory: 12704  grad_norm: 0.061825  loss: 0.171448  loss_kpt: 0.171448  acc_pose: 0.968759
09/15 19:27:48 - mmengine - INFO - Epoch(train) [253][250/291]  base_lr: 3.492205e-04 lr: 3.492205e-04  eta: 0:32:50  time: 0.397849  data_time: 0.162723  memory: 12704  grad_norm: 0.062428  loss: 0.172399  loss_kpt: 0.172399  acc_pose: 0.983632
09/15 19:28:01 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:28:04 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:28:25 - mmengine - INFO - Epoch(train) [254][ 50/291]  base_lr: 3.438957e-04 lr: 3.438957e-04  eta: 0:32:14  time: 0.410863  data_time: 0.176559  memory: 12704  grad_norm: 0.061758  loss: 0.167683  loss_kpt: 0.167683  acc_pose: 0.980163
09/15 19:28:41 - mmengine - INFO - Epoch(train) [244][ 50/146]  base_lr: 6.927405e-05 lr: 6.927405e-05  eta: 0:51:06  time: 0.806149  data_time: 0.490017  memory: 16273  loss: 0.274516  loss_kpt: 0.274516  acc_pose: 0.995840
09/15 19:28:45 - mmengine - INFO - Epoch(train) [254][100/291]  base_lr: 3.410096e-04 lr: 3.410096e-04  eta: 0:31:55  time: 0.403239  data_time: 0.168213  memory: 12704  grad_norm: 0.064224  loss: 0.170346  loss_kpt: 0.170346  acc_pose: 0.971453
09/15 19:29:05 - mmengine - INFO - Epoch(train) [254][150/291]  base_lr: 3.381515e-04 lr: 3.381515e-04  eta: 0:31:35  time: 0.392635  data_time: 0.156504  memory: 12704  grad_norm: 0.062055  loss: 0.171681  loss_kpt: 0.171681  acc_pose: 0.979750
09/15 19:29:20 - mmengine - INFO - Epoch(train) [244][100/146]  base_lr: 6.817965e-05 lr: 6.817965e-05  eta: 0:50:26  time: 0.791475  data_time: 0.472456  memory: 16273  loss: 0.275857  loss_kpt: 0.275857  acc_pose: 0.996945
09/15 19:29:24 - mmengine - INFO - Epoch(train) [254][200/291]  base_lr: 3.353217e-04 lr: 3.353217e-04  eta: 0:31:15  time: 0.389558  data_time: 0.155831  memory: 12704  grad_norm: 0.064756  loss: 0.170159  loss_kpt: 0.170159  acc_pose: 0.972781
09/15 19:29:45 - mmengine - INFO - Epoch(train) [254][250/291]  base_lr: 3.325200e-04 lr: 3.325200e-04  eta: 0:30:55  time: 0.404020  data_time: 0.169461  memory: 12704  grad_norm: 0.063576  loss: 0.169367  loss_kpt: 0.169367  acc_pose: 0.992015
09/15 19:29:56 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:30:00 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:30:21 - mmengine - INFO - Epoch(train) [255][ 50/291]  base_lr: 3.274936e-04 lr: 3.274936e-04  eta: 0:30:19  time: 0.402591  data_time: 0.165317  memory: 12704  grad_norm: 0.064403  loss: 0.170754  loss_kpt: 0.170754  acc_pose: 0.989215
09/15 19:30:35 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:30:37 - mmengine - INFO - Epoch(train) [245][ 50/146]  base_lr: 6.611306e-05 lr: 6.611306e-05  eta: 0:49:11  time: 0.813379  data_time: 0.498045  memory: 16273  loss: 0.275113  loss_kpt: 0.275113  acc_pose: 0.996371
09/15 19:30:40 - mmengine - INFO - Epoch(train) [255][100/291]  base_lr: 3.247718e-04 lr: 3.247718e-04  eta: 0:30:00  time: 0.394922  data_time: 0.161244  memory: 12704  grad_norm: 0.063331  loss: 0.167478  loss_kpt: 0.167478  acc_pose: 0.989809
09/15 19:31:00 - mmengine - INFO - Epoch(train) [255][150/291]  base_lr: 3.220783e-04 lr: 3.220783e-04  eta: 0:29:40  time: 0.394968  data_time: 0.160967  memory: 12704  grad_norm: 0.064555  loss: 0.168278  loss_kpt: 0.168278  acc_pose: 0.994475
09/15 19:31:16 - mmengine - INFO - Epoch(train) [245][100/146]  base_lr: 6.505489e-05 lr: 6.505489e-05  eta: 0:48:31  time: 0.793525  data_time: 0.478844  memory: 16273  loss: 0.275154  loss_kpt: 0.275154  acc_pose: 0.996208
09/15 19:31:19 - mmengine - INFO - Epoch(train) [255][200/291]  base_lr: 3.194133e-04 lr: 3.194133e-04  eta: 0:29:20  time: 0.384302  data_time: 0.149558  memory: 12704  grad_norm: 0.063656  loss: 0.172004  loss_kpt: 0.172004  acc_pose: 0.991680
09/15 19:31:39 - mmengine - INFO - Epoch(train) [255][250/291]  base_lr: 3.167767e-04 lr: 3.167767e-04  eta: 0:29:00  time: 0.400197  data_time: 0.165810  memory: 12704  grad_norm: 0.063611  loss: 0.168369  loss_kpt: 0.168369  acc_pose: 0.991665
09/15 19:31:52 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:31:56 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:32:16 - mmengine - INFO - Epoch(train) [256][ 50/291]  base_lr: 3.120513e-04 lr: 3.120513e-04  eta: 0:28:24  time: 0.407378  data_time: 0.172643  memory: 12704  grad_norm: 0.063670  loss: 0.167781  loss_kpt: 0.167781  acc_pose: 0.986576
09/15 19:32:32 - mmengine - INFO - Epoch(train) [246][ 50/146]  base_lr: 6.305842e-05 lr: 6.305842e-05  eta: 0:47:16  time: 0.802353  data_time: 0.486161  memory: 16273  loss: 0.270566  loss_kpt: 0.270566  acc_pose: 0.994902
09/15 19:32:36 - mmengine - INFO - Epoch(train) [256][100/291]  base_lr: 3.094953e-04 lr: 3.094953e-04  eta: 0:28:05  time: 0.391171  data_time: 0.153162  memory: 12704  grad_norm: 0.063309  loss: 0.168951  loss_kpt: 0.168951  acc_pose: 0.991184
09/15 19:32:55 - mmengine - INFO - Epoch(train) [256][150/291]  base_lr: 3.069679e-04 lr: 3.069679e-04  eta: 0:27:45  time: 0.390931  data_time: 0.156029  memory: 12704  grad_norm: 0.064037  loss: 0.169746  loss_kpt: 0.169746  acc_pose: 0.978770
09/15 19:33:12 - mmengine - INFO - Epoch(train) [246][100/146]  base_lr: 6.203705e-05 lr: 6.203705e-05  eta: 0:46:36  time: 0.794095  data_time: 0.474555  memory: 16273  loss: 0.273275  loss_kpt: 0.273275  acc_pose: 0.999348
09/15 19:33:15 - mmengine - INFO - Epoch(train) [256][200/291]  base_lr: 3.044691e-04 lr: 3.044691e-04  eta: 0:27:25  time: 0.394526  data_time: 0.161266  memory: 12704  grad_norm: 0.062636  loss: 0.169682  loss_kpt: 0.169682  acc_pose: 0.986921
09/15 19:33:35 - mmengine - INFO - Epoch(train) [256][250/291]  base_lr: 3.019990e-04 lr: 3.019990e-04  eta: 0:27:05  time: 0.396633  data_time: 0.160048  memory: 12704  grad_norm: 0.066090  loss: 0.169886  loss_kpt: 0.169886  acc_pose: 0.992438
09/15 19:33:47 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:33:51 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:34:11 - mmengine - INFO - Epoch(train) [257][ 50/291]  base_lr: 2.975773e-04 lr: 2.975773e-04  eta: 0:26:29  time: 0.404130  data_time: 0.169913  memory: 12704  grad_norm: 0.067257  loss: 0.166508  loss_kpt: 0.166508  acc_pose: 0.996034
09/15 19:34:27 - mmengine - INFO - Epoch(train) [247][ 50/146]  base_lr: 6.011178e-05 lr: 6.011178e-05  eta: 0:45:21  time: 0.815475  data_time: 0.499073  memory: 16273  loss: 0.272221  loss_kpt: 0.272221  acc_pose: 0.991453
09/15 19:34:31 - mmengine - INFO - Epoch(train) [257][100/291]  base_lr: 2.951884e-04 lr: 2.951884e-04  eta: 0:26:10  time: 0.392920  data_time: 0.158025  memory: 12704  grad_norm: 0.068138  loss: 0.170093  loss_kpt: 0.170093  acc_pose: 0.983563
09/15 19:34:51 - mmengine - INFO - Epoch(train) [257][150/291]  base_lr: 2.928284e-04 lr: 2.928284e-04  eta: 0:25:50  time: 0.403680  data_time: 0.169099  memory: 12704  grad_norm: 0.062804  loss: 0.169619  loss_kpt: 0.169619  acc_pose: 0.992940
09/15 19:34:54 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:35:07 - mmengine - INFO - Epoch(train) [247][100/146]  base_lr: 5.912777e-05 lr: 5.912777e-05  eta: 0:44:41  time: 0.790323  data_time: 0.473590  memory: 16273  loss: 0.272253  loss_kpt: 0.272253  acc_pose: 0.999024
09/15 19:35:10 - mmengine - INFO - Epoch(train) [257][200/291]  base_lr: 2.904972e-04 lr: 2.904972e-04  eta: 0:25:30  time: 0.386179  data_time: 0.152318  memory: 12704  grad_norm: 0.065524  loss: 0.170221  loss_kpt: 0.170221  acc_pose: 0.980299
09/15 19:35:30 - mmengine - INFO - Epoch(train) [257][250/291]  base_lr: 2.881950e-04 lr: 2.881950e-04  eta: 0:25:10  time: 0.394760  data_time: 0.160816  memory: 12704  grad_norm: 0.065091  loss: 0.166326  loss_kpt: 0.166326  acc_pose: 0.988891
09/15 19:35:42 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:35:46 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:36:06 - mmengine - INFO - Epoch(train) [258][ 50/291]  base_lr: 2.840793e-04 lr: 2.840793e-04  eta: 0:24:35  time: 0.398076  data_time: 0.161773  memory: 12704  grad_norm: 0.067787  loss: 0.166442  loss_kpt: 0.166442  acc_pose: 0.981309
09/15 19:36:22 - mmengine - INFO - Epoch(train) [248][ 50/146]  base_lr: 5.727473e-05 lr: 5.727473e-05  eta: 0:43:26  time: 0.803826  data_time: 0.488835  memory: 16273  loss: 0.271347  loss_kpt: 0.271347  acc_pose: 0.994831
09/15 19:36:26 - mmengine - INFO - Epoch(train) [258][100/291]  base_lr: 2.818589e-04 lr: 2.818589e-04  eta: 0:24:15  time: 0.395209  data_time: 0.161129  memory: 12704  grad_norm: 0.064740  loss: 0.165590  loss_kpt: 0.165590  acc_pose: 0.991217
09/15 19:36:46 - mmengine - INFO - Epoch(train) [258][150/291]  base_lr: 2.796675e-04 lr: 2.796675e-04  eta: 0:23:55  time: 0.398341  data_time: 0.164159  memory: 12704  grad_norm: 0.065322  loss: 0.167986  loss_kpt: 0.167986  acc_pose: 0.993086
09/15 19:37:01 - mmengine - INFO - Epoch(train) [248][100/146]  base_lr: 5.632862e-05 lr: 5.632862e-05  eta: 0:42:46  time: 0.781824  data_time: 0.466399  memory: 16273  loss: 0.271212  loss_kpt: 0.271212  acc_pose: 0.997338
09/15 19:37:05 - mmengine - INFO - Epoch(train) [258][200/291]  base_lr: 2.775052e-04 lr: 2.775052e-04  eta: 0:23:35  time: 0.392913  data_time: 0.158919  memory: 12704  grad_norm: 0.065701  loss: 0.168223  loss_kpt: 0.168223  acc_pose: 0.984162
09/15 19:37:11 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:37:25 - mmengine - INFO - Epoch(train) [258][250/291]  base_lr: 2.753721e-04 lr: 2.753721e-04  eta: 0:23:15  time: 0.393733  data_time: 0.158844  memory: 12704  grad_norm: 0.066896  loss: 0.169516  loss_kpt: 0.169516  acc_pose: 0.984832
09/15 19:37:37 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:37:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:38:02 - mmengine - INFO - Epoch(train) [259][ 50/291]  base_lr: 2.715646e-04 lr: 2.715646e-04  eta: 0:22:40  time: 0.412901  data_time: 0.178333  memory: 12704  grad_norm: 0.065801  loss: 0.165727  loss_kpt: 0.165727  acc_pose: 0.993878
09/15 19:38:17 - mmengine - INFO - Epoch(train) [249][ 50/146]  base_lr: 5.454882e-05 lr: 5.454882e-05  eta: 0:41:31  time: 0.801029  data_time: 0.485975  memory: 16273  loss: 0.270986  loss_kpt: 0.270986  acc_pose: 0.996064
09/15 19:38:22 - mmengine - INFO - Epoch(train) [259][100/291]  base_lr: 2.695139e-04 lr: 2.695139e-04  eta: 0:22:20  time: 0.398609  data_time: 0.162029  memory: 12704  grad_norm: 0.067639  loss: 0.165351  loss_kpt: 0.165351  acc_pose: 0.993767
09/15 19:38:41 - mmengine - INFO - Epoch(train) [259][150/291]  base_lr: 2.674923e-04 lr: 2.674923e-04  eta: 0:22:00  time: 0.394471  data_time: 0.161101  memory: 12704  grad_norm: 0.064892  loss: 0.164896  loss_kpt: 0.164896  acc_pose: 0.986909
09/15 19:38:56 - mmengine - INFO - Epoch(train) [249][100/146]  base_lr: 5.364111e-05 lr: 5.364111e-05  eta: 0:40:51  time: 0.788877  data_time: 0.473788  memory: 16273  loss: 0.267688  loss_kpt: 0.267688  acc_pose: 0.996462
09/15 19:39:01 - mmengine - INFO - Epoch(train) [259][200/291]  base_lr: 2.655001e-04 lr: 2.655001e-04  eta: 0:21:40  time: 0.395941  data_time: 0.162189  memory: 12704  grad_norm: 0.069060  loss: 0.167700  loss_kpt: 0.167700  acc_pose: 0.980534
09/15 19:39:20 - mmengine - INFO - Epoch(train) [259][250/291]  base_lr: 2.635372e-04 lr: 2.635372e-04  eta: 0:21:21  time: 0.384214  data_time: 0.150496  memory: 12704  grad_norm: 0.066504  loss: 0.169014  loss_kpt: 0.169014  acc_pose: 0.980819
09/15 19:39:32 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:39:36 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:39:56 - mmengine - INFO - Epoch(train) [260][ 50/291]  base_lr: 2.600401e-04 lr: 2.600401e-04  eta: 0:20:45  time: 0.399693  data_time: 0.165231  memory: 12704  grad_norm: 0.067158  loss: 0.167575  loss_kpt: 0.167575  acc_pose: 0.990195
09/15 19:40:12 - mmengine - INFO - Epoch(train) [250][ 50/146]  base_lr: 5.193552e-05 lr: 5.193552e-05  eta: 0:39:36  time: 0.802230  data_time: 0.486267  memory: 16273  loss: 0.274307  loss_kpt: 0.274307  acc_pose: 0.994986
09/15 19:40:16 - mmengine - INFO - Epoch(train) [260][100/291]  base_lr: 2.581601e-04 lr: 2.581601e-04  eta: 0:20:25  time: 0.394654  data_time: 0.160142  memory: 12704  grad_norm: 0.066716  loss: 0.164164  loss_kpt: 0.164164  acc_pose: 0.969242
09/15 19:40:36 - mmengine - INFO - Epoch(train) [260][150/291]  base_lr: 2.563095e-04 lr: 2.563095e-04  eta: 0:20:05  time: 0.399051  data_time: 0.165331  memory: 12704  grad_norm: 0.066612  loss: 0.165566  loss_kpt: 0.165566  acc_pose: 0.984658
09/15 19:40:51 - mmengine - INFO - Epoch(train) [250][100/146]  base_lr: 5.106670e-05 lr: 5.106670e-05  eta: 0:38:56  time: 0.780546  data_time: 0.464981  memory: 16273  loss: 0.265739  loss_kpt: 0.265739  acc_pose: 0.996991
09/15 19:40:56 - mmengine - INFO - Epoch(train) [260][200/291]  base_lr: 2.544884e-04 lr: 2.544884e-04  eta: 0:19:45  time: 0.388637  data_time: 0.153881  memory: 12704  grad_norm: 0.067087  loss: 0.168121  loss_kpt: 0.168121  acc_pose: 0.991493
09/15 19:41:15 - mmengine - INFO - Epoch(train) [260][250/291]  base_lr: 2.526969e-04 lr: 2.526969e-04  eta: 0:19:26  time: 0.386474  data_time: 0.151876  memory: 12704  grad_norm: 0.069367  loss: 0.165134  loss_kpt: 0.165134  acc_pose: 0.978740
09/15 19:41:27 - mmengine - INFO - Exp name: pose2_20230915_114038
09/15 19:41:27 - mmengine - INFO - Saving checkpoint at 250 epochs
09/15 19:41:31 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:41:31 - mmengine - INFO - Saving checkpoint at 260 epochs
qt.qpa.xcb: could not connect to display 
qt.qpa.plugin: Could not load the Qt platform plugin "xcb" in "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/cv2/qt/plugins" even though it was found.
This application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.

Available platform plugins are: xcb.

09/15 19:41:53 - mmengine - INFO - Epoch(train) [261][ 50/291]  base_lr: 2.495120e-04 lr: 2.495120e-04  eta: 0:18:50  time: 0.405777  data_time: 0.167271  memory: 12704  grad_norm: 0.067022  loss: 0.168083  loss_kpt: 0.168083  acc_pose: 0.981894
09/15 19:42:13 - mmengine - INFO - Epoch(train) [261][100/291]  base_lr: 2.478037e-04 lr: 2.478037e-04  eta: 0:18:30  time: 0.407080  data_time: 0.172789  memory: 12704  grad_norm: 0.065561  loss: 0.162076  loss_kpt: 0.162076  acc_pose: 0.985616
09/15 19:42:33 - mmengine - INFO - Epoch(train) [261][150/291]  base_lr: 2.461251e-04 lr: 2.461251e-04  eta: 0:18:10  time: 0.391913  data_time: 0.156819  memory: 12704  grad_norm: 0.068070  loss: 0.164872  loss_kpt: 0.164872  acc_pose: 0.970137
09/15 19:42:53 - mmengine - INFO - Epoch(train) [261][200/291]  base_lr: 2.444762e-04 lr: 2.444762e-04  eta: 0:17:50  time: 0.393785  data_time: 0.160100  memory: 12704  grad_norm: 0.068009  loss: 0.166760  loss_kpt: 0.166760  acc_pose: 0.975426
09/15 19:43:12 - mmengine - INFO - Epoch(train) [261][250/291]  base_lr: 2.428568e-04 lr: 2.428568e-04  eta: 0:17:31  time: 0.386691  data_time: 0.151571  memory: 12704  grad_norm: 0.069297  loss: 0.169523  loss_kpt: 0.169523  acc_pose: 0.969390
09/15 19:43:28 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:43:48 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:43:48 - mmengine - INFO - Epoch(train) [262][ 50/291]  base_lr: 2.399859e-04 lr: 2.399859e-04  eta: 0:16:55  time: 0.408805  data_time: 0.174497  memory: 12704  grad_norm: 0.068179  loss: 0.165814  loss_kpt: 0.165814  acc_pose: 0.985910
09/15 19:44:08 - mmengine - INFO - Epoch(train) [262][100/291]  base_lr: 2.384504e-04 lr: 2.384504e-04  eta: 0:16:35  time: 0.391404  data_time: 0.156624  memory: 12704  grad_norm: 0.066998  loss: 0.165106  loss_kpt: 0.165106  acc_pose: 0.973706
09/15 19:44:28 - mmengine - INFO - Epoch(train) [262][150/291]  base_lr: 2.369446e-04 lr: 2.369446e-04  eta: 0:16:15  time: 0.391626  data_time: 0.156765  memory: 12704  grad_norm: 0.067422  loss: 0.166461  loss_kpt: 0.166461  acc_pose: 0.989301
09/15 19:44:47 - mmengine - INFO - Epoch(train) [262][200/291]  base_lr: 2.354687e-04 lr: 2.354687e-04  eta: 0:15:55  time: 0.390651  data_time: 0.153143  memory: 12704  grad_norm: 0.066327  loss: 0.166419  loss_kpt: 0.166419  acc_pose: 0.966467
09/15 19:45:07 - mmengine - INFO - Epoch(train) [262][250/291]  base_lr: 2.340225e-04 lr: 2.340225e-04  eta: 0:15:36  time: 0.389554  data_time: 0.154807  memory: 12704  grad_norm: 0.069541  loss: 0.163573  loss_kpt: 0.163573  acc_pose: 0.975527
09/15 19:45:23 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:45:43 - mmengine - INFO - Epoch(train) [263][ 50/291]  base_lr: 2.314671e-04 lr: 2.314671e-04  eta: 0:15:00  time: 0.407086  data_time: 0.172623  memory: 12704  grad_norm: 0.071662  loss: 0.166831  loss_kpt: 0.166831  acc_pose: 0.975381
09/15 19:46:03 - mmengine - INFO - Epoch(train) [263][100/291]  base_lr: 2.301051e-04 lr: 2.301051e-04  eta: 0:14:40  time: 0.393058  data_time: 0.155182  memory: 12704  grad_norm: 0.068426  loss: 0.165769  loss_kpt: 0.165769  acc_pose: 0.985900
09/15 19:46:23 - mmengine - INFO - Epoch(train) [263][150/291]  base_lr: 2.287730e-04 lr: 2.287730e-04  eta: 0:14:20  time: 0.403769  data_time: 0.168999  memory: 12704  grad_norm: 0.068589  loss: 0.163499  loss_kpt: 0.163499  acc_pose: 0.993263
09/15 19:46:43 - mmengine - INFO - Epoch(train) [263][200/291]  base_lr: 2.274708e-04 lr: 2.274708e-04  eta: 0:14:00  time: 0.398475  data_time: 0.163221  memory: 12704  grad_norm: 0.070138  loss: 0.164356  loss_kpt: 0.164356  acc_pose: 0.984579
09/15 19:47:02 - mmengine - INFO - Epoch(train) [263][250/291]  base_lr: 2.261986e-04 lr: 2.261986e-04  eta: 0:13:41  time: 0.384759  data_time: 0.150619  memory: 12704  grad_norm: 0.067688  loss: 0.163723  loss_kpt: 0.163723  acc_pose: 0.990871
09/15 19:47:18 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:47:38 - mmengine - INFO - Epoch(train) [264][ 50/291]  base_lr: 2.239600e-04 lr: 2.239600e-04  eta: 0:13:05  time: 0.406936  data_time: 0.171982  memory: 12704  grad_norm: 0.070009  loss: 0.166340  loss_kpt: 0.166340  acc_pose: 0.990230
09/15 19:47:58 - mmengine - INFO - Epoch(train) [264][100/291]  base_lr: 2.227724e-04 lr: 2.227724e-04  eta: 0:12:45  time: 0.385299  data_time: 0.150420  memory: 12704  grad_norm: 0.069221  loss: 0.165466  loss_kpt: 0.165466  acc_pose: 0.974749
09/15 19:48:17 - mmengine - INFO - Epoch(train) [264][150/291]  base_lr: 2.216147e-04 lr: 2.216147e-04  eta: 0:12:25  time: 0.391360  data_time: 0.156913  memory: 12704  grad_norm: 0.068703  loss: 0.166208  loss_kpt: 0.166208  acc_pose: 0.980644
09/15 19:48:37 - mmengine - INFO - Epoch(train) [264][200/291]  base_lr: 2.204870e-04 lr: 2.204870e-04  eta: 0:12:05  time: 0.398845  data_time: 0.164263  memory: 12704  grad_norm: 0.069796  loss: 0.167092  loss_kpt: 0.167092  acc_pose: 0.992085
09/15 19:48:56 - mmengine - INFO - Epoch(train) [264][250/291]  base_lr: 2.193894e-04 lr: 2.193894e-04  eta: 0:11:46  time: 0.386412  data_time: 0.152076  memory: 12704  grad_norm: 0.067339  loss: 0.160935  loss_kpt: 0.160935  acc_pose: 0.983098
09/15 19:49:12 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:49:33 - mmengine - INFO - Epoch(train) [265][ 50/291]  base_lr: 2.174690e-04 lr: 2.174690e-04  eta: 0:11:10  time: 0.408862  data_time: 0.171981  memory: 12704  grad_norm: 0.068601  loss: 0.160911  loss_kpt: 0.160911  acc_pose: 0.982750
09/15 19:49:53 - mmengine - INFO - Epoch(train) [265][100/291]  base_lr: 2.164562e-04 lr: 2.164562e-04  eta: 0:10:50  time: 0.397222  data_time: 0.162594  memory: 12704  grad_norm: 0.069371  loss: 0.163312  loss_kpt: 0.163312  acc_pose: 0.995087
09/15 19:50:13 - mmengine - INFO - Epoch(train) [265][150/291]  base_lr: 2.154735e-04 lr: 2.154735e-04  eta: 0:10:30  time: 0.398257  data_time: 0.162270  memory: 12704  grad_norm: 0.068683  loss: 0.165229  loss_kpt: 0.165229  acc_pose: 0.977280
09/15 19:50:23 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:50:32 - mmengine - INFO - Epoch(train) [265][200/291]  base_lr: 2.145210e-04 lr: 2.145210e-04  eta: 0:10:10  time: 0.386920  data_time: 0.151925  memory: 12704  grad_norm: 0.069074  loss: 0.165047  loss_kpt: 0.165047  acc_pose: 0.994566
09/15 19:50:51 - mmengine - INFO - Epoch(train) [265][250/291]  base_lr: 2.135986e-04 lr: 2.135986e-04  eta: 0:09:51  time: 0.387024  data_time: 0.152071  memory: 12704  grad_norm: 0.069301  loss: 0.167444  loss_kpt: 0.167444  acc_pose: 0.993281
09/15 19:51:07 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:51:27 - mmengine - INFO - Epoch(train) [266][ 50/291]  base_lr: 2.119973e-04 lr: 2.119973e-04  eta: 0:09:15  time: 0.403147  data_time: 0.169113  memory: 12704  grad_norm: 0.069159  loss: 0.161320  loss_kpt: 0.161320  acc_pose: 0.991590
09/15 19:51:47 - mmengine - INFO - Epoch(train) [266][100/291]  base_lr: 2.111600e-04 lr: 2.111600e-04  eta: 0:08:55  time: 0.396472  data_time: 0.158509  memory: 12704  grad_norm: 0.069804  loss: 0.165583  loss_kpt: 0.165583  acc_pose: 0.977687
09/15 19:52:07 - mmengine - INFO - Epoch(train) [266][150/291]  base_lr: 2.103529e-04 lr: 2.103529e-04  eta: 0:08:35  time: 0.401388  data_time: 0.166256  memory: 12704  grad_norm: 0.070251  loss: 0.162848  loss_kpt: 0.162848  acc_pose: 0.994427
09/15 19:52:27 - mmengine - INFO - Epoch(train) [266][200/291]  base_lr: 2.095760e-04 lr: 2.095760e-04  eta: 0:08:15  time: 0.393392  data_time: 0.159450  memory: 12704  grad_norm: 0.070507  loss: 0.166379  loss_kpt: 0.166379  acc_pose: 0.981954
09/15 19:52:46 - mmengine - INFO - Epoch(train) [266][250/291]  base_lr: 2.088293e-04 lr: 2.088293e-04  eta: 0:07:56  time: 0.391601  data_time: 0.154725  memory: 12704  grad_norm: 0.070112  loss: 0.162637  loss_kpt: 0.162637  acc_pose: 0.981401
09/15 19:53:02 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:53:22 - mmengine - INFO - Epoch(train) [267][ 50/291]  base_lr: 2.075480e-04 lr: 2.075480e-04  eta: 0:07:20  time: 0.399782  data_time: 0.165670  memory: 12704  grad_norm: 0.072489  loss: 0.164230  loss_kpt: 0.164230  acc_pose: 0.983940
09/15 19:53:42 - mmengine - INFO - Epoch(train) [267][100/291]  base_lr: 2.068866e-04 lr: 2.068866e-04  eta: 0:07:00  time: 0.403664  data_time: 0.168209  memory: 12704  grad_norm: 0.069973  loss: 0.164407  loss_kpt: 0.164407  acc_pose: 0.987323
09/15 19:54:02 - mmengine - INFO - Epoch(train) [267][150/291]  base_lr: 2.062555e-04 lr: 2.062555e-04  eta: 0:06:40  time: 0.394231  data_time: 0.157679  memory: 12704  grad_norm: 0.069473  loss: 0.162336  loss_kpt: 0.162336  acc_pose: 0.996575
09/15 19:54:22 - mmengine - INFO - Epoch(train) [267][200/291]  base_lr: 2.056547e-04 lr: 2.056547e-04  eta: 0:06:20  time: 0.391200  data_time: 0.156223  memory: 12704  grad_norm: 0.072188  loss: 0.166360  loss_kpt: 0.166360  acc_pose: 0.997995
09/15 19:54:41 - mmengine - INFO - Epoch(train) [267][250/291]  base_lr: 2.050841e-04 lr: 2.050841e-04  eta: 0:06:01  time: 0.389313  data_time: 0.155035  memory: 12704  grad_norm: 0.069664  loss: 0.162653  loss_kpt: 0.162653  acc_pose: 0.992878
09/15 19:54:57 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:55:17 - mmengine - INFO - Epoch(train) [268][ 50/291]  base_lr: 2.041235e-04 lr: 2.041235e-04  eta: 0:05:25  time: 0.402018  data_time: 0.168672  memory: 12704  grad_norm: 0.074078  loss: 0.165780  loss_kpt: 0.165780  acc_pose: 0.969819
09/15 19:55:37 - mmengine - INFO - Epoch(train) [268][100/291]  base_lr: 2.036384e-04 lr: 2.036384e-04  eta: 0:05:05  time: 0.394558  data_time: 0.156951  memory: 12704  grad_norm: 0.070836  loss: 0.163108  loss_kpt: 0.163108  acc_pose: 0.968754
09/15 19:55:57 - mmengine - INFO - Epoch(train) [268][150/291]  base_lr: 2.031837e-04 lr: 2.031837e-04  eta: 0:04:45  time: 0.398032  data_time: 0.162942  memory: 12704  grad_norm: 0.071411  loss: 0.162754  loss_kpt: 0.162754  acc_pose: 0.991622
09/15 19:56:16 - mmengine - INFO - Epoch(train) [268][200/291]  base_lr: 2.027592e-04 lr: 2.027592e-04  eta: 0:04:25  time: 0.385211  data_time: 0.151298  memory: 12704  grad_norm: 0.071033  loss: 0.164359  loss_kpt: 0.164359  acc_pose: 0.993223
09/15 19:56:36 - mmengine - INFO - Epoch(train) [268][250/291]  base_lr: 2.023651e-04 lr: 2.023651e-04  eta: 0:04:06  time: 0.394864  data_time: 0.159981  memory: 12704  grad_norm: 0.070859  loss: 0.164904  loss_kpt: 0.164904  acc_pose: 0.992176
09/15 19:56:51 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:56:57 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:57:12 - mmengine - INFO - Epoch(train) [269][ 50/291]  base_lr: 2.017257e-04 lr: 2.017257e-04  eta: 0:03:30  time: 0.411944  data_time: 0.177419  memory: 12704  grad_norm: 0.071476  loss: 0.164124  loss_kpt: 0.164124  acc_pose: 0.986875
09/15 19:57:31 - mmengine - INFO - Epoch(train) [269][100/291]  base_lr: 2.014171e-04 lr: 2.014171e-04  eta: 0:03:10  time: 0.381814  data_time: 0.148192  memory: 12704  grad_norm: 0.072203  loss: 0.164699  loss_kpt: 0.164699  acc_pose: 0.972457
09/15 19:57:51 - mmengine - INFO - Epoch(train) [269][150/291]  base_lr: 2.011389e-04 lr: 2.011389e-04  eta: 0:02:50  time: 0.390328  data_time: 0.155847  memory: 12704  grad_norm: 0.072121  loss: 0.164535  loss_kpt: 0.164535  acc_pose: 0.973476
09/15 19:58:10 - mmengine - INFO - Epoch(train) [269][200/291]  base_lr: 2.008911e-04 lr: 2.008911e-04  eta: 0:02:30  time: 0.393553  data_time: 0.158917  memory: 12704  grad_norm: 0.073706  loss: 0.161728  loss_kpt: 0.161728  acc_pose: 0.985834
09/15 19:58:30 - mmengine - INFO - Epoch(train) [269][250/291]  base_lr: 2.006736e-04 lr: 2.006736e-04  eta: 0:02:11  time: 0.392916  data_time: 0.158357  memory: 12704  grad_norm: 0.070500  loss: 0.164640  loss_kpt: 0.164640  acc_pose: 0.988756
09/15 19:58:46 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 19:59:06 - mmengine - INFO - Epoch(train) [270][ 50/291]  base_lr: 2.003558e-04 lr: 2.003558e-04  eta: 0:01:35  time: 0.399276  data_time: 0.164557  memory: 12704  grad_norm: 0.071410  loss: 0.160241  loss_kpt: 0.160241  acc_pose: 0.990890
09/15 19:59:26 - mmengine - INFO - Epoch(train) [270][100/291]  base_lr: 2.002240e-04 lr: 2.002240e-04  eta: 0:01:15  time: 0.403781  data_time: 0.167966  memory: 12704  grad_norm: 0.071851  loss: 0.161722  loss_kpt: 0.161722  acc_pose: 0.992084
09/15 19:59:46 - mmengine - INFO - Epoch(train) [270][150/291]  base_lr: 2.001225e-04 lr: 2.001225e-04  eta: 0:00:55  time: 0.398558  data_time: 0.161661  memory: 12704  grad_norm: 0.072176  loss: 0.164163  loss_kpt: 0.164163  acc_pose: 0.981717
09/15 20:00:05 - mmengine - INFO - Epoch(train) [270][200/291]  base_lr: 2.000514e-04 lr: 2.000514e-04  eta: 0:00:35  time: 0.386238  data_time: 0.151965  memory: 12704  grad_norm: 0.071842  loss: 0.163313  loss_kpt: 0.163313  acc_pose: 0.994861
09/15 20:00:24 - mmengine - INFO - Epoch(train) [270][250/291]  base_lr: 2.000107e-04 lr: 2.000107e-04  eta: 0:00:16  time: 0.384947  data_time: 0.151009  memory: 12704  grad_norm: 0.073045  loss: 0.163849  loss_kpt: 0.163849  acc_pose: 0.993280
09/15 20:00:41 - mmengine - INFO - Exp name: pose3_20230915_112106
09/15 20:00:41 - mmengine - INFO - Saving checkpoint at 270 epochs
09/16 11:25:33 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/16 11:25:33 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        4.0,
        4.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=240,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='coco/AP',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 270
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='/home/txy/code/CastPose/work_dirs/2/epoch_410.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        decoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        final_layer_kernel_size=7,
        gau_cfg=dict(
            act_fn='PReLU',
            drop_path=0.0,
            dropout_rate=0.0,
            expansion_factor=2,
            hidden_dims=256,
            pos_enc=False,
            s=128,
            use_rel_bias=False),
        in_channels=1024,
        in_featuremap_size=(
            9,
            12,
        ),
        input_size=(
            288,
            384,
        ),
        loss=dict(
            beta=50.0,
            label_softmax=True,
            type='KLDiscretLoss',
            use_target_weight=True),
        out_channels=53,
        simcc_split_ratio=2.0,
        type='RTMCCHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=135,
        begin=135,
        by_epoch=True,
        convert_to_iter_based=True,
        end=270,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = True
stage2_num_epochs = 30
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=270, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=65,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        4.0,
                        4.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=65,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                4.0,
                4.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/16 11:25:35 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/16 11:25:35 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/16 11:25:38 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/16 11:25:38 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/16 11:25:38 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/16 11:25:38 - mmengine - WARNING - The prefix is not set in metric class NME.
09/16 11:25:38 - mmengine - INFO - load backbone. in model from: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_410.pth
09/16 11:25:39 - mmengine - INFO - Auto resumed from the latest checkpoint /home/txy/code/CastPose/work_dirs/2/epoch_250.pth.
Loads checkpoint by local backend from path: /home/txy/code/CastPose/work_dirs/2/epoch_250.pth
09/16 11:25:39 - mmengine - INFO - Load checkpoint from /home/txy/code/CastPose/work_dirs/2/epoch_250.pth
09/16 11:25:39 - mmengine - INFO - resumed epoch: 250, iter: 36500
09/16 11:25:39 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/16 11:25:39 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/16 11:25:39 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
09/16 11:25:39 - mmengine - INFO - Switch pipeline now!
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
09/16 11:26:20 - mmengine - INFO - Epoch(train) [251][ 50/146]  base_lr: 4.943625e-05 lr: 4.943625e-05  eta: 0:38:48  time: 0.811198  data_time: 0.464576  memory: 16274  loss: 0.268125  loss_kpt: 0.268125  acc_pose: 0.995199
09/16 11:26:59 - mmengine - INFO - Epoch(train) [251][100/146]  base_lr: 4.860679e-05 lr: 4.860679e-05  eta: 0:37:42  time: 0.793702  data_time: 0.477378  memory: 16274  loss: 0.268345  loss_kpt: 0.268345  acc_pose: 0.998283
09/16 11:27:34 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:28:15 - mmengine - INFO - Epoch(train) [252][ 50/146]  base_lr: 4.705235e-05 lr: 4.705235e-05  eta: 0:36:13  time: 0.823804  data_time: 0.502723  memory: 16274  loss: 0.269060  loss_kpt: 0.269060  acc_pose: 0.999214
09/16 11:28:54 - mmengine - INFO - Epoch(train) [252][100/146]  base_lr: 4.626270e-05 lr: 4.626270e-05  eta: 0:35:21  time: 0.775871  data_time: 0.457515  memory: 16274  loss: 0.269206  loss_kpt: 0.269206  acc_pose: 0.998645
09/16 11:29:28 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:30:09 - mmengine - INFO - Epoch(train) [253][ 50/146]  base_lr: 4.478512e-05 lr: 4.478512e-05  eta: 0:33:54  time: 0.811114  data_time: 0.491235  memory: 16274  loss: 0.266068  loss_kpt: 0.266068  acc_pose: 0.991873
09/16 11:30:48 - mmengine - INFO - Epoch(train) [253][100/146]  base_lr: 4.403571e-05 lr: 4.403571e-05  eta: 0:33:09  time: 0.772514  data_time: 0.452640  memory: 16274  loss: 0.268563  loss_kpt: 0.268563  acc_pose: 0.997846
09/16 11:31:23 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:32:03 - mmengine - INFO - Epoch(train) [254][ 50/146]  base_lr: 4.263579e-05 lr: 4.263579e-05  eta: 0:31:51  time: 0.803100  data_time: 0.485006  memory: 16274  loss: 0.266701  loss_kpt: 0.266701  acc_pose: 0.995566
09/16 11:32:12 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:32:42 - mmengine - INFO - Epoch(train) [254][100/146]  base_lr: 4.192702e-05 lr: 4.192702e-05  eta: 0:31:10  time: 0.776362  data_time: 0.455100  memory: 16274  loss: 0.269046  loss_kpt: 0.269046  acc_pose: 0.996900
09/16 11:33:17 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:33:58 - mmengine - INFO - Epoch(train) [255][ 50/146]  base_lr: 4.060551e-05 lr: 4.060551e-05  eta: 0:29:58  time: 0.811603  data_time: 0.493990  memory: 16274  loss: 0.265010  loss_kpt: 0.265010  acc_pose: 0.995627
09/16 11:34:36 - mmengine - INFO - Epoch(train) [255][100/146]  base_lr: 3.993778e-05 lr: 3.993778e-05  eta: 0:29:16  time: 0.771622  data_time: 0.451693  memory: 16274  loss: 0.270969  loss_kpt: 0.270969  acc_pose: 0.997946
09/16 11:35:13 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:35:53 - mmengine - INFO - Epoch(train) [256][ 50/146]  base_lr: 3.869540e-05 lr: 3.869540e-05  eta: 0:28:04  time: 0.807762  data_time: 0.487388  memory: 16274  loss: 0.266936  loss_kpt: 0.266936  acc_pose: 0.999663
09/16 11:36:32 - mmengine - INFO - Epoch(train) [256][100/146]  base_lr: 3.806906e-05 lr: 3.806906e-05  eta: 0:27:24  time: 0.783224  data_time: 0.463961  memory: 16274  loss: 0.265875  loss_kpt: 0.265875  acc_pose: 0.996597
09/16 11:37:08 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:37:48 - mmengine - INFO - Epoch(train) [257][ 50/146]  base_lr: 3.690648e-05 lr: 3.690648e-05  eta: 0:26:09  time: 0.802273  data_time: 0.484345  memory: 16274  loss: 0.265476  loss_kpt: 0.265476  acc_pose: 0.991479
09/16 11:38:27 - mmengine - INFO - Epoch(train) [257][100/146]  base_lr: 3.632187e-05 lr: 3.632187e-05  eta: 0:25:29  time: 0.781977  data_time: 0.460630  memory: 16274  loss: 0.267708  loss_kpt: 0.267708  acc_pose: 0.995879
09/16 11:39:03 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:39:43 - mmengine - INFO - Epoch(train) [258][ 50/146]  base_lr: 3.523972e-05 lr: 3.523972e-05  eta: 0:24:13  time: 0.790762  data_time: 0.468421  memory: 16274  loss: 0.263082  loss_kpt: 0.263082  acc_pose: 0.997366
09/16 11:40:22 - mmengine - INFO - Epoch(train) [258][100/146]  base_lr: 3.469716e-05 lr: 3.469716e-05  eta: 0:23:35  time: 0.794804  data_time: 0.476718  memory: 16274  loss: 0.266293  loss_kpt: 0.266293  acc_pose: 0.997454
09/16 11:40:58 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:41:38 - mmengine - INFO - Epoch(train) [259][ 50/146]  base_lr: 3.369603e-05 lr: 3.369603e-05  eta: 0:22:20  time: 0.812895  data_time: 0.494256  memory: 16274  loss: 0.263263  loss_kpt: 0.263263  acc_pose: 0.997855
09/16 11:42:19 - mmengine - INFO - Epoch(train) [259][100/146]  base_lr: 3.319581e-05 lr: 3.319581e-05  eta: 0:21:42  time: 0.809496  data_time: 0.490960  memory: 16274  loss: 0.264036  loss_kpt: 0.264036  acc_pose: 0.996701
09/16 11:42:54 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:43:34 - mmengine - INFO - Epoch(train) [260][ 50/146]  base_lr: 3.227624e-05 lr: 3.227624e-05  eta: 0:20:26  time: 0.808620  data_time: 0.490289  memory: 16274  loss: 0.264966  loss_kpt: 0.264966  acc_pose: 0.996288
09/16 11:44:13 - mmengine - INFO - Epoch(train) [260][100/146]  base_lr: 3.181864e-05 lr: 3.181864e-05  eta: 0:19:46  time: 0.777677  data_time: 0.459606  memory: 16274  loss: 0.266249  loss_kpt: 0.266249  acc_pose: 0.998953
09/16 11:44:49 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:44:49 - mmengine - INFO - Saving checkpoint at 260 epochs
09/16 11:45:23 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:45:30 - mmengine - INFO - Epoch(train) [261][ 50/146]  base_lr: 3.098112e-05 lr: 3.098112e-05  eta: 0:18:31  time: 0.805402  data_time: 0.487699  memory: 16274  loss: 0.263403  loss_kpt: 0.263403  acc_pose: 0.995842
09/16 11:46:10 - mmengine - INFO - Epoch(train) [261][100/146]  base_lr: 3.056638e-05 lr: 3.056638e-05  eta: 0:17:51  time: 0.784108  data_time: 0.466175  memory: 16274  loss: 0.262834  loss_kpt: 0.262834  acc_pose: 0.994857
09/16 11:46:45 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:47:26 - mmengine - INFO - Epoch(train) [262][ 50/146]  base_lr: 2.981138e-05 lr: 2.981138e-05  eta: 0:16:36  time: 0.818839  data_time: 0.500435  memory: 16274  loss: 0.262833  loss_kpt: 0.262833  acc_pose: 0.989872
09/16 11:48:04 - mmengine - INFO - Epoch(train) [262][100/146]  base_lr: 2.943971e-05 lr: 2.943971e-05  eta: 0:15:56  time: 0.774127  data_time: 0.452962  memory: 16274  loss: 0.267371  loss_kpt: 0.267371  acc_pose: 0.994714
09/16 11:48:40 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:49:20 - mmengine - INFO - Epoch(train) [263][ 50/146]  base_lr: 2.876763e-05 lr: 2.876763e-05  eta: 0:14:40  time: 0.800822  data_time: 0.480349  memory: 16274  loss: 0.266954  loss_kpt: 0.266954  acc_pose: 0.992100
09/16 11:49:59 - mmengine - INFO - Epoch(train) [263][100/146]  base_lr: 2.843926e-05 lr: 2.843926e-05  eta: 0:14:00  time: 0.781224  data_time: 0.460206  memory: 16274  loss: 0.262878  loss_kpt: 0.262878  acc_pose: 0.998127
09/16 11:50:34 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:51:14 - mmengine - INFO - Epoch(train) [264][ 50/146]  base_lr: 2.785046e-05 lr: 2.785046e-05  eta: 0:12:45  time: 0.794263  data_time: 0.475760  memory: 16274  loss: 0.264145  loss_kpt: 0.264145  acc_pose: 0.995739
09/16 11:51:54 - mmengine - INFO - Epoch(train) [264][100/146]  base_lr: 2.756555e-05 lr: 2.756555e-05  eta: 0:12:05  time: 0.790917  data_time: 0.472615  memory: 16274  loss: 0.267374  loss_kpt: 0.267374  acc_pose: 0.998644
09/16 11:52:30 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:53:10 - mmengine - INFO - Epoch(train) [265][ 50/146]  base_lr: 2.706036e-05 lr: 2.706036e-05  eta: 0:10:50  time: 0.800691  data_time: 0.482990  memory: 16274  loss: 0.261857  loss_kpt: 0.261857  acc_pose: 0.996711
09/16 11:53:48 - mmengine - INFO - Epoch(train) [265][100/146]  base_lr: 2.681906e-05 lr: 2.681906e-05  eta: 0:10:10  time: 0.769020  data_time: 0.449888  memory: 16274  loss: 0.264420  loss_kpt: 0.264420  acc_pose: 0.995611
09/16 11:54:24 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:55:04 - mmengine - INFO - Epoch(train) [266][ 50/146]  base_lr: 2.639774e-05 lr: 2.639774e-05  eta: 0:08:55  time: 0.796744  data_time: 0.477842  memory: 16274  loss: 0.261364  loss_kpt: 0.261364  acc_pose: 0.994048
09/16 11:55:43 - mmengine - INFO - Epoch(train) [266][100/146]  base_lr: 2.620020e-05 lr: 2.620020e-05  eta: 0:08:15  time: 0.789565  data_time: 0.468016  memory: 16274  loss: 0.265361  loss_kpt: 0.265361  acc_pose: 0.996531
09/16 11:56:19 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:56:59 - mmengine - INFO - Epoch(train) [267][ 50/146]  base_lr: 2.586299e-05 lr: 2.586299e-05  eta: 0:07:00  time: 0.797424  data_time: 0.479845  memory: 16274  loss: 0.263842  loss_kpt: 0.263842  acc_pose: 0.999301
09/16 11:57:38 - mmengine - INFO - Epoch(train) [267][100/146]  base_lr: 2.570930e-05 lr: 2.570930e-05  eta: 0:06:20  time: 0.778184  data_time: 0.459681  memory: 16274  loss: 0.265267  loss_kpt: 0.265267  acc_pose: 0.998400
09/16 11:58:14 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:58:29 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 11:58:55 - mmengine - INFO - Epoch(train) [268][ 50/146]  base_lr: 2.545637e-05 lr: 2.545637e-05  eta: 0:05:05  time: 0.810929  data_time: 0.489610  memory: 16274  loss: 0.264317  loss_kpt: 0.264317  acc_pose: 0.996424
09/16 11:59:34 - mmengine - INFO - Epoch(train) [268][100/146]  base_lr: 2.534662e-05 lr: 2.534662e-05  eta: 0:04:26  time: 0.792355  data_time: 0.473089  memory: 16274  loss: 0.263940  loss_kpt: 0.263940  acc_pose: 0.998595
09/16 12:00:09 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 12:00:49 - mmengine - INFO - Epoch(train) [269][ 50/146]  base_lr: 2.517812e-05 lr: 2.517812e-05  eta: 0:03:10  time: 0.799769  data_time: 0.479793  memory: 16274  loss: 0.263761  loss_kpt: 0.263761  acc_pose: 0.997862
09/16 12:01:28 - mmengine - INFO - Epoch(train) [269][100/146]  base_lr: 2.511237e-05 lr: 2.511237e-05  eta: 0:02:31  time: 0.773840  data_time: 0.454775  memory: 16274  loss: 0.264439  loss_kpt: 0.264439  acc_pose: 0.994566
09/16 12:02:04 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 12:02:44 - mmengine - INFO - Epoch(train) [270][ 50/146]  base_lr: 2.502839e-05 lr: 2.502839e-05  eta: 0:01:15  time: 0.803597  data_time: 0.485507  memory: 16274  loss: 0.259824  loss_kpt: 0.259824  acc_pose: 0.997299
09/16 12:03:23 - mmengine - INFO - Epoch(train) [270][100/146]  base_lr: 2.500666e-05 lr: 2.500666e-05  eta: 0:00:36  time: 0.782022  data_time: 0.464158  memory: 16274  loss: 0.265890  loss_kpt: 0.265890  acc_pose: 0.998595
09/16 12:03:58 - mmengine - INFO - Exp name: pose2_20230916_112532
09/16 12:03:58 - mmengine - INFO - Saving checkpoint at 270 epochs
09/17 10:30:20 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:30:20 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(
            loss_weight=0.001,
            type='BCELoss',
            use_sigmoid=True,
            use_target_weight=True),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                init_cfg=dict(
                    checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
                    prefix='head.',
                    type='Pretrained'),
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 158, in main
    runner = Runner.from_cfg(cfg)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 445, in from_cfg
    runner = cls(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 412, in __init__
    self.model = self.build_model(model)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 819, in build_model
    model = MODELS.build(model)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 47, in __init__
    super().__init__(
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 59, in __init__
    self.head = MODELS.build(head)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
  File "/home/txy/code/CastPose/mmpose/models/heads/hybrid_heads/vis_head.py", line 55, in __init__
    self.loss_module = MODELS.build(loss)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
TypeError: BCELoss.__init__() got an unexpected keyword argument 'use_sigmoid'
09/17 10:36:34 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:36:34 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(loss_weight=0.001, type='BCELoss', use_target_weight=True),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                init_cfg=dict(
                    checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
                    prefix='head.',
                    type='Pretrained'),
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 158, in main
    runner = Runner.from_cfg(cfg)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 445, in from_cfg
    runner = cls(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 412, in __init__
    self.model = self.build_model(model)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 819, in build_model
    model = MODELS.build(model)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 47, in __init__
    super().__init__(
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 59, in __init__
    self.head = MODELS.build(head)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
  File "/home/txy/code/CastPose/mmpose/models/heads/hybrid_heads/vis_head.py", line 57, in __init__
    self.pose_head = MODELS.build(pose_cfg)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
  File "/home/txy/code/CastPose/mmpose/models/heads/coord_cls_heads/rtmcc_head.py", line 91, in __init__
    self.loss_module = MODELS.build(loss)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/registry.py", line 570, in build
    return self.build_func(cfg, *args, **kwargs, registry=self)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 232, in build_model_from_cfg
    return build_from_cfg(cfg, registry, default_args)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/registry/build_functions.py", line 121, in build_from_cfg
    obj = obj_cls(**args)  # type: ignore
TypeError: KLDiscretLoss.__init__() got an unexpected keyword argument 'init_cfg'
09/17 10:37:37 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:37:38 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(loss_weight=0.001, type='BCELoss', use_target_weight=True),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/17 10:37:40 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/17 10:37:40 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- head.pose_head.final_layer.bias:weight_decay=0.0
09/17 10:37:42 - mmengine - INFO - paramwise_options -- head.vis_head.2.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/17 10:37:43 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/17 10:37:43 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/17 10:37:43 - mmengine - WARNING - The prefix is not set in metric class NME.
09/17 10:37:43 - mmengine - INFO - load backbone. in model from: pth/dwpose/dw-ll-ucoco-384.pth
Loads checkpoint by local backend from path: pth/dwpose/dw-ll-ucoco-384.pth
09/17 10:37:43 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

09/17 10:37:43 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/17 10:37:43 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/17 10:37:43 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 239, in forward
    x_main = self.main_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 108.00 MiB (GPU 0; 23.65 GiB total capacity; 3.80 GiB already allocated; 24.75 MiB free; 3.84 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/17 10:41:29 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:41:30 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(loss_weight=0.001, type='BCELoss', use_target_weight=True),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/17 10:41:32 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/17 10:41:32 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- head.pose_head.final_layer.bias:weight_decay=0.0
09/17 10:41:34 - mmengine - INFO - paramwise_options -- head.vis_head.2.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/17 10:41:35 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/17 10:41:35 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/17 10:41:35 - mmengine - WARNING - The prefix is not set in metric class NME.
09/17 10:41:35 - mmengine - INFO - load backbone. in model from: pth/dwpose/dw-ll-ucoco-384.pth
Loads checkpoint by local backend from path: pth/dwpose/dw-ll-ucoco-384.pth
09/17 10:41:35 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

09/17 10:41:35 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/17 10:41:35 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/17 10:41:35 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 74, in loss
    self.head.loss(feats, data_samples, train_cfg=self.train_cfg))
  File "/home/txy/code/CastPose/mmpose/models/heads/hybrid_heads/vis_head.py", line 215, in loss
    loss_vis = self.loss_module(vis_pred_outputs, vis_labels)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/losses/classification_loss.py", line 45, in forward
    assert target_weight is not None
AssertionError
09/17 10:45:10 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:45:10 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(loss_weight=0.001, type='BCELoss'),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/17 10:45:12 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/17 10:45:12 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- head.pose_head.final_layer.bias:weight_decay=0.0
09/17 10:45:15 - mmengine - INFO - paramwise_options -- head.vis_head.2.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/17 10:45:15 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/17 10:45:15 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/17 10:45:15 - mmengine - WARNING - The prefix is not set in metric class NME.
09/17 10:45:15 - mmengine - INFO - load backbone. in model from: pth/dwpose/dw-ll-ucoco-384.pth
Loads checkpoint by local backend from path: pth/dwpose/dw-ll-ucoco-384.pth
09/17 10:45:16 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

09/17 10:45:16 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/17 10:45:16 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/17 10:45:16 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [32,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [35,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [37,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [42,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [44,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [46,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [47,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [51,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [53,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [60,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [61,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [63,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [0,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [1,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [2,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [4,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [6,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [7,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [8,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [11,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [13,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [15,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [16,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [20,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [22,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [29,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [30,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [96,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [97,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [98,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [104,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [106,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [107,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [108,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [110,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [112,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [113,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [114,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [117,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [119,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [121,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [122,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [126,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [96,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [104,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [105,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [107,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [108,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [109,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [111,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [112,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [113,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [116,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [117,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [118,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [119,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [120,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [1,0,0], thread: [126,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [64,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [66,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [68,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [69,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [73,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [75,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [82,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [83,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [85,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [86,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [87,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [89,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [90,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [91,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [92,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [94,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [95,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [32,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [33,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [34,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [36,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [37,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [38,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [39,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [41,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [42,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [43,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [44,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [45,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [50,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [51,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [53,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [54,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [55,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [57,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [59,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [60,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [2,0,0], thread: [61,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [64,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [65,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [67,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [68,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [69,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [70,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [72,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [73,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [74,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [75,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [76,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [81,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [82,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [84,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [85,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [86,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [88,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [90,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [91,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [92,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [3,0,0], thread: [95,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [0,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [1,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [6,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [7,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [9,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [10,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [11,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [13,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [15,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [16,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [17,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [20,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [22,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [24,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [25,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [29,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [4,0,0], thread: [31,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [2,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [4,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [6,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [7,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [11,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [13,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [20,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [21,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [23,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [24,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [25,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [27,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [28,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [29,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [30,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [97,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [98,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [99,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [101,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [103,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [104,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [105,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [108,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [110,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [112,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [113,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [117,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [119,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [126,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [127,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [64,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [66,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [73,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [74,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [76,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [77,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [78,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [80,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [81,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [82,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [83,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [85,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [86,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [87,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [88,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [89,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [95,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [32,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [33,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [34,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [35,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [36,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [42,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [44,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [45,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [46,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [48,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [50,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [51,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [52,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [55,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [57,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [59,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [0,0,0], thread: [60,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [0,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [2,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [3,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [7,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [9,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [16,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [17,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [19,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [20,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [21,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [23,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [24,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [25,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [26,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [28,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [29,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [30,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [31,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [32,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [38,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [40,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [41,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [42,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [44,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [46,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [47,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [48,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [51,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [53,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [55,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [56,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [60,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [62,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [97,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [99,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [100,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [101,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [104,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [106,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [108,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [109,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [113,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [115,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [122,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [123,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [125,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [126,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [127,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [67,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [69,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [72,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [73,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [74,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [76,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [77,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [78,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [79,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [81,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [82,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [83,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [84,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [85,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [90,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [91,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [93,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [94,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [5,0,0], thread: [95,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [96,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [98,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [99,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [100,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [102,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [104,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [107,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [110,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [114,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [116,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [117,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [118,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [122,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [124,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [125,0,0] Assertion `input_val >= zero && input_val <= one` failed.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 74, in loss
    self.head.loss(feats, data_samples, train_cfg=self.train_cfg))
  File "/home/txy/code/CastPose/mmpose/models/heads/hybrid_heads/vis_head.py", line 220, in loss
    acc_vis = self.vis_accuracy(vis_pred_outputs, vis_labels)
  File "/home/txy/code/CastPose/mmpose/models/heads/hybrid_heads/vis_head.py", line 188, in vis_accuracy
    correct = torch.sum(predictions == labels).item()
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [32,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [33,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [35,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [36,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [40,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [41,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [43,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [45,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [46,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [47,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [49,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [51,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [54,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [57,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [61,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [63,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [64,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [65,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [69,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [71,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [72,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [76,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [77,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [79,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [80,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [81,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [82,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [83,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [85,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [86,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [88,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [89,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [93,0,0] Assertion `input_val >= zero && input_val <= one` failed.
/opt/conda/conda-bld/pytorch_1670525541990/work/aten/src/ATen/native/cuda/Loss.cu:92: operator(): block: [6,0,0], thread: [94,0,0] Assertion `input_val >= zero && input_val <= one` failed.
09/17 10:47:14 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:47:15 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(loss_weight=0.001, type='BCELoss'),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=64,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=64,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/17 10:47:17 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/17 10:47:17 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- head.pose_head.final_layer.bias:weight_decay=0.0
09/17 10:47:19 - mmengine - INFO - paramwise_options -- head.vis_head.2.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/17 10:47:20 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/17 10:47:20 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/17 10:47:20 - mmengine - WARNING - The prefix is not set in metric class NME.
09/17 10:47:20 - mmengine - INFO - load backbone. in model from: pth/dwpose/dw-ll-ucoco-384.pth
Loads checkpoint by local backend from path: pth/dwpose/dw-ll-ucoco-384.pth
09/17 10:47:20 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

09/17 10:47:20 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/17 10:47:20 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/17 10:47:20 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 239, in forward
    x_main = self.main_conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmcv/cnn/bricks/conv_module.py", line 279, in forward
    x = self.conv(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 108.00 MiB (GPU 0; 23.65 GiB total capacity; 3.80 GiB already allocated; 24.75 MiB free; 3.84 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
09/17 10:49:16 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Jul  5 2023, 18:54:27) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0,1: NVIDIA GeForce RTX 4090
    CUDA_HOME: /usr
    NVCC: Cuda compilation tools, release 11.5, V11.5.119
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 1.13.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.1
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

09/17 10:49:17 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=512)
backend_args = dict(backend='local')
base_lr = 0.0005
codec = dict(
    input_size=(
        288,
        384,
    ),
    normalize=False,
    sigma=(
        6.0,
        6.93,
    ),
    simcc_split_ratio=2.0,
    type='SimCCLabel',
    use_dark=False)
custom_hooks = [
    dict(
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        priority=55,
        type='EMAHook',
        update_buffers=True),
    dict(
        switch_epoch=350,
        switch_pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=75,
                scale_factor=[
                    0.75,
                    1.75,
                ],
                shift_factor=0.0,
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.4,
                        max_holes=1,
                        max_width=0.4,
                        min_height=0.2,
                        min_holes=1,
                        min_width=0.2,
                        p=0.5,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        type='mmdet.PipelineSwitchHook'),
]
data_mode = 'topdown'
data_root = '/home/txy/data/qx_datasets/'
dataset_coco = dict(
    ann_file='coco_json_body_1/train_coco_new.json',
    data_mode='topdown',
    data_prefix=dict(img='images/'),
    data_root='/home/txy/data/qx_datasets/',
    pipeline=[],
    type='QXCastPoseDatasets')
dataset_type = 'QXCastPoseDatasets'
datasets = [
    dict(
        ann_file='coco_json_body_1/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
    dict(
        ann_file='coco_json_body/train_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[],
        type='QXCastPoseDatasets'),
]
default_hooks = dict(
    checkpoint=dict(
        interval=10,
        max_keep_ckpts=10,
        rule='greater',
        save_best='PCK',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(
        enable=True,
        interval=500,
        out_dir=None,
        show=True,
        type='PoseVisualizationHook',
        wait_time=2))
default_scope = 'mmpose'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(
    by_epoch=True, num_digits=6, type='LogProcessor', window_size=50)
max_epochs = 350
model = dict(
    backbone=dict(
        _scope_='mmdet',
        act_cfg=dict(type='PReLU'),
        arch='P5',
        channel_attention=True,
        deepen_factor=1.0,
        expand_ratio=0.5,
        init_cfg=dict(
            checkpoint='pth/dwpose/dw-ll-ucoco-384.pth',
            prefix='backbone.',
            type='Pretrained'),
        norm_cfg=dict(type='SyncBN'),
        out_indices=(4, ),
        type='CSPNeXt',
        widen_factor=1.0),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='PoseDataPreprocessor'),
    head=dict(
        loss=dict(loss_weight=0.001, type='BCELoss'),
        pose_cfg=dict(
            decoder=dict(
                input_size=(
                    288,
                    384,
                ),
                normalize=False,
                sigma=(
                    6.0,
                    6.93,
                ),
                simcc_split_ratio=2.0,
                type='SimCCLabel',
                use_dark=False),
            final_layer_kernel_size=7,
            gau_cfg=dict(
                act_fn='PReLU',
                drop_path=0.0,
                dropout_rate=0.0,
                expansion_factor=2,
                hidden_dims=256,
                pos_enc=False,
                s=128,
                use_rel_bias=False),
            in_channels=1024,
            in_featuremap_size=(
                9,
                12,
            ),
            input_size=(
                288,
                384,
            ),
            loss=dict(
                beta=50.0,
                label_softmax=True,
                type='KLDiscretLoss',
                use_target_weight=True),
            out_channels=53,
            simcc_split_ratio=2.0,
            type='RTMCCHead'),
        type='VisPredictHead'),
    test_cfg=dict(flip_test=True),
    type='TopdownPoseEstimator')
optim_wrapper = dict(
    optimizer=dict(lr=0.0005, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(
        bias_decay_mult=0, bypass_duplicate=True, norm_decay_mult=0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1000, start_factor=1e-05,
        type='LinearLR'),
    dict(
        T_max=175,
        begin=175,
        by_epoch=True,
        convert_to_iter_based=True,
        end=350,
        eta_min=2.5e-05,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=21)
resume = False
stage2_num_epochs = 0
test_cfg = dict()
test_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
train_cfg = dict(by_epoch=True, max_epochs=350, val_interval=50)
train_dataloader = dict(
    batch_size=32,
    dataset=dict(
        datasets=[
            dict(
                ann_file='coco_json_body_1/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
            dict(
                ann_file='coco_json_body/train_coco_new.json',
                data_mode='topdown',
                data_prefix=dict(img='images/'),
                data_root='/home/txy/data/qx_datasets/',
                pipeline=[],
                type='QXCastPoseDatasets'),
        ],
        metainfo=dict(
            from_file=
            '/home/txy/code/CastPose/configs/_base_/datasets/qx_castpose.py'),
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(direction='horizontal', type='RandomFlip'),
            dict(type='RandomHalfBody'),
            dict(
                rotate_factor=85,
                scale_factor=[
                    0.6,
                    1.4,
                ],
                type='RandomBBoxTransform'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                transforms=[
                    dict(p=0.1, type='Blur'),
                    dict(p=0.1, type='MedianBlur'),
                    dict(
                        max_height=0.5,
                        max_holes=1,
                        max_width=0.5,
                        min_height=0.3,
                        min_holes=1,
                        min_width=0.3,
                        p=1.0,
                        type='CoarseDropout'),
                ],
                type='Albumentation'),
            dict(
                encoder=dict(
                    input_size=(
                        288,
                        384,
                    ),
                    normalize=False,
                    sigma=(
                        6.0,
                        6.93,
                    ),
                    simcc_split_ratio=2.0,
                    type='SimCCLabel',
                    use_dark=False),
                type='GenerateTarget'),
            dict(type='PackPoseInputs'),
        ],
        test_mode=False,
        type='CombinedDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=85,
        scale_factor=[
            0.6,
            1.4,
        ],
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.5,
                max_holes=1,
                max_width=0.5,
                min_height=0.3,
                min_holes=1,
                min_width=0.3,
                p=1.0,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
train_pipeline_stage2 = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(direction='horizontal', type='RandomFlip'),
    dict(type='RandomHalfBody'),
    dict(
        rotate_factor=75,
        scale_factor=[
            0.75,
            1.75,
        ],
        shift_factor=0.0,
        type='RandomBBoxTransform'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        transforms=[
            dict(p=0.1, type='Blur'),
            dict(p=0.1, type='MedianBlur'),
            dict(
                max_height=0.4,
                max_holes=1,
                max_width=0.4,
                min_height=0.2,
                min_holes=1,
                min_width=0.2,
                p=0.5,
                type='CoarseDropout'),
        ],
        type='Albumentation'),
    dict(
        encoder=dict(
            input_size=(
                288,
                384,
            ),
            normalize=False,
            sigma=(
                6.0,
                6.93,
            ),
            simcc_split_ratio=2.0,
            type='SimCCLabel',
            use_dark=False),
        type='GenerateTarget'),
    dict(type='PackPoseInputs'),
]
val_cfg = dict()
val_dataloader = dict(
    batch_size=32,
    dataset=dict(
        ann_file='coco_json_body_1/val_coco_new.json',
        data_mode='topdown',
        data_prefix=dict(img='images/'),
        data_root='/home/txy/data/qx_datasets/',
        pipeline=[
            dict(backend_args=dict(backend='local'), type='LoadImage'),
            dict(type='GetBBoxCenterScale'),
            dict(input_size=(
                288,
                384,
            ), type='TopdownAffine'),
            dict(type='PackPoseInputs'),
        ],
        type='QXCastPoseDatasets'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(round_up=False, shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        ann_file=
        '/home/txy/data/qx_datasets/coco_json_body_1/val_coco_new.json',
        type='CocoMetric'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(keypoint_indices=[
        0,
        1,
    ], norm_mode='keypoint_distance', type='NME'),
]
val_pipeline = [
    dict(backend_args=dict(backend='local'), type='LoadImage'),
    dict(type='GetBBoxCenterScale'),
    dict(input_size=(
        288,
        384,
    ), type='TopdownAffine'),
    dict(type='PackPoseInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='PoseLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'work_dirs/2'

09/17 10:49:19 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
/home/txy/code/CastPose/mmpose/engine/hooks/visualization_hook.py:66: UserWarning: The show is True, it means that only the prediction results are visualized without storing data, so vis_backends needs to be excluded.
  warnings.warn('The show is True, it means that only '
09/17 10:49:19 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(55          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_save_checkpoint:
(55          ) EMAHook                            
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(55          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: Blur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: MedianBlur is not pixel-level transformations. Please use with caution.
  warnings.warn(
/home/txy/code/CastPose/mmpose/datasets/transforms/common_transforms.py:648: UserWarning: CoarseDropout is not pixel-level transformations. Please use with caution.
  warnings.warn(
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
loading annotations into memory...
Done (t=0.09s)
creating index...
index created!
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.3.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.4.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.5.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv1.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.depthwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.weight:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.2.conv2.pointwise_conv.bn.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- head.pose_head.final_layer.bias:weight_decay=0.0
09/17 10:49:21 - mmengine - INFO - paramwise_options -- head.vis_head.2.bias:weight_decay=0.0
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
loading annotations into memory...
Done (t=0.02s)
creating index...
index created!
09/17 10:49:21 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
09/17 10:49:21 - mmengine - WARNING - The prefix is not set in metric class AUC.
09/17 10:49:21 - mmengine - WARNING - The prefix is not set in metric class NME.
09/17 10:49:22 - mmengine - INFO - load backbone. in model from: pth/dwpose/dw-ll-ucoco-384.pth
Loads checkpoint by local backend from path: pth/dwpose/dw-ll-ucoco-384.pth
09/17 10:49:22 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: stem.0.activate.weight, stem.1.activate.weight, stem.2.activate.weight, stage1.0.activate.weight, stage1.1.main_conv.activate.weight, stage1.1.short_conv.activate.weight, stage1.1.final_conv.activate.weight, stage1.1.blocks.0.conv1.activate.weight, stage1.1.blocks.0.conv2.depthwise_conv.activate.weight, stage1.1.blocks.0.conv2.pointwise_conv.activate.weight, stage1.1.blocks.1.conv1.activate.weight, stage1.1.blocks.1.conv2.depthwise_conv.activate.weight, stage1.1.blocks.1.conv2.pointwise_conv.activate.weight, stage1.1.blocks.2.conv1.activate.weight, stage1.1.blocks.2.conv2.depthwise_conv.activate.weight, stage1.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.0.activate.weight, stage2.1.main_conv.activate.weight, stage2.1.short_conv.activate.weight, stage2.1.final_conv.activate.weight, stage2.1.blocks.0.conv1.activate.weight, stage2.1.blocks.0.conv2.depthwise_conv.activate.weight, stage2.1.blocks.0.conv2.pointwise_conv.activate.weight, stage2.1.blocks.1.conv1.activate.weight, stage2.1.blocks.1.conv2.depthwise_conv.activate.weight, stage2.1.blocks.1.conv2.pointwise_conv.activate.weight, stage2.1.blocks.2.conv1.activate.weight, stage2.1.blocks.2.conv2.depthwise_conv.activate.weight, stage2.1.blocks.2.conv2.pointwise_conv.activate.weight, stage2.1.blocks.3.conv1.activate.weight, stage2.1.blocks.3.conv2.depthwise_conv.activate.weight, stage2.1.blocks.3.conv2.pointwise_conv.activate.weight, stage2.1.blocks.4.conv1.activate.weight, stage2.1.blocks.4.conv2.depthwise_conv.activate.weight, stage2.1.blocks.4.conv2.pointwise_conv.activate.weight, stage2.1.blocks.5.conv1.activate.weight, stage2.1.blocks.5.conv2.depthwise_conv.activate.weight, stage2.1.blocks.5.conv2.pointwise_conv.activate.weight, stage3.0.activate.weight, stage3.1.main_conv.activate.weight, stage3.1.short_conv.activate.weight, stage3.1.final_conv.activate.weight, stage3.1.blocks.0.conv1.activate.weight, stage3.1.blocks.0.conv2.depthwise_conv.activate.weight, stage3.1.blocks.0.conv2.pointwise_conv.activate.weight, stage3.1.blocks.1.conv1.activate.weight, stage3.1.blocks.1.conv2.depthwise_conv.activate.weight, stage3.1.blocks.1.conv2.pointwise_conv.activate.weight, stage3.1.blocks.2.conv1.activate.weight, stage3.1.blocks.2.conv2.depthwise_conv.activate.weight, stage3.1.blocks.2.conv2.pointwise_conv.activate.weight, stage3.1.blocks.3.conv1.activate.weight, stage3.1.blocks.3.conv2.depthwise_conv.activate.weight, stage3.1.blocks.3.conv2.pointwise_conv.activate.weight, stage3.1.blocks.4.conv1.activate.weight, stage3.1.blocks.4.conv2.depthwise_conv.activate.weight, stage3.1.blocks.4.conv2.pointwise_conv.activate.weight, stage3.1.blocks.5.conv1.activate.weight, stage3.1.blocks.5.conv2.depthwise_conv.activate.weight, stage3.1.blocks.5.conv2.pointwise_conv.activate.weight, stage4.0.activate.weight, stage4.1.conv1.activate.weight, stage4.1.conv2.activate.weight, stage4.2.main_conv.activate.weight, stage4.2.short_conv.activate.weight, stage4.2.final_conv.activate.weight, stage4.2.blocks.0.conv1.activate.weight, stage4.2.blocks.0.conv2.depthwise_conv.activate.weight, stage4.2.blocks.0.conv2.pointwise_conv.activate.weight, stage4.2.blocks.1.conv1.activate.weight, stage4.2.blocks.1.conv2.depthwise_conv.activate.weight, stage4.2.blocks.1.conv2.pointwise_conv.activate.weight, stage4.2.blocks.2.conv1.activate.weight, stage4.2.blocks.2.conv2.depthwise_conv.activate.weight, stage4.2.blocks.2.conv2.pointwise_conv.activate.weight

09/17 10:49:22 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
09/17 10:49:22 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
09/17 10:49:22 - mmengine - INFO - Checkpoints will be saved to /home/txy/code/CastPose/work_dirs/2.
Traceback (most recent call last):
  File "/home/txy/code/CastPose/train.py", line 165, in <module>
    main()
  File "/home/txy/code/CastPose/train.py", line 161, in main
    runner.train()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/runner.py", line 1745, in train
    model = self.train_loop.run()  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 96, in run
    self.run_epoch()
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 112, in run_epoch
    self.run_iter(idx, data_batch)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/runner/loops.py", line 128, in run_iter
    outputs = self.runner.model.train_step(
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 114, in train_step
    losses = self._run_forward(data, mode='loss')  # type: ignore
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/mmengine/model/base_model/base_model.py", line 340, in _run_forward
    results = self(**data, mode=mode)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 136, in forward
    return self.loss(inputs, data_samples)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/topdown.py", line 68, in loss
    feats = self.extract_feat(inputs)
  File "/home/txy/code/CastPose/mmpose/models/pose_estimators/base.py", line 188, in extract_feat
    x = self.backbone(inputs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/backbones/cspnext.py", line 192, in forward
    x = layer(x)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/csp_layer.py", line 245, in forward
    x_final = self.attention(x_final)
  File "/home/txy/anaconda3/envs/mmpose/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/txy/code/mmdetection-main/mmdet/models/layers/se_layer.py", line 162, in forward
    return x * out
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 108.00 MiB (GPU 0; 23.65 GiB total capacity; 3.70 GiB already allocated; 22.75 MiB free; 3.84 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
usage: train2.py [-h] [--config CONFIG] [--work-dir WORK_DIR]
                 [--resume [RESUME]] [--amp] [--no-validate] [--auto-scale-lr]
                 [--show-dir SHOW_DIR] [--show] [--interval INTERVAL]
                 [--wait-time WAIT_TIME]
                 [--cfg-options CFG_OPTIONS [CFG_OPTIONS ...]]
                 [--launcher {none,pytorch,slurm,mpi}]
                 [--local_rank LOCAL_RANK]
train2.py: error: unrecognized arguments: work_dirs/castpose_all/castpose_whole.py
